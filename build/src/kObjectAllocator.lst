GAS LISTING /tmp/cc8hdfYh.s 			page 1


   1              		.file	"kObjectAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 20202020 		.string	"    "
   9      00
  10 0005 000000   		.align	3
  11              	.LC1:
  12 0008 2000     		.string	" "
  13 000a 00000000 		.align	3
  13      0000
  14              	.LC2:
  15 0010 202000   		.string	"  "
  16 0013 00000000 		.align	3
  16      00
  17              	.LC3:
  18 0018 0A00     		.string	"\n"
  19 001a 00000000 		.align	3
  19      0000
  20              	.LC4:
  21 0020 2D2D2D2D 		.string	"----"
  21      00
  22 0025 000000   		.align	3
  23              	.LC5:
  24 0028 2D2D2D2D 		.string	"----  "
  24      202000
  25              		.text
  26              		.align	2
  27              		.globl	_ZN16KObjectAllocator19printInternalMemoryEv
  29              	_ZN16KObjectAllocator19printInternalMemoryEv:
  30              	.LFB16:
  31              		.file 1 "src/kObjectAllocator.cpp"
   1:src/kObjectAllocator.cpp **** #include "../h/kObjectAllocator.hpp"
   2:src/kObjectAllocator.cpp **** #include "../h/print.hpp"
   3:src/kObjectAllocator.cpp **** 
   4:src/kObjectAllocator.cpp **** void KObjectAllocator::printInternalMemory() {
  32              		.loc 1 4 46
  33              		.cfi_startproc
  34              	.LVL0:
  35 0000 130101FC 		addi	sp,sp,-64
  36              		.cfi_def_cfa_offset 64
  37 0004 233C1102 		sd	ra,56(sp)
  38 0008 23388102 		sd	s0,48(sp)
  39 000c 23349102 		sd	s1,40(sp)
  40 0010 23302103 		sd	s2,32(sp)
  41 0014 233C3101 		sd	s3,24(sp)
  42 0018 23384101 		sd	s4,16(sp)
  43 001c 23345101 		sd	s5,8(sp)
  44 0020 23306101 		sd	s6,0(sp)
  45              		.cfi_offset 1, -8
  46              		.cfi_offset 8, -16
  47              		.cfi_offset 9, -24
  48              		.cfi_offset 18, -32
GAS LISTING /tmp/cc8hdfYh.s 			page 2


  49              		.cfi_offset 19, -40
  50              		.cfi_offset 20, -48
  51              		.cfi_offset 21, -56
  52              		.cfi_offset 22, -64
  53 0024 13040104 		addi	s0,sp,64
  54              		.cfi_def_cfa 8, 0
  55 0028 93040500 		mv	s1,a0
   5:src/kObjectAllocator.cpp ****     size_t segmentSize = 16, printedBytes = 0;
  56              		.loc 1 5 5
  57              	.LVL1:
  58              		.loc 1 5 30 is_stmt 0
  59 002c 930A0000 		li	s5,0
  60 0030 6F00000F 		j	.L11
  61              	.LVL2:
  62              	.L27:
  63              	.LBB2:
  64              	.LBB3:
  65              	.LBB4:
  66              	.LBB5:
   6:src/kObjectAllocator.cpp ****     while (printedBytes < memorySizeForBits) {
   7:src/kObjectAllocator.cpp ****         for (size_t i = 0; i < numberOfAllocations; ++i) {
   8:src/kObjectAllocator.cpp ****             for (size_t j = 0; j < segmentSize; ++j) {
   9:src/kObjectAllocator.cpp ****                 if (j + printedBytes >= memorySizeForBits) printString("    ");
  67              		.loc 1 9 60 is_stmt 1 discriminator 1
  68              		.loc 1 9 71 is_stmt 0 discriminator 1
  69 0034 17050000 		lla	a0,.LC0
  69      13050500 
  70 003c 97000000 		call	_Z11printStringPKc@plt
  70      E7800000 
  71              	.LVL3:
  72 0044 6F00C004 		j	.L6
  73              	.L28:
  10:src/kObjectAllocator.cpp ****                 else {
  11:src/kObjectAllocator.cpp ****                     if (bitVectors[i][j + printedBytes] / 100 == 0) printInteger((uint8) 0);
  74              		.loc 1 11 69 is_stmt 1 discriminator 1
  75              		.loc 1 11 81 is_stmt 0 discriminator 1
  76 0048 13050000 		li	a0,0
  77 004c 97000000 		call	_Z12printIntegerm@plt
  77      E7800000 
  78              	.LVL4:
  79 0054 6F004007 		j	.L7
  80              	.L29:
  12:src/kObjectAllocator.cpp ****                     if (bitVectors[i][j + printedBytes] / 10 == 0) printInteger((uint8) 0);
  81              		.loc 1 12 68 is_stmt 1 discriminator 1
  82              		.loc 1 12 80 is_stmt 0 discriminator 1
  83 0058 13050000 		li	a0,0
  84 005c 97000000 		call	_Z12printIntegerm@plt
  84      E7800000 
  85              	.LVL5:
  86              	.L8:
  13:src/kObjectAllocator.cpp ****                     printInteger((uint64) bitVectors[i][j + printedBytes]);
  87              		.loc 1 13 21 is_stmt 1
  88              		.loc 1 13 43 is_stmt 0
  89 0064 83B78402 		ld	a5,40(s1)
  90              		.loc 1 13 55
  91 0068 B3874701 		add	a5,a5,s4
  92 006c 83B70700 		ld	a5,0(a5)
GAS LISTING /tmp/cc8hdfYh.s 			page 3


  93              		.loc 1 13 73
  94 0070 B3893701 		add	s3,a5,s3
  95              		.loc 1 13 33
  96 0074 03C50900 		lbu	a0,0(s3)
  97 0078 97000000 		call	_Z12printIntegerm@plt
  97      E7800000 
  98              	.LVL6:
  14:src/kObjectAllocator.cpp ****                     printString(" ");
  99              		.loc 1 14 21 is_stmt 1
 100              		.loc 1 14 32 is_stmt 0
 101 0080 17050000 		lla	a0,.LC1
 101      13050500 
 102 0088 97000000 		call	_Z11printStringPKc@plt
 102      E7800000 
 103              	.LVL7:
 104              	.L6:
   8:src/kObjectAllocator.cpp ****                 if (j + printedBytes >= memorySizeForBits) printString("    ");
 105              		.loc 1 8 13 is_stmt 1 discriminator 2
 106 0090 13091900 		addi	s2,s2,1
 107              	.LVL8:
 108              	.L9:
   8:src/kObjectAllocator.cpp ****                 if (j + printedBytes >= memorySizeForBits) printString("    ");
 109              		.loc 1 8 34 discriminator 1
 110 0094 9307F000 		li	a5,15
 111 0098 63E82705 		bgtu	s2,a5,.L4
   9:src/kObjectAllocator.cpp ****                 else {
 112              		.loc 1 9 17
   9:src/kObjectAllocator.cpp ****                 else {
 113              		.loc 1 9 23 is_stmt 0
 114 009c B3892A01 		add	s3,s5,s2
   9:src/kObjectAllocator.cpp ****                 else {
 115              		.loc 1 9 41
 116 00a0 83B70401 		ld	a5,16(s1)
   9:src/kObjectAllocator.cpp ****                 else {
 117              		.loc 1 9 17
 118 00a4 E3F8F9F8 		bgeu	s3,a5,.L27
  11:src/kObjectAllocator.cpp ****                     if (bitVectors[i][j + printedBytes] / 10 == 0) printInteger((uint8) 0);
 119              		.loc 1 11 21 is_stmt 1
  11:src/kObjectAllocator.cpp ****                     if (bitVectors[i][j + printedBytes] / 10 == 0) printInteger((uint8) 0);
 120              		.loc 1 11 25 is_stmt 0
 121 00a8 83B78402 		ld	a5,40(s1)
  11:src/kObjectAllocator.cpp ****                     if (bitVectors[i][j + printedBytes] / 10 == 0) printInteger((uint8) 0);
 122              		.loc 1 11 37
 123 00ac 131A3B00 		slli	s4,s6,3
 124 00b0 B3874701 		add	a5,a5,s4
 125 00b4 83B70700 		ld	a5,0(a5)
  11:src/kObjectAllocator.cpp ****                     if (bitVectors[i][j + printedBytes] / 10 == 0) printInteger((uint8) 0);
 126              		.loc 1 11 55
 127 00b8 B3873701 		add	a5,a5,s3
 128 00bc 03C70700 		lbu	a4,0(a5)
  11:src/kObjectAllocator.cpp ****                     if (bitVectors[i][j + printedBytes] / 10 == 0) printInteger((uint8) 0);
 129              		.loc 1 11 21
 130 00c0 93073006 		li	a5,99
 131 00c4 E3F2E7F8 		bleu	a4,a5,.L28
 132              	.L7:
  12:src/kObjectAllocator.cpp ****                     printInteger((uint64) bitVectors[i][j + printedBytes]);
 133              		.loc 1 12 21 is_stmt 1
GAS LISTING /tmp/cc8hdfYh.s 			page 4


  12:src/kObjectAllocator.cpp ****                     printInteger((uint64) bitVectors[i][j + printedBytes]);
 134              		.loc 1 12 25 is_stmt 0
 135 00c8 83B78402 		ld	a5,40(s1)
  12:src/kObjectAllocator.cpp ****                     printInteger((uint64) bitVectors[i][j + printedBytes]);
 136              		.loc 1 12 37
 137 00cc B3874701 		add	a5,a5,s4
 138 00d0 83B70700 		ld	a5,0(a5)
  12:src/kObjectAllocator.cpp ****                     printInteger((uint64) bitVectors[i][j + printedBytes]);
 139              		.loc 1 12 55
 140 00d4 B3873701 		add	a5,a5,s3
 141 00d8 03C70700 		lbu	a4,0(a5)
  12:src/kObjectAllocator.cpp ****                     printInteger((uint64) bitVectors[i][j + printedBytes]);
 142              		.loc 1 12 21
 143 00dc 93079000 		li	a5,9
 144 00e0 E3E2E7F8 		bgtu	a4,a5,.L8
 145 00e4 6FF05FF7 		j	.L29
 146              	.L4:
 147              	.LBE5:
  15:src/kObjectAllocator.cpp ****                 }
  16:src/kObjectAllocator.cpp ****             }
  17:src/kObjectAllocator.cpp ****             printString("  ");
 148              		.loc 1 17 13 is_stmt 1 discriminator 2
 149              		.loc 1 17 24 is_stmt 0 discriminator 2
 150 00e8 17050000 		lla	a0,.LC2
 150      13050500 
 151 00f0 97000000 		call	_Z11printStringPKc@plt
 151      E7800000 
 152              	.LVL9:
 153              	.LBE4:
   7:src/kObjectAllocator.cpp ****             for (size_t j = 0; j < segmentSize; ++j) {
 154              		.loc 1 7 9 is_stmt 1 discriminator 2
 155 00f8 130B1B00 		addi	s6,s6,1
 156              	.LVL10:
 157              	.L10:
   7:src/kObjectAllocator.cpp ****             for (size_t j = 0; j < segmentSize; ++j) {
 158              		.loc 1 7 30 discriminator 1
   7:src/kObjectAllocator.cpp ****             for (size_t j = 0; j < segmentSize; ++j) {
 159              		.loc 1 7 32 is_stmt 0 discriminator 1
 160 00fc 83B70403 		ld	a5,48(s1)
   7:src/kObjectAllocator.cpp ****             for (size_t j = 0; j < segmentSize; ++j) {
 161              		.loc 1 7 30 discriminator 1
 162 0100 6376FB00 		bleu	a5,s6,.L3
 163              	.LBB7:
 164              	.LBB6:
   8:src/kObjectAllocator.cpp ****                 if (j + printedBytes >= memorySizeForBits) printString("    ");
 165              		.loc 1 8 25
 166 0104 13090000 		li	s2,0
 167 0108 6FF0DFF8 		j	.L9
 168              	.L3:
 169              	.LBE6:
 170              	.LBE7:
 171              	.LBE3:
  18:src/kObjectAllocator.cpp ****         }
  19:src/kObjectAllocator.cpp ****         printString("\n");
 172              		.loc 1 19 9 is_stmt 1
 173              		.loc 1 19 20 is_stmt 0
 174 010c 17050000 		lla	a0,.LC3
GAS LISTING /tmp/cc8hdfYh.s 			page 5


 174      13050500 
 175 0114 97000000 		call	_Z11printStringPKc@plt
 175      E7800000 
 176              	.LVL11:
  20:src/kObjectAllocator.cpp ****         printedBytes += segmentSize;
 177              		.loc 1 20 9 is_stmt 1
 178              		.loc 1 20 22 is_stmt 0
 179 011c 938A0A01 		addi	s5,s5,16
 180              	.LVL12:
 181              	.L11:
 182              	.LBE2:
   6:src/kObjectAllocator.cpp ****         for (size_t i = 0; i < numberOfAllocations; ++i) {
 183              		.loc 1 6 5 is_stmt 1
   6:src/kObjectAllocator.cpp ****         for (size_t i = 0; i < numberOfAllocations; ++i) {
 184              		.loc 1 6 25
   6:src/kObjectAllocator.cpp ****         for (size_t i = 0; i < numberOfAllocations; ++i) {
 185              		.loc 1 6 27 is_stmt 0
 186 0120 83B70401 		ld	a5,16(s1)
   6:src/kObjectAllocator.cpp ****         for (size_t i = 0; i < numberOfAllocations; ++i) {
 187              		.loc 1 6 25
 188 0124 63F6FA00 		bleu	a5,s5,.L25
 189              	.LBB9:
 190              	.LBB8:
   7:src/kObjectAllocator.cpp ****             for (size_t j = 0; j < segmentSize; ++j) {
 191              		.loc 1 7 21
 192 0128 130B0000 		li	s6,0
 193 012c 6FF01FFD 		j	.L10
 194              	.L25:
 195              	.LBE8:
 196              	.LBE9:
 197              	.LBB10:
  21:src/kObjectAllocator.cpp ****     }
  22:src/kObjectAllocator.cpp **** 
  23:src/kObjectAllocator.cpp ****     for (size_t i = 0; i < numberOfAllocations; ++i) {
 198              		.loc 1 23 17
 199 0130 93090000 		li	s3,0
 200 0134 6F008001 		j	.L2
 201              	.LVL13:
 202              	.L13:
 203              	.LBB11:
  24:src/kObjectAllocator.cpp ****         for (size_t j = 0; j < segmentSize - 1; ++j)
  25:src/kObjectAllocator.cpp ****             printString("----");
  26:src/kObjectAllocator.cpp ****         printString("----  ");
 204              		.loc 1 26 9 is_stmt 1 discriminator 2
 205              		.loc 1 26 20 is_stmt 0 discriminator 2
 206 0138 17050000 		lla	a0,.LC5
 206      13050500 
 207 0140 97000000 		call	_Z11printStringPKc@plt
 207      E7800000 
 208              	.LVL14:
 209              	.LBE11:
  23:src/kObjectAllocator.cpp ****         for (size_t j = 0; j < segmentSize - 1; ++j)
 210              		.loc 1 23 5 is_stmt 1 discriminator 2
 211 0148 93891900 		addi	s3,s3,1
 212              	.LVL15:
 213              	.L2:
  23:src/kObjectAllocator.cpp ****         for (size_t j = 0; j < segmentSize - 1; ++j)
GAS LISTING /tmp/cc8hdfYh.s 			page 6


 214              		.loc 1 23 26 discriminator 1
  23:src/kObjectAllocator.cpp ****         for (size_t j = 0; j < segmentSize - 1; ++j)
 215              		.loc 1 23 28 is_stmt 0 discriminator 1
 216 014c 83B70403 		ld	a5,48(s1)
  23:src/kObjectAllocator.cpp ****         for (size_t j = 0; j < segmentSize - 1; ++j)
 217              		.loc 1 23 26 discriminator 1
 218 0150 63F4F902 		bleu	a5,s3,.L12
 219              	.LBB13:
 220              	.LBB12:
  24:src/kObjectAllocator.cpp ****         for (size_t j = 0; j < segmentSize - 1; ++j)
 221              		.loc 1 24 21
 222 0154 13090000 		li	s2,0
 223              	.L14:
 224              	.LVL16:
  24:src/kObjectAllocator.cpp ****         for (size_t j = 0; j < segmentSize - 1; ++j)
 225              		.loc 1 24 30 is_stmt 1 discriminator 3
 226 0158 9307E000 		li	a5,14
 227 015c E3EE27FD 		bgtu	s2,a5,.L13
  25:src/kObjectAllocator.cpp ****         printString("----  ");
 228              		.loc 1 25 13 discriminator 2
  25:src/kObjectAllocator.cpp ****         printString("----  ");
 229              		.loc 1 25 24 is_stmt 0 discriminator 2
 230 0160 17050000 		lla	a0,.LC4
 230      13050500 
 231 0168 97000000 		call	_Z11printStringPKc@plt
 231      E7800000 
 232              	.LVL17:
  24:src/kObjectAllocator.cpp ****         for (size_t j = 0; j < segmentSize - 1; ++j)
 233              		.loc 1 24 9 is_stmt 1 discriminator 2
 234 0170 13091900 		addi	s2,s2,1
 235              	.LVL18:
 236 0174 6FF05FFE 		j	.L14
 237              	.LVL19:
 238              	.L12:
 239              	.LBE12:
 240              	.LBE13:
 241              	.LBE10:
  27:src/kObjectAllocator.cpp ****     }
  28:src/kObjectAllocator.cpp ****     printString("\n");
 242              		.loc 1 28 5
 243              		.loc 1 28 16 is_stmt 0
 244 0178 17050000 		lla	a0,.LC3
 244      13050500 
 245 0180 97000000 		call	_Z11printStringPKc@plt
 245      E7800000 
 246              	.LVL20:
  29:src/kObjectAllocator.cpp **** 
  30:src/kObjectAllocator.cpp ****     printedBytes = memorySizeForBits;
 247              		.loc 1 30 5 is_stmt 1
 248              		.loc 1 30 18 is_stmt 0
 249 0188 03BA0401 		ld	s4,16(s1)
 250              	.LVL21:
 251 018c 6F000010 		j	.L24
 252              	.LVL22:
 253              	.L30:
 254              	.LBB14:
 255              	.LBB15:
GAS LISTING /tmp/cc8hdfYh.s 			page 7


 256              	.LBB16:
 257              	.LBB17:
  31:src/kObjectAllocator.cpp ****     while(printedBytes < initialNumberOfObjects * objectSize) {
  32:src/kObjectAllocator.cpp ****         for (size_t i = 0; i < numberOfAllocations; ++i) {
  33:src/kObjectAllocator.cpp ****             for (size_t j = 0; j < segmentSize; ++j) {
  34:src/kObjectAllocator.cpp ****                 if (j + printedBytes - memorySizeForBits >= initialNumberOfObjects * objectSize) pr
 258              		.loc 1 34 98 is_stmt 1 discriminator 1
 259              		.loc 1 34 109 is_stmt 0 discriminator 1
 260 0190 17050000 		lla	a0,.LC0
 260      13050500 
 261 0198 97000000 		call	_Z11printStringPKc@plt
 261      E7800000 
 262              	.LVL23:
 263 01a0 6F00C004 		j	.L19
 264              	.L31:
  35:src/kObjectAllocator.cpp ****                 else {
  36:src/kObjectAllocator.cpp ****                     if (bitVectors[i][j + printedBytes] / 100 == 0) printInteger((uint8) 0);
 265              		.loc 1 36 69 is_stmt 1 discriminator 1
 266              		.loc 1 36 81 is_stmt 0 discriminator 1
 267 01a4 13050000 		li	a0,0
 268 01a8 97000000 		call	_Z12printIntegerm@plt
 268      E7800000 
 269              	.LVL24:
 270 01b0 6F004008 		j	.L20
 271              	.L32:
  37:src/kObjectAllocator.cpp ****                     if (bitVectors[i][j + printedBytes] / 10 == 0) printInteger((uint8) 0);
 272              		.loc 1 37 68 is_stmt 1 discriminator 1
 273              		.loc 1 37 80 is_stmt 0 discriminator 1
 274 01b4 13050000 		li	a0,0
 275 01b8 97000000 		call	_Z12printIntegerm@plt
 275      E7800000 
 276              	.LVL25:
 277              	.L21:
  38:src/kObjectAllocator.cpp ****                     printInteger((uint64) bitVectors[i][j + printedBytes]);
 278              		.loc 1 38 21 is_stmt 1
 279              		.loc 1 38 43 is_stmt 0
 280 01c0 83B78402 		ld	a5,40(s1)
 281              		.loc 1 38 55
 282 01c4 B3876701 		add	a5,a5,s6
 283 01c8 83B70700 		ld	a5,0(a5)
 284              		.loc 1 38 73
 285 01cc B3893701 		add	s3,a5,s3
 286              		.loc 1 38 33
 287 01d0 03C50900 		lbu	a0,0(s3)
 288 01d4 97000000 		call	_Z12printIntegerm@plt
 288      E7800000 
 289              	.LVL26:
  39:src/kObjectAllocator.cpp ****                     printString(" ");
 290              		.loc 1 39 21 is_stmt 1
 291              		.loc 1 39 32 is_stmt 0
 292 01dc 17050000 		lla	a0,.LC1
 292      13050500 
 293 01e4 97000000 		call	_Z11printStringPKc@plt
 293      E7800000 
 294              	.LVL27:
 295              	.L19:
  33:src/kObjectAllocator.cpp ****                 if (j + printedBytes - memorySizeForBits >= initialNumberOfObjects * objectSize) pr
GAS LISTING /tmp/cc8hdfYh.s 			page 8


 296              		.loc 1 33 13 is_stmt 1 discriminator 2
 297 01ec 13091900 		addi	s2,s2,1
 298              	.LVL28:
 299              	.L22:
  33:src/kObjectAllocator.cpp ****                 if (j + printedBytes - memorySizeForBits >= initialNumberOfObjects * objectSize) pr
 300              		.loc 1 33 34 discriminator 1
 301 01f0 9307F000 		li	a5,15
 302 01f4 63E02707 		bgtu	s2,a5,.L17
  34:src/kObjectAllocator.cpp ****                 else {
 303              		.loc 1 34 17
  34:src/kObjectAllocator.cpp ****                 else {
 304              		.loc 1 34 23 is_stmt 0
 305 01f8 B3092A01 		add	s3,s4,s2
  34:src/kObjectAllocator.cpp ****                 else {
 306              		.loc 1 34 40
 307 01fc 03B70401 		ld	a4,16(s1)
  34:src/kObjectAllocator.cpp ****                 else {
 308              		.loc 1 34 38
 309 0200 3387E940 		sub	a4,s3,a4
  34:src/kObjectAllocator.cpp ****                 else {
 310              		.loc 1 34 61
 311 0204 83B70400 		ld	a5,0(s1)
  34:src/kObjectAllocator.cpp ****                 else {
 312              		.loc 1 34 86
 313 0208 83B68401 		ld	a3,24(s1)
  34:src/kObjectAllocator.cpp ****                 else {
 314              		.loc 1 34 84
 315 020c B387D702 		mul	a5,a5,a3
  34:src/kObjectAllocator.cpp ****                 else {
 316              		.loc 1 34 17
 317 0210 E370F7F8 		bgeu	a4,a5,.L30
  36:src/kObjectAllocator.cpp ****                     if (bitVectors[i][j + printedBytes] / 10 == 0) printInteger((uint8) 0);
 318              		.loc 1 36 21 is_stmt 1
  36:src/kObjectAllocator.cpp ****                     if (bitVectors[i][j + printedBytes] / 10 == 0) printInteger((uint8) 0);
 319              		.loc 1 36 25 is_stmt 0
 320 0214 83B78402 		ld	a5,40(s1)
  36:src/kObjectAllocator.cpp ****                     if (bitVectors[i][j + printedBytes] / 10 == 0) printInteger((uint8) 0);
 321              		.loc 1 36 37
 322 0218 139B3A00 		slli	s6,s5,3
 323 021c B3876701 		add	a5,a5,s6
 324 0220 83B70700 		ld	a5,0(a5)
  36:src/kObjectAllocator.cpp ****                     if (bitVectors[i][j + printedBytes] / 10 == 0) printInteger((uint8) 0);
 325              		.loc 1 36 55
 326 0224 B3873701 		add	a5,a5,s3
 327 0228 03C70700 		lbu	a4,0(a5)
  36:src/kObjectAllocator.cpp ****                     if (bitVectors[i][j + printedBytes] / 10 == 0) printInteger((uint8) 0);
 328              		.loc 1 36 21
 329 022c 93073006 		li	a5,99
 330 0230 E3FAE7F6 		bleu	a4,a5,.L31
 331              	.L20:
  37:src/kObjectAllocator.cpp ****                     printInteger((uint64) bitVectors[i][j + printedBytes]);
 332              		.loc 1 37 21 is_stmt 1
  37:src/kObjectAllocator.cpp ****                     printInteger((uint64) bitVectors[i][j + printedBytes]);
 333              		.loc 1 37 25 is_stmt 0
 334 0234 83B78402 		ld	a5,40(s1)
  37:src/kObjectAllocator.cpp ****                     printInteger((uint64) bitVectors[i][j + printedBytes]);
 335              		.loc 1 37 37
GAS LISTING /tmp/cc8hdfYh.s 			page 9


 336 0238 B3876701 		add	a5,a5,s6
 337 023c 83B70700 		ld	a5,0(a5)
  37:src/kObjectAllocator.cpp ****                     printInteger((uint64) bitVectors[i][j + printedBytes]);
 338              		.loc 1 37 55
 339 0240 B3873701 		add	a5,a5,s3
 340 0244 03C70700 		lbu	a4,0(a5)
  37:src/kObjectAllocator.cpp ****                     printInteger((uint64) bitVectors[i][j + printedBytes]);
 341              		.loc 1 37 21
 342 0248 93079000 		li	a5,9
 343 024c E3EAE7F6 		bgtu	a4,a5,.L21
 344 0250 6FF05FF6 		j	.L32
 345              	.L17:
 346              	.LBE17:
  40:src/kObjectAllocator.cpp ****                 }
  41:src/kObjectAllocator.cpp ****             }
  42:src/kObjectAllocator.cpp ****             printString("  ");
 347              		.loc 1 42 13 is_stmt 1 discriminator 2
 348              		.loc 1 42 24 is_stmt 0 discriminator 2
 349 0254 17050000 		lla	a0,.LC2
 349      13050500 
 350 025c 97000000 		call	_Z11printStringPKc@plt
 350      E7800000 
 351              	.LVL29:
 352              	.LBE16:
  32:src/kObjectAllocator.cpp ****             for (size_t j = 0; j < segmentSize; ++j) {
 353              		.loc 1 32 9 is_stmt 1 discriminator 2
 354 0264 938A1A00 		addi	s5,s5,1
 355              	.LVL30:
 356              	.L23:
  32:src/kObjectAllocator.cpp ****             for (size_t j = 0; j < segmentSize; ++j) {
 357              		.loc 1 32 30 discriminator 1
  32:src/kObjectAllocator.cpp ****             for (size_t j = 0; j < segmentSize; ++j) {
 358              		.loc 1 32 32 is_stmt 0 discriminator 1
 359 0268 83B70403 		ld	a5,48(s1)
  32:src/kObjectAllocator.cpp ****             for (size_t j = 0; j < segmentSize; ++j) {
 360              		.loc 1 32 30 discriminator 1
 361 026c 63F6FA00 		bleu	a5,s5,.L16
 362              	.LBB19:
 363              	.LBB18:
  33:src/kObjectAllocator.cpp ****                 if (j + printedBytes - memorySizeForBits >= initialNumberOfObjects * objectSize) pr
 364              		.loc 1 33 25
 365 0270 13090000 		li	s2,0
 366 0274 6FF0DFF7 		j	.L22
 367              	.L16:
 368              	.LBE18:
 369              	.LBE19:
 370              	.LBE15:
  43:src/kObjectAllocator.cpp ****         }
  44:src/kObjectAllocator.cpp ****         printString("\n");
 371              		.loc 1 44 9 is_stmt 1
 372              		.loc 1 44 20 is_stmt 0
 373 0278 17050000 		lla	a0,.LC3
 373      13050500 
 374 0280 97000000 		call	_Z11printStringPKc@plt
 374      E7800000 
 375              	.LVL31:
  45:src/kObjectAllocator.cpp ****         printedBytes += segmentSize;
GAS LISTING /tmp/cc8hdfYh.s 			page 10


 376              		.loc 1 45 9 is_stmt 1
 377              		.loc 1 45 22 is_stmt 0
 378 0288 130A0A01 		addi	s4,s4,16
 379              	.LVL32:
 380              	.L24:
 381              	.LBE14:
  31:src/kObjectAllocator.cpp ****         for (size_t i = 0; i < numberOfAllocations; ++i) {
 382              		.loc 1 31 5 is_stmt 1
  31:src/kObjectAllocator.cpp ****         for (size_t i = 0; i < numberOfAllocations; ++i) {
 383              		.loc 1 31 24
  31:src/kObjectAllocator.cpp ****         for (size_t i = 0; i < numberOfAllocations; ++i) {
 384              		.loc 1 31 26 is_stmt 0
 385 028c 83B70400 		ld	a5,0(s1)
  31:src/kObjectAllocator.cpp ****         for (size_t i = 0; i < numberOfAllocations; ++i) {
 386              		.loc 1 31 51
 387 0290 03B78401 		ld	a4,24(s1)
  31:src/kObjectAllocator.cpp ****         for (size_t i = 0; i < numberOfAllocations; ++i) {
 388              		.loc 1 31 49
 389 0294 B387E702 		mul	a5,a5,a4
  31:src/kObjectAllocator.cpp ****         for (size_t i = 0; i < numberOfAllocations; ++i) {
 390              		.loc 1 31 24
 391 0298 6376FA00 		bleu	a5,s4,.L1
 392              	.LBB21:
 393              	.LBB20:
  32:src/kObjectAllocator.cpp ****             for (size_t j = 0; j < segmentSize; ++j) {
 394              		.loc 1 32 21
 395 029c 930A0000 		li	s5,0
 396 02a0 6FF09FFC 		j	.L23
 397              	.L1:
 398              	.LBE20:
 399              	.LBE21:
  46:src/kObjectAllocator.cpp ****     }
  47:src/kObjectAllocator.cpp **** }
 400              		.loc 1 47 1
 401 02a4 83308103 		ld	ra,56(sp)
 402              		.cfi_restore 1
 403 02a8 03340103 		ld	s0,48(sp)
 404              		.cfi_restore 8
 405              		.cfi_def_cfa 2, 64
 406 02ac 83348102 		ld	s1,40(sp)
 407              		.cfi_restore 9
 408              	.LVL33:
 409 02b0 03390102 		ld	s2,32(sp)
 410              		.cfi_restore 18
 411 02b4 83398101 		ld	s3,24(sp)
 412              		.cfi_restore 19
 413 02b8 033A0101 		ld	s4,16(sp)
 414              		.cfi_restore 20
 415              	.LVL34:
 416 02bc 833A8100 		ld	s5,8(sp)
 417              		.cfi_restore 21
 418 02c0 033B0100 		ld	s6,0(sp)
 419              		.cfi_restore 22
 420 02c4 13010104 		addi	sp,sp,64
 421              		.cfi_def_cfa_offset 0
 422 02c8 67800000 		jr	ra
 423              		.cfi_endproc
GAS LISTING /tmp/cc8hdfYh.s 			page 11


 424              	.LFE16:
 426              		.align	2
 427              		.globl	_ZN16KObjectAllocator18allocateFreeObjectEv
 429              	_ZN16KObjectAllocator18allocateFreeObjectEv:
 430              	.LFB18:
  48:src/kObjectAllocator.cpp **** 
  49:src/kObjectAllocator.cpp **** void* KObjectAllocator::allocateNewObject() {
  50:src/kObjectAllocator.cpp ****     void* returnedObject = allocateFreeObject();
  51:src/kObjectAllocator.cpp ****     if (returnedObject) {
  52:src/kObjectAllocator.cpp ****         //printString("\nreturn1: ");
  53:src/kObjectAllocator.cpp ****         //printInteger((uint64) returnedObject);
  54:src/kObjectAllocator.cpp ****         return returnedObject;
  55:src/kObjectAllocator.cpp ****     }
  56:src/kObjectAllocator.cpp **** 
  57:src/kObjectAllocator.cpp ****     nextNonTakenByte = 0;   // start search from start
  58:src/kObjectAllocator.cpp ****     returnedObject = allocateFreeObject();
  59:src/kObjectAllocator.cpp ****     if (returnedObject) {
  60:src/kObjectAllocator.cpp ****         //printString("\nreturn2: ");
  61:src/kObjectAllocator.cpp ****         //printInteger((uint64) returnedObject);
  62:src/kObjectAllocator.cpp ****         return returnedObject;
  63:src/kObjectAllocator.cpp ****     }
  64:src/kObjectAllocator.cpp **** 
  65:src/kObjectAllocator.cpp **** 
  66:src/kObjectAllocator.cpp ****     if (handleNotEnoughMemoryProblem()) {
  67:src/kObjectAllocator.cpp ****         returnedObject = allocateFreeObject();
  68:src/kObjectAllocator.cpp ****         if (returnedObject) {
  69:src/kObjectAllocator.cpp ****             //printString("\nreturn3: ");
  70:src/kObjectAllocator.cpp ****             //printInteger((uint64) returnedObject);
  71:src/kObjectAllocator.cpp ****             return returnedObject;
  72:src/kObjectAllocator.cpp ****         }
  73:src/kObjectAllocator.cpp ****     }
  74:src/kObjectAllocator.cpp ****     return nullptr;
  75:src/kObjectAllocator.cpp **** }
  76:src/kObjectAllocator.cpp **** 
  77:src/kObjectAllocator.cpp **** void* KObjectAllocator::allocateFreeObject() {
 431              		.loc 1 77 46 is_stmt 1
 432              		.cfi_startproc
 433              	.LVL35:
 434 02cc 130101FF 		addi	sp,sp,-16
 435              		.cfi_def_cfa_offset 16
 436 02d0 23348100 		sd	s0,8(sp)
 437              		.cfi_offset 8, -8
 438 02d4 13040101 		addi	s0,sp,16
 439              		.cfi_def_cfa 8, 0
  78:src/kObjectAllocator.cpp ****     for (size_t i = 0; i < numberOfAllocations; ++i) {
 440              		.loc 1 78 5
 441              	.LVL36:
 442              	.LBB22:
 443              		.loc 1 78 17 is_stmt 0
 444 02d8 130E0000 		li	t3,0
 445              	.LVL37:
 446              	.L40:
 447              		.loc 1 78 26 is_stmt 1 discriminator 1
 448              		.loc 1 78 28 is_stmt 0 discriminator 1
 449 02dc 83370503 		ld	a5,48(a0)
 450              		.loc 1 78 26 discriminator 1
 451 02e0 637EFE0A 		bleu	a5,t3,.L41
GAS LISTING /tmp/cc8hdfYh.s 			page 12


 452              	.LBE22:
  79:src/kObjectAllocator.cpp ****         for (size_t j = nextNonTakenByte; j >= i * memorySizeForBits && j < (i + 1) * memorySizeFor
 453              		.loc 1 79 9 is_stmt 1
 454              	.LBB29:
 455              	.LBB23:
 456              		.loc 1 79 21 is_stmt 0
 457 02e4 03338503 		ld	t1,56(a0)
 458              	.LVL38:
 459 02e8 6F008004 		j	.L39
 460              	.LVL39:
 461              	.L43:
 462              	.LBB24:
 463              	.LBB25:
  80:src/kObjectAllocator.cpp ****             size_t byte = j - i * memorySizeForBits;
  81:src/kObjectAllocator.cpp ****             for (size_t bit = 8; bit != 0; --bit) {
  82:src/kObjectAllocator.cpp **** 
  83:src/kObjectAllocator.cpp ****                 /*printString("\ntest:\n");
  84:src/kObjectAllocator.cpp ****                 printString("i: "); printInteger(i); printString("\n");
  85:src/kObjectAllocator.cpp ****                 printString("j: "); printInteger(j); printString("\n");
  86:src/kObjectAllocator.cpp ****                 printString("nextNonTakenByte: "); printInteger(nextNonTakenByte); printString("\n"
  87:src/kObjectAllocator.cpp ****                 printString("Byte: "); printInteger(byte); printString("\n");
  88:src/kObjectAllocator.cpp ****                 printString("Bit: "); printInteger(bit); printString("\n");
  89:src/kObjectAllocator.cpp ****                 printString("ifCondition: ");
  90:src/kObjectAllocator.cpp ****                 printInteger((bitVectors[i][byte] >> (bit - 1) & (uint8) 1) == 0); printString("\n"
  91:src/kObjectAllocator.cpp ****                 nextNonTakenByte = j + (bit == 1);
  92:src/kObjectAllocator.cpp ****                 if ((bitVectors[i][byte] >> (bit - 1) & (uint8) 1) == 0) {
  93:src/kObjectAllocator.cpp ****                     /*printString("========================");
  94:src/kObjectAllocator.cpp ****                     printString("\nSUCCESS:\n");
  95:src/kObjectAllocator.cpp ****                     printString("i: "); printInteger(i); printString("\n");
  96:src/kObjectAllocator.cpp ****                     printString("j: "); printInteger(j); printString("\n");
  97:src/kObjectAllocator.cpp ****                     printString("nextNonTakenByte: "); printInteger(nextNonTakenByte); printString(
  98:src/kObjectAllocator.cpp ****                     printString("Byte: "); printInteger(byte); printString("\n");
  99:src/kObjectAllocator.cpp ****                     printString("Bit: "); printInteger(bit); printString("\n");
 100:src/kObjectAllocator.cpp ****                     printString("========================");*/
 101:src/kObjectAllocator.cpp ****                     bitVectors[i][byte] |= (uint8) 1 << (bit - 1);
 464              		.loc 1 101 21 is_stmt 1
 465              		.loc 1 101 54 is_stmt 0
 466 02ec 93061000 		li	a3,1
 467 02f0 BB981601 		sllw	a7,a3,a7
 468              		.loc 1 101 41
 469 02f4 B3E51501 		or	a1,a1,a7
 470 02f8 2380B700 		sb	a1,0(a5)
 102:src/kObjectAllocator.cpp ****                     return &objectVectors[i][(byte * 8 + 8 - bit) * objectSize];
 471              		.loc 1 102 21 is_stmt 1
 472              		.loc 1 102 29 is_stmt 0
 473 02fc 83370502 		ld	a5,32(a0)
 474              		.loc 1 102 44
 475 0300 33880701 		add	a6,a5,a6
 476 0304 83370800 		ld	a5,0(a6)
 477              		.loc 1 102 56
 478 0308 13061600 		addi	a2,a2,1
 479              	.LVL40:
 480 030c 13163600 		slli	a2,a2,3
 481              	.LVL41:
 482              		.loc 1 102 60
 483 0310 3307E640 		sub	a4,a2,a4
 484              	.LVL42:
GAS LISTING /tmp/cc8hdfYh.s 			page 13


 485              		.loc 1 102 69
 486 0314 03358501 		ld	a0,24(a0)
 487              	.LVL43:
 488              		.loc 1 102 67
 489 0318 3307A702 		mul	a4,a4,a0
 490              		.loc 1 102 79
 491 031c 3385E700 		add	a0,a5,a4
 492              	.LVL44:
 493              	.L33:
 494              	.LBE25:
 495              	.LBE24:
 496              	.LBE23:
 497              	.LBE29:
 103:src/kObjectAllocator.cpp ****                 }
 104:src/kObjectAllocator.cpp ****             }
 105:src/kObjectAllocator.cpp ****         }
 106:src/kObjectAllocator.cpp ****     }
 107:src/kObjectAllocator.cpp ****     return nullptr;
 108:src/kObjectAllocator.cpp **** }
 498              		.loc 1 108 1
 499 0320 03348100 		ld	s0,8(sp)
 500              		.cfi_remember_state
 501              		.cfi_restore 8
 502              		.cfi_def_cfa 2, 16
 503 0324 13010101 		addi	sp,sp,16
 504              		.cfi_def_cfa_offset 0
 505 0328 67800000 		jr	ra
 506              	.LVL45:
 507              	.L36:
 508              		.cfi_restore_state
 509              	.LBB30:
 510              	.LBB28:
  79:src/kObjectAllocator.cpp ****             size_t byte = j - i * memorySizeForBits;
 511              		.loc 1 79 9 is_stmt 1 discriminator 3
 512 032c 13031300 		addi	t1,t1,1
 513              	.LVL46:
 514              	.L39:
  79:src/kObjectAllocator.cpp ****             size_t byte = j - i * memorySizeForBits;
 515              		.loc 1 79 70 discriminator 1
  79:src/kObjectAllocator.cpp ****             size_t byte = j - i * memorySizeForBits;
 516              		.loc 1 79 52 is_stmt 0 discriminator 1
 517 0330 83370501 		ld	a5,16(a0)
  79:src/kObjectAllocator.cpp ****             size_t byte = j - i * memorySizeForBits;
 518              		.loc 1 79 50 discriminator 1
 519 0334 3386C703 		mul	a2,a5,t3
  79:src/kObjectAllocator.cpp ****             size_t byte = j - i * memorySizeForBits;
 520              		.loc 1 79 70 discriminator 1
 521 0338 636EC304 		bgtu	a2,t1,.L35
  79:src/kObjectAllocator.cpp ****             size_t byte = j - i * memorySizeForBits;
 522              		.loc 1 79 80 discriminator 2
 523 033c 13071E00 		addi	a4,t3,1
  79:src/kObjectAllocator.cpp ****             size_t byte = j - i * memorySizeForBits;
 524              		.loc 1 79 85 discriminator 2
 525 0340 B387E702 		mul	a5,a5,a4
  79:src/kObjectAllocator.cpp ****             size_t byte = j - i * memorySizeForBits;
 526              		.loc 1 79 70 discriminator 2
 527 0344 6378F304 		bleu	a5,t1,.L35
GAS LISTING /tmp/cc8hdfYh.s 			page 14


 528              	.LBB27:
  80:src/kObjectAllocator.cpp ****             for (size_t bit = 8; bit != 0; --bit) {
 529              		.loc 1 80 13 is_stmt 1
  80:src/kObjectAllocator.cpp ****             for (size_t bit = 8; bit != 0; --bit) {
 530              		.loc 1 80 20 is_stmt 0
 531 0348 3306C340 		sub	a2,t1,a2
 532              	.LVL47:
  81:src/kObjectAllocator.cpp **** 
 533              		.loc 1 81 13 is_stmt 1
 534              	.LBB26:
  81:src/kObjectAllocator.cpp **** 
 535              		.loc 1 81 25 is_stmt 0
 536 034c 13078000 		li	a4,8
 537              	.LVL48:
 538              	.L38:
  81:src/kObjectAllocator.cpp **** 
 539              		.loc 1 81 38 is_stmt 1 discriminator 1
 540 0350 E30E07FC 		beqz	a4,.L36
  91:src/kObjectAllocator.cpp ****                 if ((bitVectors[i][byte] >> (bit - 1) & (uint8) 1) == 0) {
 541              		.loc 1 91 17
  91:src/kObjectAllocator.cpp ****                 if ((bitVectors[i][byte] >> (bit - 1) & (uint8) 1) == 0) {
 542              		.loc 1 91 45 is_stmt 0
 543 0354 9307F7FF 		addi	a5,a4,-1
 544 0358 93B71700 		seqz	a5,a5
  91:src/kObjectAllocator.cpp ****                 if ((bitVectors[i][byte] >> (bit - 1) & (uint8) 1) == 0) {
 545              		.loc 1 91 38
 546 035c B3876700 		add	a5,a5,t1
  91:src/kObjectAllocator.cpp ****                 if ((bitVectors[i][byte] >> (bit - 1) & (uint8) 1) == 0) {
 547              		.loc 1 91 34
 548 0360 233CF502 		sd	a5,56(a0)
  92:src/kObjectAllocator.cpp ****                     /*printString("========================");
 549              		.loc 1 92 17 is_stmt 1
  92:src/kObjectAllocator.cpp ****                     /*printString("========================");
 550              		.loc 1 92 22 is_stmt 0
 551 0364 83378502 		ld	a5,40(a0)
  92:src/kObjectAllocator.cpp ****                     /*printString("========================");
 552              		.loc 1 92 34
 553 0368 13183E00 		slli	a6,t3,3
 554 036c B3870701 		add	a5,a5,a6
 555 0370 83B70700 		ld	a5,0(a5)
  92:src/kObjectAllocator.cpp ****                     /*printString("========================");
 556              		.loc 1 92 40
 557 0374 B387C700 		add	a5,a5,a2
 558 0378 83C50700 		lbu	a1,0(a5)
  92:src/kObjectAllocator.cpp ****                     /*printString("========================");
 559              		.loc 1 92 50
 560 037c 9B08F7FF 		addiw	a7,a4,-1
  92:src/kObjectAllocator.cpp ****                     /*printString("========================");
 561              		.loc 1 92 42
 562 0380 BBD61541 		sraw	a3,a1,a7
  92:src/kObjectAllocator.cpp ****                     /*printString("========================");
 563              		.loc 1 92 55
 564 0384 93F61600 		andi	a3,a3,1
  92:src/kObjectAllocator.cpp ****                     /*printString("========================");
 565              		.loc 1 92 17
 566 0388 E38206F6 		beqz	a3,.L43
  81:src/kObjectAllocator.cpp **** 
GAS LISTING /tmp/cc8hdfYh.s 			page 15


 567              		.loc 1 81 13 is_stmt 1 discriminator 2
 568 038c 1307F7FF 		addi	a4,a4,-1
 569              	.LVL49:
 570 0390 6FF01FFC 		j	.L38
 571              	.LVL50:
 572              	.L35:
 573              	.LBE26:
 574              	.LBE27:
 575              	.LBE28:
  78:src/kObjectAllocator.cpp ****         for (size_t j = nextNonTakenByte; j >= i * memorySizeForBits && j < (i + 1) * memorySizeFor
 576              		.loc 1 78 5 discriminator 2
 577 0394 130E1E00 		addi	t3,t3,1
 578              	.LVL51:
 579 0398 6FF05FF4 		j	.L40
 580              	.LVL52:
 581              	.L41:
 582              	.LBE30:
 107:src/kObjectAllocator.cpp **** }
 583              		.loc 1 107 12 is_stmt 0
 584 039c 13050000 		li	a0,0
 585              	.LVL53:
 586 03a0 6FF01FF8 		j	.L33
 587              		.cfi_endproc
 588              	.LFE18:
 590              		.section	.rodata.str1.8
 591 002f 00       		.align	3
 592              	.LC6:
 593 0030 4552524F 		.string	"ERROR: Object not allocated in this KObjectAllocator\n"
 593      523A204F 
 593      626A6563 
 593      74206E6F 
 593      7420616C 
 594              		.text
 595              		.align	2
 596              		.globl	_ZN16KObjectAllocator10freeObjectEPv
 598              	_ZN16KObjectAllocator10freeObjectEPv:
 599              	.LFB19:
 109:src/kObjectAllocator.cpp **** 
 110:src/kObjectAllocator.cpp **** void KObjectAllocator::freeObject(void* objectPointer) {
 600              		.loc 1 110 56 is_stmt 1
 601              		.cfi_startproc
 602              	.LVL54:
 111:src/kObjectAllocator.cpp ****     for (size_t i = 0; i < numberOfAllocations; ++i) {
 603              		.loc 1 111 5
 604              	.LBB31:
 605              		.loc 1 111 17 is_stmt 0
 606 03a4 13070000 		li	a4,0
 607 03a8 6F008000 		j	.L48
 608              	.LVL55:
 609              	.L46:
 610              		.loc 1 111 5 is_stmt 1 discriminator 2
 611 03ac 13071700 		addi	a4,a4,1
 612              	.LVL56:
 613              	.L48:
 614              		.loc 1 111 26 discriminator 1
 615              		.loc 1 111 28 is_stmt 0 discriminator 1
 616 03b0 83370503 		ld	a5,48(a0)
GAS LISTING /tmp/cc8hdfYh.s 			page 16


 617              		.loc 1 111 26 discriminator 1
 618 03b4 6374F706 		bleu	a5,a4,.L45
 619              	.LBB32:
 112:src/kObjectAllocator.cpp ****         if ((uint8*) objectPointer < objectVectors[i]) continue;
 620              		.loc 1 112 9 is_stmt 1
 621              		.loc 1 112 38 is_stmt 0
 622 03b8 83370502 		ld	a5,32(a0)
 623              		.loc 1 112 53
 624 03bc 93163700 		slli	a3,a4,3
 625 03c0 B387D700 		add	a5,a5,a3
 626 03c4 83B70700 		ld	a5,0(a5)
 627              		.loc 1 112 9
 628 03c8 E3E2F5FE 		bgtu	a5,a1,.L46
 113:src/kObjectAllocator.cpp ****         size_t idiff = (size_t) ((uint8*) objectPointer - objectVectors[i]);
 629              		.loc 1 113 9 is_stmt 1
 630              		.loc 1 113 57 is_stmt 0
 631 03cc B387F540 		sub	a5,a1,a5
 632              	.LVL57:
 114:src/kObjectAllocator.cpp ****         size_t byte = idiff / objectSize / 8;
 633              		.loc 1 114 9 is_stmt 1
 634              		.loc 1 114 31 is_stmt 0
 635 03d0 03368501 		ld	a2,24(a0)
 636              		.loc 1 114 29
 637 03d4 B3D7C702 		divu	a5,a5,a2
 638              	.LVL58:
 639              		.loc 1 114 16
 640 03d8 13D83700 		srli	a6,a5,3
 641              	.LVL59:
 115:src/kObjectAllocator.cpp ****         if (byte >= memorySizeForBits) continue;
 642              		.loc 1 115 9 is_stmt 1
 643              		.loc 1 115 21 is_stmt 0
 644 03dc 03360501 		ld	a2,16(a0)
 645              		.loc 1 115 9
 646 03e0 E376C8FC 		bleu	a2,a6,.L46
 116:src/kObjectAllocator.cpp ****         size_t bit = idiff / objectSize - byte * 8;
 647              		.loc 1 116 9 is_stmt 1
 648              		.loc 1 116 16 is_stmt 0
 649 03e4 93F77700 		andi	a5,a5,7
 650              	.LVL60:
 117:src/kObjectAllocator.cpp ****         bitVectors[i][byte] &= ~((uint8) 1 << (7 - bit));
 651              		.loc 1 117 9 is_stmt 1
 652 03e8 03368502 		ld	a2,40(a0)
 653              		.loc 1 117 21 is_stmt 0
 654 03ec B306D600 		add	a3,a2,a3
 655              	.LVL61:
 656 03f0 03B70600 		ld	a4,0(a3)
 657              	.LVL62:
 658              		.loc 1 117 29
 659 03f4 33070701 		add	a4,a4,a6
 660              		.loc 1 117 50
 661 03f8 93067000 		li	a3,7
 662 03fc BB86F640 		subw	a3,a3,a5
 663              		.loc 1 117 44
 664 0400 93071000 		li	a5,1
 665              	.LVL63:
 666 0404 BB97D700 		sllw	a5,a5,a3
 667              		.loc 1 117 29
GAS LISTING /tmp/cc8hdfYh.s 			page 17


 668 0408 93C7F7FF 		not	a5,a5
 669 040c 83460700 		lbu	a3,0(a4)
 670 0410 B3F7D700 		and	a5,a5,a3
 671 0414 2300F700 		sb	a5,0(a4)
 118:src/kObjectAllocator.cpp ****         return;
 672              		.loc 1 118 9 is_stmt 1
 673 0418 67800000 		ret
 674              	.LVL64:
 675              	.L45:
 676              	.LBE32:
 677              	.LBE31:
 110:src/kObjectAllocator.cpp ****     for (size_t i = 0; i < numberOfAllocations; ++i) {
 678              		.loc 1 110 56 is_stmt 0
 679 041c 130101FF 		addi	sp,sp,-16
 680              		.cfi_def_cfa_offset 16
 681 0420 23341100 		sd	ra,8(sp)
 682 0424 23308100 		sd	s0,0(sp)
 683              		.cfi_offset 1, -8
 684              		.cfi_offset 8, -16
 685 0428 13040101 		addi	s0,sp,16
 686              		.cfi_def_cfa 8, 0
 119:src/kObjectAllocator.cpp ****     }
 120:src/kObjectAllocator.cpp ****     printString("ERROR: Object not allocated in this KObjectAllocator\n");
 687              		.loc 1 120 5 is_stmt 1
 688              		.loc 1 120 16 is_stmt 0
 689 042c 17050000 		lla	a0,.LC6
 689      13050500 
 690              	.LVL65:
 691 0434 97000000 		call	_Z11printStringPKc@plt
 691      E7800000 
 692              	.LVL66:
 121:src/kObjectAllocator.cpp **** }
 693              		.loc 1 121 1
 694 043c 83308100 		ld	ra,8(sp)
 695              		.cfi_restore 1
 696 0440 03340100 		ld	s0,0(sp)
 697              		.cfi_restore 8
 698              		.cfi_def_cfa 2, 16
 699 0444 13010101 		addi	sp,sp,16
 700              		.cfi_def_cfa_offset 0
 701 0448 67800000 		jr	ra
 702              		.cfi_endproc
 703              	.LFE19:
 705              		.align	2
 706              		.globl	_ZN16KObjectAllocator28handleNotEnoughMemoryProblemEv
 708              	_ZN16KObjectAllocator28handleNotEnoughMemoryProblemEv:
 709              	.LFB20:
 122:src/kObjectAllocator.cpp **** 
 123:src/kObjectAllocator.cpp **** bool KObjectAllocator::handleNotEnoughMemoryProblem() {
 710              		.loc 1 123 55 is_stmt 1
 711              		.cfi_startproc
 712              	.LVL67:
 713 044c 130101FB 		addi	sp,sp,-80
 714              		.cfi_def_cfa_offset 80
 715 0450 23341104 		sd	ra,72(sp)
 716 0454 23308104 		sd	s0,64(sp)
 717 0458 233C9102 		sd	s1,56(sp)
GAS LISTING /tmp/cc8hdfYh.s 			page 18


 718 045c 23382103 		sd	s2,48(sp)
 719 0460 23343103 		sd	s3,40(sp)
 720 0464 23304103 		sd	s4,32(sp)
 721 0468 233C5101 		sd	s5,24(sp)
 722 046c 23386101 		sd	s6,16(sp)
 723 0470 23347101 		sd	s7,8(sp)
 724              		.cfi_offset 1, -8
 725              		.cfi_offset 8, -16
 726              		.cfi_offset 9, -24
 727              		.cfi_offset 18, -32
 728              		.cfi_offset 19, -40
 729              		.cfi_offset 20, -48
 730              		.cfi_offset 21, -56
 731              		.cfi_offset 22, -64
 732              		.cfi_offset 23, -72
 733 0474 13040105 		addi	s0,sp,80
 734              		.cfi_def_cfa 8, 0
 735 0478 93040500 		mv	s1,a0
 124:src/kObjectAllocator.cpp ****     size_t newNumberOfAllocations = 2 * numberOfAllocations;
 736              		.loc 1 124 5
 737              		.loc 1 124 41 is_stmt 0
 738 047c 033A0503 		ld	s4,48(a0)
 739              		.loc 1 124 12
 740 0480 93191A00 		slli	s3,s4,1
 741              	.LVL68:
 125:src/kObjectAllocator.cpp ****     size_t newNumberOfObjects = 2 * numberOfObjects;
 742              		.loc 1 125 5 is_stmt 1
 743              		.loc 1 125 37 is_stmt 0
 744 0484 833A8500 		ld	s5,8(a0)
 745              	.LVL69:
 126:src/kObjectAllocator.cpp ****     uint8** newBitVectors = (uint8**) MemoryAllocator::instance()->kmem_alloc(
 746              		.loc 1 126 5 is_stmt 1
 747              		.loc 1 126 78 is_stmt 0
 748 0488 97000000 		call	_ZN15MemoryAllocator8instanceEv@plt
 748      E7800000 
 749              	.LVL70:
 750 0490 131A4A00 		slli	s4,s4,4
 751 0494 93050A00 		mv	a1,s4
 752 0498 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 752      E7800000 
 753              	.LVL71:
 127:src/kObjectAllocator.cpp ****             newNumberOfAllocations * sizeof(uint8*)
 128:src/kObjectAllocator.cpp ****     );
 129:src/kObjectAllocator.cpp ****     if (!newBitVectors) return false;
 754              		.loc 1 129 5 is_stmt 1
 755 04a0 63060514 		beqz	a0,.L62
 756 04a4 939A1A00 		slli	s5,s5,1
 757              	.LVL72:
 758 04a8 13090500 		mv	s2,a0
 130:src/kObjectAllocator.cpp ****     uint8** newObjectVectors = (uint8**) MemoryAllocator::instance()->kmem_alloc(
 759              		.loc 1 130 5
 760              		.loc 1 130 81 is_stmt 0
 761 04ac 97000000 		call	_ZN15MemoryAllocator8instanceEv@plt
 761      E7800000 
 762              	.LVL73:
 763 04b4 93050A00 		mv	a1,s4
 764 04b8 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
GAS LISTING /tmp/cc8hdfYh.s 			page 19


 764      E7800000 
 765              	.LVL74:
 766 04c0 130A0500 		mv	s4,a0
 767              	.LVL75:
 131:src/kObjectAllocator.cpp ****             newNumberOfAllocations * sizeof(uint8*)
 132:src/kObjectAllocator.cpp ****     );
 133:src/kObjectAllocator.cpp ****     if (!newObjectVectors) return false;
 768              		.loc 1 133 5 is_stmt 1
 769 04c4 630C0514 		beqz	a0,.L63
 770              	.LBB33:
 134:src/kObjectAllocator.cpp **** 
 135:src/kObjectAllocator.cpp ****     for (size_t i = 0; i < numberOfAllocations; ++i) newBitVectors[i] = bitVectors[i];
 771              		.loc 1 135 17 is_stmt 0
 772 04c8 93070000 		li	a5,0
 773              	.L55:
 774              	.LVL76:
 775              		.loc 1 135 26 is_stmt 1 discriminator 3
 776              		.loc 1 135 28 is_stmt 0 discriminator 3
 777 04cc 03BB0403 		ld	s6,48(s1)
 778              		.loc 1 135 26 discriminator 3
 779 04d0 63F46703 		bleu	s6,a5,.L54
 780              		.loc 1 135 54 is_stmt 1 discriminator 2
 781              		.loc 1 135 73 is_stmt 0 discriminator 2
 782 04d4 03B78402 		ld	a4,40(s1)
 783              		.loc 1 135 85 discriminator 2
 784 04d8 93963700 		slli	a3,a5,3
 785              		.loc 1 135 69 discriminator 2
 786 04dc 3306D900 		add	a2,s2,a3
 787              		.loc 1 135 85 discriminator 2
 788 04e0 3307D700 		add	a4,a4,a3
 789 04e4 03370700 		ld	a4,0(a4)
 790              		.loc 1 135 71 discriminator 2
 791 04e8 2330E600 		sd	a4,0(a2)
 792              		.loc 1 135 5 is_stmt 1 discriminator 2
 793 04ec 93871700 		addi	a5,a5,1
 794              	.LVL77:
 795 04f0 6FF0DFFD 		j	.L55
 796              	.LVL78:
 797              	.L67:
 798              	.LBE33:
 799              	.LBB34:
 136:src/kObjectAllocator.cpp ****     for (size_t i = numberOfAllocations; i < newNumberOfAllocations; ++i) {
 800              		.loc 1 136 5 discriminator 2
 801 04f4 130B1B00 		addi	s6,s6,1
 802              	.LVL79:
 803              	.L54:
 804              		.loc 1 136 44 discriminator 1
 805 04f8 63703B05 		bgeu	s6,s3,.L64
 137:src/kObjectAllocator.cpp ****         newBitVectors[i] = (uint8*) MemoryAllocator::instance()->kmem_alloc(
 806              		.loc 1 137 9
 807              		.loc 1 137 76 is_stmt 0
 808 04fc 97000000 		call	_ZN15MemoryAllocator8instanceEv@plt
 808      E7800000 
 809              	.LVL80:
 138:src/kObjectAllocator.cpp ****         memorySizeForBits + initialNumberOfObjects * objectSize );
 810              		.loc 1 138 9
 811 0504 83B50401 		ld	a1,16(s1)
GAS LISTING /tmp/cc8hdfYh.s 			page 20


 812              		.loc 1 138 29
 813 0508 83B70400 		ld	a5,0(s1)
 814              		.loc 1 138 54
 815 050c 03B78401 		ld	a4,24(s1)
 816              		.loc 1 138 52
 817 0510 B387E702 		mul	a5,a5,a4
 137:src/kObjectAllocator.cpp ****         newBitVectors[i] = (uint8*) MemoryAllocator::instance()->kmem_alloc(
 818              		.loc 1 137 24
 819 0514 931B3B00 		slli	s7,s6,3
 820 0518 B30B7901 		add	s7,s2,s7
 137:src/kObjectAllocator.cpp ****         newBitVectors[i] = (uint8*) MemoryAllocator::instance()->kmem_alloc(
 821              		.loc 1 137 76
 822 051c B385F500 		add	a1,a1,a5
 823 0520 97000000 		call	_ZN15MemoryAllocator10kmem_allocEm@plt
 823      E7800000 
 824              	.LVL81:
 137:src/kObjectAllocator.cpp ****         newBitVectors[i] = (uint8*) MemoryAllocator::instance()->kmem_alloc(
 825              		.loc 1 137 26
 826 0528 23B0AB00 		sd	a0,0(s7)
 139:src/kObjectAllocator.cpp ****         if (!newBitVectors[i]) return false;
 827              		.loc 1 139 9 is_stmt 1
 828 052c E31405FC 		bnez	a0,.L67
 829              		.loc 1 139 39 is_stmt 0
 830 0530 13050000 		li	a0,0
 831 0534 6F00C00B 		j	.L53
 832              	.L64:
 833              	.LBE34:
 834              	.LBB35:
 140:src/kObjectAllocator.cpp ****     }
 141:src/kObjectAllocator.cpp ****     for (size_t i = 0; i < newNumberOfAllocations; ++i) newObjectVectors[i] = newBitVectors[i] + me
 835              		.loc 1 141 17
 836 0538 13070000 		li	a4,0
 837              	.L56:
 838              	.LVL82:
 839              		.loc 1 141 26 is_stmt 1 discriminator 3
 840 053c 63743703 		bgeu	a4,s3,.L57
 841              		.loc 1 141 57 discriminator 2
 842              		.loc 1 141 94 is_stmt 0 discriminator 2
 843 0540 93173700 		slli	a5,a4,3
 844 0544 B306F900 		add	a3,s2,a5
 845 0548 83B60600 		ld	a3,0(a3)
 846              		.loc 1 141 98 discriminator 2
 847 054c 03B60401 		ld	a2,16(s1)
 848              		.loc 1 141 75 discriminator 2
 849 0550 B307FA00 		add	a5,s4,a5
 850              		.loc 1 141 96 discriminator 2
 851 0554 B386C600 		add	a3,a3,a2
 852              		.loc 1 141 77 discriminator 2
 853 0558 23B0D700 		sd	a3,0(a5)
 854              		.loc 1 141 5 is_stmt 1 discriminator 2
 855 055c 13071700 		addi	a4,a4,1
 856              	.LVL83:
 857 0560 6FF0DFFD 		j	.L56
 858              	.L57:
 859              	.LBE35:
 142:src/kObjectAllocator.cpp ****     for (size_t i = numberOfAllocations; i < newNumberOfAllocations; ++i)
 860              		.loc 1 142 5
GAS LISTING /tmp/cc8hdfYh.s 			page 21


 861              	.LBB36:
 862              		.loc 1 142 17 is_stmt 0
 863 0564 83B60403 		ld	a3,48(s1)
 864              	.LVL84:
 865 0568 6F008002 		j	.L61
 866              	.LVL85:
 867              	.L68:
 868              	.LBB37:
 143:src/kObjectAllocator.cpp ****         for (size_t j = 0; j < memorySizeForBits; newBitVectors[i][j++] = 0);
 869              		.loc 1 143 9 is_stmt 1 discriminator 2
 870              		.loc 1 143 66 is_stmt 0 discriminator 2
 871 056c 13973600 		slli	a4,a3,3
 872 0570 3307E900 		add	a4,s2,a4
 873 0574 03370700 		ld	a4,0(a4)
 874              	.LVL86:
 875              		.loc 1 143 71 discriminator 2
 876 0578 3307F700 		add	a4,a4,a5
 877              		.loc 1 143 73 discriminator 2
 878 057c 23000700 		sb	zero,0(a4)
 879              		.loc 1 143 69 discriminator 2
 880 0580 93871700 		addi	a5,a5,1
 881              	.LVL87:
 882              	.L60:
 883              		.loc 1 143 30 is_stmt 1 discriminator 3
 884              		.loc 1 143 32 is_stmt 0 discriminator 3
 885 0584 03B70401 		ld	a4,16(s1)
 886              		.loc 1 143 30 discriminator 3
 887 0588 E3E2E7FE 		bgtu	a4,a5,.L68
 888              	.LBE37:
 142:src/kObjectAllocator.cpp ****     for (size_t i = numberOfAllocations; i < newNumberOfAllocations; ++i)
 889              		.loc 1 142 5 is_stmt 1 discriminator 2
 890 058c 93861600 		addi	a3,a3,1
 891              	.LVL88:
 892              	.L61:
 142:src/kObjectAllocator.cpp ****     for (size_t i = numberOfAllocations; i < newNumberOfAllocations; ++i)
 893              		.loc 1 142 44 discriminator 1
 894 0590 63F63601 		bgeu	a3,s3,.L58
 895              	.LBB38:
 896              		.loc 1 143 21 is_stmt 0
 897 0594 93070000 		li	a5,0
 898 0598 6FF0DFFE 		j	.L60
 899              	.L58:
 900              	.LBE38:
 901              	.LBE36:
 144:src/kObjectAllocator.cpp ****     MemoryAllocator::instance()->kmem_free(bitVectors);
 902              		.loc 1 144 5 is_stmt 1
 903              		.loc 1 144 43 is_stmt 0
 904 059c 97000000 		call	_ZN15MemoryAllocator8instanceEv@plt
 904      E7800000 
 905              	.LVL89:
 906 05a4 83B58402 		ld	a1,40(s1)
 907 05a8 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 907      E7800000 
 908              	.LVL90:
 145:src/kObjectAllocator.cpp ****     MemoryAllocator::instance()->kmem_free(objectVectors);
 909              		.loc 1 145 5 is_stmt 1
 910              		.loc 1 145 43 is_stmt 0
GAS LISTING /tmp/cc8hdfYh.s 			page 22


 911 05b0 97000000 		call	_ZN15MemoryAllocator8instanceEv@plt
 911      E7800000 
 912              	.LVL91:
 913 05b8 83B50402 		ld	a1,32(s1)
 914 05bc 97000000 		call	_ZN15MemoryAllocator9kmem_freeEPv@plt
 914      E7800000 
 915              	.LVL92:
 146:src/kObjectAllocator.cpp **** 
 147:src/kObjectAllocator.cpp ****     numberOfObjects = newNumberOfObjects;
 916              		.loc 1 147 5 is_stmt 1
 917              		.loc 1 147 21 is_stmt 0
 918 05c4 23B45401 		sd	s5,8(s1)
 148:src/kObjectAllocator.cpp ****     nextNonTakenByte = numberOfAllocations * memorySizeForBits;
 919              		.loc 1 148 5 is_stmt 1
 920              		.loc 1 148 24 is_stmt 0
 921 05c8 83B70403 		ld	a5,48(s1)
 922              		.loc 1 148 46
 923 05cc 03B70401 		ld	a4,16(s1)
 924              		.loc 1 148 44
 925 05d0 B387E702 		mul	a5,a5,a4
 926              		.loc 1 148 22
 927 05d4 23BCF402 		sd	a5,56(s1)
 149:src/kObjectAllocator.cpp ****     numberOfAllocations = newNumberOfAllocations;
 928              		.loc 1 149 5 is_stmt 1
 929              		.loc 1 149 25 is_stmt 0
 930 05d8 23B83403 		sd	s3,48(s1)
 150:src/kObjectAllocator.cpp ****     bitVectors = newBitVectors;
 931              		.loc 1 150 5 is_stmt 1
 932              		.loc 1 150 16 is_stmt 0
 933 05dc 23B42403 		sd	s2,40(s1)
 151:src/kObjectAllocator.cpp ****     objectVectors = newObjectVectors;
 934              		.loc 1 151 5 is_stmt 1
 935              		.loc 1 151 19 is_stmt 0
 936 05e0 23B04403 		sd	s4,32(s1)
 152:src/kObjectAllocator.cpp **** 
 153:src/kObjectAllocator.cpp ****     return true;
 937              		.loc 1 153 5 is_stmt 1
 938              		.loc 1 153 12 is_stmt 0
 939 05e4 13051000 		li	a0,1
 940 05e8 6F008000 		j	.L53
 941              	.LVL93:
 942              	.L62:
 129:src/kObjectAllocator.cpp ****     uint8** newObjectVectors = (uint8**) MemoryAllocator::instance()->kmem_alloc(
 943              		.loc 1 129 32
 944 05ec 13050000 		li	a0,0
 945              	.LVL94:
 946              	.L53:
 154:src/kObjectAllocator.cpp **** }
 947              		.loc 1 154 1
 948 05f0 83308104 		ld	ra,72(sp)
 949              		.cfi_remember_state
 950              		.cfi_restore 1
 951 05f4 03340104 		ld	s0,64(sp)
 952              		.cfi_restore 8
 953              		.cfi_def_cfa 2, 80
 954 05f8 83348103 		ld	s1,56(sp)
 955              		.cfi_restore 9
GAS LISTING /tmp/cc8hdfYh.s 			page 23


 956              	.LVL95:
 957 05fc 03390103 		ld	s2,48(sp)
 958              		.cfi_restore 18
 959 0600 83398102 		ld	s3,40(sp)
 960              		.cfi_restore 19
 961              	.LVL96:
 962 0604 033A0102 		ld	s4,32(sp)
 963              		.cfi_restore 20
 964 0608 833A8101 		ld	s5,24(sp)
 965              		.cfi_restore 21
 966 060c 033B0101 		ld	s6,16(sp)
 967              		.cfi_restore 22
 968 0610 833B8100 		ld	s7,8(sp)
 969              		.cfi_restore 23
 970 0614 13010105 		addi	sp,sp,80
 971              		.cfi_def_cfa_offset 0
 972 0618 67800000 		jr	ra
 973              	.LVL97:
 974              	.L63:
 975              		.cfi_restore_state
 133:src/kObjectAllocator.cpp **** 
 976              		.loc 1 133 35
 977 061c 13050000 		li	a0,0
 978              	.LVL98:
 979 0620 6FF01FFD 		j	.L53
 980              		.cfi_endproc
 981              	.LFE20:
 983              		.align	2
 984              		.globl	_ZN16KObjectAllocator17allocateNewObjectEv
 986              	_ZN16KObjectAllocator17allocateNewObjectEv:
 987              	.LFB17:
  49:src/kObjectAllocator.cpp ****     void* returnedObject = allocateFreeObject();
 988              		.loc 1 49 45 is_stmt 1
 989              		.cfi_startproc
 990              	.LVL99:
 991 0624 130101FE 		addi	sp,sp,-32
 992              		.cfi_def_cfa_offset 32
 993 0628 233C1100 		sd	ra,24(sp)
 994 062c 23388100 		sd	s0,16(sp)
 995 0630 23349100 		sd	s1,8(sp)
 996 0634 23302101 		sd	s2,0(sp)
 997              		.cfi_offset 1, -8
 998              		.cfi_offset 8, -16
 999              		.cfi_offset 9, -24
 1000              		.cfi_offset 18, -32
 1001 0638 13040102 		addi	s0,sp,32
 1002              		.cfi_def_cfa 8, 0
 1003 063c 13090500 		mv	s2,a0
  50:src/kObjectAllocator.cpp ****     if (returnedObject) {
 1004              		.loc 1 50 5
  50:src/kObjectAllocator.cpp ****     if (returnedObject) {
 1005              		.loc 1 50 46 is_stmt 0
 1006 0640 97000000 		call	_ZN16KObjectAllocator18allocateFreeObjectEv
 1006      E7800000 
 1007              	.LVL100:
 1008 0648 93040500 		mv	s1,a0
 1009              	.LVL101:
GAS LISTING /tmp/cc8hdfYh.s 			page 24


  51:src/kObjectAllocator.cpp ****         //printString("\nreturn1: ");
 1010              		.loc 1 51 5 is_stmt 1
 1011 064c 63000502 		beqz	a0,.L72
 1012              	.L69:
  75:src/kObjectAllocator.cpp **** 
 1013              		.loc 1 75 1 is_stmt 0
 1014 0650 13850400 		mv	a0,s1
 1015 0654 83308101 		ld	ra,24(sp)
 1016              		.cfi_remember_state
 1017              		.cfi_restore 1
 1018 0658 03340101 		ld	s0,16(sp)
 1019              		.cfi_restore 8
 1020              		.cfi_def_cfa 2, 32
 1021 065c 83348100 		ld	s1,8(sp)
 1022              		.cfi_restore 9
 1023              	.LVL102:
 1024 0660 03390100 		ld	s2,0(sp)
 1025              		.cfi_restore 18
 1026              	.LVL103:
 1027 0664 13010102 		addi	sp,sp,32
 1028              		.cfi_def_cfa_offset 0
 1029 0668 67800000 		jr	ra
 1030              	.LVL104:
 1031              	.L72:
 1032              		.cfi_restore_state
  57:src/kObjectAllocator.cpp ****     returnedObject = allocateFreeObject();
 1033              		.loc 1 57 5 is_stmt 1
  57:src/kObjectAllocator.cpp ****     returnedObject = allocateFreeObject();
 1034              		.loc 1 57 22 is_stmt 0
 1035 066c 233C0902 		sd	zero,56(s2)
  58:src/kObjectAllocator.cpp ****     if (returnedObject) {
 1036              		.loc 1 58 5 is_stmt 1
  58:src/kObjectAllocator.cpp ****     if (returnedObject) {
 1037              		.loc 1 58 40 is_stmt 0
 1038 0670 13050900 		mv	a0,s2
 1039 0674 97000000 		call	_ZN16KObjectAllocator18allocateFreeObjectEv
 1039      E7800000 
 1040              	.LVL105:
 1041 067c 93040500 		mv	s1,a0
 1042              	.LVL106:
  59:src/kObjectAllocator.cpp ****         //printString("\nreturn2: ");
 1043              		.loc 1 59 5 is_stmt 1
 1044 0680 E31805FC 		bnez	a0,.L69
  66:src/kObjectAllocator.cpp ****         returnedObject = allocateFreeObject();
 1045              		.loc 1 66 5
  66:src/kObjectAllocator.cpp ****         returnedObject = allocateFreeObject();
 1046              		.loc 1 66 37 is_stmt 0
 1047 0684 13050900 		mv	a0,s2
 1048 0688 97000000 		call	_ZN16KObjectAllocator28handleNotEnoughMemoryProblemEv
 1048      E7800000 
 1049              	.LVL107:
  66:src/kObjectAllocator.cpp ****         returnedObject = allocateFreeObject();
 1050              		.loc 1 66 5
 1051 0690 E30005FC 		beqz	a0,.L69
  67:src/kObjectAllocator.cpp ****         if (returnedObject) {
 1052              		.loc 1 67 9 is_stmt 1
  67:src/kObjectAllocator.cpp ****         if (returnedObject) {
GAS LISTING /tmp/cc8hdfYh.s 			page 25


 1053              		.loc 1 67 44 is_stmt 0
 1054 0694 13050900 		mv	a0,s2
 1055 0698 97000000 		call	_ZN16KObjectAllocator18allocateFreeObjectEv
 1055      E7800000 
 1056              	.LVL108:
 1057 06a0 93040500 		mv	s1,a0
 1058              	.LVL109:
  68:src/kObjectAllocator.cpp ****             //printString("\nreturn3: ");
 1059              		.loc 1 68 9 is_stmt 1
 1060 06a4 6FF0DFFA 		j	.L69
 1061              		.cfi_endproc
 1062              	.LFE17:
 1064              	.Letext0:
 1065              		.file 2 "src/../h/../h/../lib/hw.h"
 1066              		.file 3 "src/../h/../h/memoryAllocator.hpp"
 1067              		.file 4 "src/../h/kObjectAllocator.hpp"
 1068              		.file 5 "src/../h/print.hpp"
GAS LISTING /tmp/cc8hdfYh.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 kObjectAllocator.cpp
     /tmp/cc8hdfYh.s:29     .text:0000000000000000 _ZN16KObjectAllocator19printInternalMemoryEv
     /tmp/cc8hdfYh.s:33     .text:0000000000000000 .L0 
     /tmp/cc8hdfYh.s:35     .text:0000000000000000 .L0 
     /tmp/cc8hdfYh.s:36     .text:0000000000000004 .L0 
     /tmp/cc8hdfYh.s:45     .text:0000000000000024 .L0 
     /tmp/cc8hdfYh.s:46     .text:0000000000000024 .L0 
     /tmp/cc8hdfYh.s:47     .text:0000000000000024 .L0 
     /tmp/cc8hdfYh.s:48     .text:0000000000000024 .L0 
     /tmp/cc8hdfYh.s:49     .text:0000000000000024 .L0 
     /tmp/cc8hdfYh.s:50     .text:0000000000000024 .L0 
     /tmp/cc8hdfYh.s:51     .text:0000000000000024 .L0 
     /tmp/cc8hdfYh.s:52     .text:0000000000000024 .L0 
     /tmp/cc8hdfYh.s:54     .text:0000000000000028 .L0 
     /tmp/cc8hdfYh.s:58     .text:000000000000002c .L0 
     /tmp/cc8hdfYh.s:59     .text:000000000000002c .L0 
     /tmp/cc8hdfYh.s:68     .text:0000000000000034 .L0 
     /tmp/cc8hdfYh.s:69     .text:0000000000000034 .L0 
     /tmp/cc8hdfYh.s:75     .text:0000000000000048 .L0 
     /tmp/cc8hdfYh.s:76     .text:0000000000000048 .L0 
     /tmp/cc8hdfYh.s:82     .text:0000000000000058 .L0 
     /tmp/cc8hdfYh.s:83     .text:0000000000000058 .L0 
     /tmp/cc8hdfYh.s:88     .text:0000000000000064 .L0 
     /tmp/cc8hdfYh.s:89     .text:0000000000000064 .L0 
     /tmp/cc8hdfYh.s:91     .text:0000000000000068 .L0 
     /tmp/cc8hdfYh.s:94     .text:0000000000000070 .L0 
     /tmp/cc8hdfYh.s:96     .text:0000000000000074 .L0 
     /tmp/cc8hdfYh.s:100    .text:0000000000000080 .L0 
     /tmp/cc8hdfYh.s:101    .text:0000000000000080 .L0 
     /tmp/cc8hdfYh.s:106    .text:0000000000000090 .L0 
     /tmp/cc8hdfYh.s:110    .text:0000000000000094 .L0 
     /tmp/cc8hdfYh.s:113    .text:000000000000009c .L0 
     /tmp/cc8hdfYh.s:114    .text:000000000000009c .L0 
     /tmp/cc8hdfYh.s:116    .text:00000000000000a0 .L0 
     /tmp/cc8hdfYh.s:118    .text:00000000000000a4 .L0 
     /tmp/cc8hdfYh.s:120    .text:00000000000000a8 .L0 
     /tmp/cc8hdfYh.s:121    .text:00000000000000a8 .L0 
     /tmp/cc8hdfYh.s:123    .text:00000000000000ac .L0 
     /tmp/cc8hdfYh.s:127    .text:00000000000000b8 .L0 
     /tmp/cc8hdfYh.s:130    .text:00000000000000c0 .L0 
     /tmp/cc8hdfYh.s:134    .text:00000000000000c8 .L0 
     /tmp/cc8hdfYh.s:135    .text:00000000000000c8 .L0 
     /tmp/cc8hdfYh.s:137    .text:00000000000000cc .L0 
     /tmp/cc8hdfYh.s:140    .text:00000000000000d4 .L0 
     /tmp/cc8hdfYh.s:143    .text:00000000000000dc .L0 
     /tmp/cc8hdfYh.s:149    .text:00000000000000e8 .L0 
     /tmp/cc8hdfYh.s:150    .text:00000000000000e8 .L0 
     /tmp/cc8hdfYh.s:155    .text:00000000000000f8 .L0 
     /tmp/cc8hdfYh.s:159    .text:00000000000000fc .L0 
     /tmp/cc8hdfYh.s:160    .text:00000000000000fc .L0 
     /tmp/cc8hdfYh.s:162    .text:0000000000000100 .L0 
     /tmp/cc8hdfYh.s:166    .text:0000000000000104 .L0 
     /tmp/cc8hdfYh.s:173    .text:000000000000010c .L0 
     /tmp/cc8hdfYh.s:174    .text:000000000000010c .L0 
     /tmp/cc8hdfYh.s:178    .text:000000000000011c .L0 
     /tmp/cc8hdfYh.s:179    .text:000000000000011c .L0 
GAS LISTING /tmp/cc8hdfYh.s 			page 27


     /tmp/cc8hdfYh.s:184    .text:0000000000000120 .L0 
     /tmp/cc8hdfYh.s:185    .text:0000000000000120 .L0 
     /tmp/cc8hdfYh.s:186    .text:0000000000000120 .L0 
     /tmp/cc8hdfYh.s:188    .text:0000000000000124 .L0 
     /tmp/cc8hdfYh.s:192    .text:0000000000000128 .L0 
     /tmp/cc8hdfYh.s:199    .text:0000000000000130 .L0 
     /tmp/cc8hdfYh.s:205    .text:0000000000000138 .L0 
     /tmp/cc8hdfYh.s:206    .text:0000000000000138 .L0 
     /tmp/cc8hdfYh.s:211    .text:0000000000000148 .L0 
     /tmp/cc8hdfYh.s:215    .text:000000000000014c .L0 
     /tmp/cc8hdfYh.s:216    .text:000000000000014c .L0 
     /tmp/cc8hdfYh.s:218    .text:0000000000000150 .L0 
     /tmp/cc8hdfYh.s:222    .text:0000000000000154 .L0 
     /tmp/cc8hdfYh.s:226    .text:0000000000000158 .L0 
     /tmp/cc8hdfYh.s:229    .text:0000000000000160 .L0 
     /tmp/cc8hdfYh.s:230    .text:0000000000000160 .L0 
     /tmp/cc8hdfYh.s:234    .text:0000000000000170 .L0 
     /tmp/cc8hdfYh.s:243    .text:0000000000000178 .L0 
     /tmp/cc8hdfYh.s:244    .text:0000000000000178 .L0 
     /tmp/cc8hdfYh.s:248    .text:0000000000000188 .L0 
     /tmp/cc8hdfYh.s:249    .text:0000000000000188 .L0 
     /tmp/cc8hdfYh.s:259    .text:0000000000000190 .L0 
     /tmp/cc8hdfYh.s:260    .text:0000000000000190 .L0 
     /tmp/cc8hdfYh.s:266    .text:00000000000001a4 .L0 
     /tmp/cc8hdfYh.s:267    .text:00000000000001a4 .L0 
     /tmp/cc8hdfYh.s:273    .text:00000000000001b4 .L0 
     /tmp/cc8hdfYh.s:274    .text:00000000000001b4 .L0 
     /tmp/cc8hdfYh.s:279    .text:00000000000001c0 .L0 
     /tmp/cc8hdfYh.s:280    .text:00000000000001c0 .L0 
     /tmp/cc8hdfYh.s:282    .text:00000000000001c4 .L0 
     /tmp/cc8hdfYh.s:285    .text:00000000000001cc .L0 
     /tmp/cc8hdfYh.s:287    .text:00000000000001d0 .L0 
     /tmp/cc8hdfYh.s:291    .text:00000000000001dc .L0 
     /tmp/cc8hdfYh.s:292    .text:00000000000001dc .L0 
     /tmp/cc8hdfYh.s:297    .text:00000000000001ec .L0 
     /tmp/cc8hdfYh.s:301    .text:00000000000001f0 .L0 
     /tmp/cc8hdfYh.s:304    .text:00000000000001f8 .L0 
     /tmp/cc8hdfYh.s:305    .text:00000000000001f8 .L0 
     /tmp/cc8hdfYh.s:307    .text:00000000000001fc .L0 
     /tmp/cc8hdfYh.s:309    .text:0000000000000200 .L0 
     /tmp/cc8hdfYh.s:311    .text:0000000000000204 .L0 
     /tmp/cc8hdfYh.s:313    .text:0000000000000208 .L0 
     /tmp/cc8hdfYh.s:315    .text:000000000000020c .L0 
     /tmp/cc8hdfYh.s:317    .text:0000000000000210 .L0 
     /tmp/cc8hdfYh.s:319    .text:0000000000000214 .L0 
     /tmp/cc8hdfYh.s:320    .text:0000000000000214 .L0 
     /tmp/cc8hdfYh.s:322    .text:0000000000000218 .L0 
     /tmp/cc8hdfYh.s:326    .text:0000000000000224 .L0 
     /tmp/cc8hdfYh.s:329    .text:000000000000022c .L0 
     /tmp/cc8hdfYh.s:333    .text:0000000000000234 .L0 
     /tmp/cc8hdfYh.s:334    .text:0000000000000234 .L0 
     /tmp/cc8hdfYh.s:336    .text:0000000000000238 .L0 
     /tmp/cc8hdfYh.s:339    .text:0000000000000240 .L0 
     /tmp/cc8hdfYh.s:342    .text:0000000000000248 .L0 
     /tmp/cc8hdfYh.s:348    .text:0000000000000254 .L0 
     /tmp/cc8hdfYh.s:349    .text:0000000000000254 .L0 
     /tmp/cc8hdfYh.s:354    .text:0000000000000264 .L0 
GAS LISTING /tmp/cc8hdfYh.s 			page 28


     /tmp/cc8hdfYh.s:358    .text:0000000000000268 .L0 
     /tmp/cc8hdfYh.s:359    .text:0000000000000268 .L0 
     /tmp/cc8hdfYh.s:361    .text:000000000000026c .L0 
     /tmp/cc8hdfYh.s:365    .text:0000000000000270 .L0 
     /tmp/cc8hdfYh.s:372    .text:0000000000000278 .L0 
     /tmp/cc8hdfYh.s:373    .text:0000000000000278 .L0 
     /tmp/cc8hdfYh.s:377    .text:0000000000000288 .L0 
     /tmp/cc8hdfYh.s:378    .text:0000000000000288 .L0 
     /tmp/cc8hdfYh.s:383    .text:000000000000028c .L0 
     /tmp/cc8hdfYh.s:384    .text:000000000000028c .L0 
     /tmp/cc8hdfYh.s:385    .text:000000000000028c .L0 
     /tmp/cc8hdfYh.s:387    .text:0000000000000290 .L0 
     /tmp/cc8hdfYh.s:389    .text:0000000000000294 .L0 
     /tmp/cc8hdfYh.s:391    .text:0000000000000298 .L0 
     /tmp/cc8hdfYh.s:395    .text:000000000000029c .L0 
     /tmp/cc8hdfYh.s:401    .text:00000000000002a4 .L0 
     /tmp/cc8hdfYh.s:402    .text:00000000000002a8 .L0 
     /tmp/cc8hdfYh.s:404    .text:00000000000002ac .L0 
     /tmp/cc8hdfYh.s:405    .text:00000000000002ac .L0 
     /tmp/cc8hdfYh.s:407    .text:00000000000002b0 .L0 
     /tmp/cc8hdfYh.s:410    .text:00000000000002b4 .L0 
     /tmp/cc8hdfYh.s:412    .text:00000000000002b8 .L0 
     /tmp/cc8hdfYh.s:414    .text:00000000000002bc .L0 
     /tmp/cc8hdfYh.s:417    .text:00000000000002c0 .L0 
     /tmp/cc8hdfYh.s:419    .text:00000000000002c4 .L0 
     /tmp/cc8hdfYh.s:421    .text:00000000000002c8 .L0 
     /tmp/cc8hdfYh.s:423    .text:00000000000002cc .L0 
     /tmp/cc8hdfYh.s:429    .text:00000000000002cc _ZN16KObjectAllocator18allocateFreeObjectEv
     /tmp/cc8hdfYh.s:432    .text:00000000000002cc .L0 
     /tmp/cc8hdfYh.s:434    .text:00000000000002cc .L0 
     /tmp/cc8hdfYh.s:435    .text:00000000000002d0 .L0 
     /tmp/cc8hdfYh.s:437    .text:00000000000002d4 .L0 
     /tmp/cc8hdfYh.s:439    .text:00000000000002d8 .L0 
     /tmp/cc8hdfYh.s:443    .text:00000000000002d8 .L0 
     /tmp/cc8hdfYh.s:444    .text:00000000000002d8 .L0 
     /tmp/cc8hdfYh.s:448    .text:00000000000002dc .L0 
     /tmp/cc8hdfYh.s:449    .text:00000000000002dc .L0 
     /tmp/cc8hdfYh.s:451    .text:00000000000002e0 .L0 
     /tmp/cc8hdfYh.s:456    .text:00000000000002e4 .L0 
     /tmp/cc8hdfYh.s:457    .text:00000000000002e4 .L0 
     /tmp/cc8hdfYh.s:465    .text:00000000000002ec .L0 
     /tmp/cc8hdfYh.s:466    .text:00000000000002ec .L0 
     /tmp/cc8hdfYh.s:469    .text:00000000000002f4 .L0 
     /tmp/cc8hdfYh.s:472    .text:00000000000002fc .L0 
     /tmp/cc8hdfYh.s:473    .text:00000000000002fc .L0 
     /tmp/cc8hdfYh.s:475    .text:0000000000000300 .L0 
     /tmp/cc8hdfYh.s:478    .text:0000000000000308 .L0 
     /tmp/cc8hdfYh.s:483    .text:0000000000000310 .L0 
     /tmp/cc8hdfYh.s:486    .text:0000000000000314 .L0 
     /tmp/cc8hdfYh.s:489    .text:0000000000000318 .L0 
     /tmp/cc8hdfYh.s:491    .text:000000000000031c .L0 
     /tmp/cc8hdfYh.s:499    .text:0000000000000320 .L0 
     /tmp/cc8hdfYh.s:500    .text:0000000000000324 .L0 
     /tmp/cc8hdfYh.s:501    .text:0000000000000324 .L0 
     /tmp/cc8hdfYh.s:502    .text:0000000000000324 .L0 
     /tmp/cc8hdfYh.s:504    .text:0000000000000328 .L0 
     /tmp/cc8hdfYh.s:508    .text:000000000000032c .L0 
GAS LISTING /tmp/cc8hdfYh.s 			page 29


     /tmp/cc8hdfYh.s:512    .text:000000000000032c .L0 
     /tmp/cc8hdfYh.s:516    .text:0000000000000330 .L0 
     /tmp/cc8hdfYh.s:517    .text:0000000000000330 .L0 
     /tmp/cc8hdfYh.s:519    .text:0000000000000334 .L0 
     /tmp/cc8hdfYh.s:521    .text:0000000000000338 .L0 
     /tmp/cc8hdfYh.s:523    .text:000000000000033c .L0 
     /tmp/cc8hdfYh.s:525    .text:0000000000000340 .L0 
     /tmp/cc8hdfYh.s:527    .text:0000000000000344 .L0 
     /tmp/cc8hdfYh.s:530    .text:0000000000000348 .L0 
     /tmp/cc8hdfYh.s:531    .text:0000000000000348 .L0 
     /tmp/cc8hdfYh.s:535    .text:000000000000034c .L0 
     /tmp/cc8hdfYh.s:536    .text:000000000000034c .L0 
     /tmp/cc8hdfYh.s:540    .text:0000000000000350 .L0 
     /tmp/cc8hdfYh.s:542    .text:0000000000000354 .L0 
     /tmp/cc8hdfYh.s:543    .text:0000000000000354 .L0 
     /tmp/cc8hdfYh.s:546    .text:000000000000035c .L0 
     /tmp/cc8hdfYh.s:548    .text:0000000000000360 .L0 
     /tmp/cc8hdfYh.s:550    .text:0000000000000364 .L0 
     /tmp/cc8hdfYh.s:551    .text:0000000000000364 .L0 
     /tmp/cc8hdfYh.s:553    .text:0000000000000368 .L0 
     /tmp/cc8hdfYh.s:557    .text:0000000000000374 .L0 
     /tmp/cc8hdfYh.s:560    .text:000000000000037c .L0 
     /tmp/cc8hdfYh.s:562    .text:0000000000000380 .L0 
     /tmp/cc8hdfYh.s:564    .text:0000000000000384 .L0 
     /tmp/cc8hdfYh.s:566    .text:0000000000000388 .L0 
     /tmp/cc8hdfYh.s:568    .text:000000000000038c .L0 
     /tmp/cc8hdfYh.s:577    .text:0000000000000394 .L0 
     /tmp/cc8hdfYh.s:584    .text:000000000000039c .L0 
     /tmp/cc8hdfYh.s:587    .text:00000000000003a4 .L0 
     /tmp/cc8hdfYh.s:598    .text:00000000000003a4 _ZN16KObjectAllocator10freeObjectEPv
     /tmp/cc8hdfYh.s:601    .text:00000000000003a4 .L0 
     /tmp/cc8hdfYh.s:603    .text:00000000000003a4 .L0 
     /tmp/cc8hdfYh.s:605    .text:00000000000003a4 .L0 
     /tmp/cc8hdfYh.s:606    .text:00000000000003a4 .L0 
     /tmp/cc8hdfYh.s:611    .text:00000000000003ac .L0 
     /tmp/cc8hdfYh.s:615    .text:00000000000003b0 .L0 
     /tmp/cc8hdfYh.s:616    .text:00000000000003b0 .L0 
     /tmp/cc8hdfYh.s:618    .text:00000000000003b4 .L0 
     /tmp/cc8hdfYh.s:621    .text:00000000000003b8 .L0 
     /tmp/cc8hdfYh.s:622    .text:00000000000003b8 .L0 
     /tmp/cc8hdfYh.s:624    .text:00000000000003bc .L0 
     /tmp/cc8hdfYh.s:628    .text:00000000000003c8 .L0 
     /tmp/cc8hdfYh.s:630    .text:00000000000003cc .L0 
     /tmp/cc8hdfYh.s:631    .text:00000000000003cc .L0 
     /tmp/cc8hdfYh.s:634    .text:00000000000003d0 .L0 
     /tmp/cc8hdfYh.s:635    .text:00000000000003d0 .L0 
     /tmp/cc8hdfYh.s:637    .text:00000000000003d4 .L0 
     /tmp/cc8hdfYh.s:640    .text:00000000000003d8 .L0 
     /tmp/cc8hdfYh.s:643    .text:00000000000003dc .L0 
     /tmp/cc8hdfYh.s:644    .text:00000000000003dc .L0 
     /tmp/cc8hdfYh.s:646    .text:00000000000003e0 .L0 
     /tmp/cc8hdfYh.s:648    .text:00000000000003e4 .L0 
     /tmp/cc8hdfYh.s:649    .text:00000000000003e4 .L0 
     /tmp/cc8hdfYh.s:652    .text:00000000000003e8 .L0 
     /tmp/cc8hdfYh.s:654    .text:00000000000003ec .L0 
     /tmp/cc8hdfYh.s:659    .text:00000000000003f4 .L0 
     /tmp/cc8hdfYh.s:661    .text:00000000000003f8 .L0 
GAS LISTING /tmp/cc8hdfYh.s 			page 30


     /tmp/cc8hdfYh.s:664    .text:0000000000000400 .L0 
     /tmp/cc8hdfYh.s:668    .text:0000000000000408 .L0 
     /tmp/cc8hdfYh.s:673    .text:0000000000000418 .L0 
     /tmp/cc8hdfYh.s:679    .text:000000000000041c .L0 
     /tmp/cc8hdfYh.s:680    .text:0000000000000420 .L0 
     /tmp/cc8hdfYh.s:683    .text:0000000000000428 .L0 
     /tmp/cc8hdfYh.s:684    .text:0000000000000428 .L0 
     /tmp/cc8hdfYh.s:686    .text:000000000000042c .L0 
     /tmp/cc8hdfYh.s:688    .text:000000000000042c .L0 
     /tmp/cc8hdfYh.s:689    .text:000000000000042c .L0 
     /tmp/cc8hdfYh.s:694    .text:000000000000043c .L0 
     /tmp/cc8hdfYh.s:695    .text:0000000000000440 .L0 
     /tmp/cc8hdfYh.s:697    .text:0000000000000444 .L0 
     /tmp/cc8hdfYh.s:698    .text:0000000000000444 .L0 
     /tmp/cc8hdfYh.s:700    .text:0000000000000448 .L0 
     /tmp/cc8hdfYh.s:702    .text:000000000000044c .L0 
     /tmp/cc8hdfYh.s:708    .text:000000000000044c _ZN16KObjectAllocator28handleNotEnoughMemoryProblemEv
     /tmp/cc8hdfYh.s:711    .text:000000000000044c .L0 
     /tmp/cc8hdfYh.s:713    .text:000000000000044c .L0 
     /tmp/cc8hdfYh.s:714    .text:0000000000000450 .L0 
     /tmp/cc8hdfYh.s:724    .text:0000000000000474 .L0 
     /tmp/cc8hdfYh.s:725    .text:0000000000000474 .L0 
     /tmp/cc8hdfYh.s:726    .text:0000000000000474 .L0 
     /tmp/cc8hdfYh.s:727    .text:0000000000000474 .L0 
     /tmp/cc8hdfYh.s:728    .text:0000000000000474 .L0 
     /tmp/cc8hdfYh.s:729    .text:0000000000000474 .L0 
     /tmp/cc8hdfYh.s:730    .text:0000000000000474 .L0 
     /tmp/cc8hdfYh.s:731    .text:0000000000000474 .L0 
     /tmp/cc8hdfYh.s:732    .text:0000000000000474 .L0 
     /tmp/cc8hdfYh.s:734    .text:0000000000000478 .L0 
     /tmp/cc8hdfYh.s:737    .text:000000000000047c .L0 
     /tmp/cc8hdfYh.s:738    .text:000000000000047c .L0 
     /tmp/cc8hdfYh.s:740    .text:0000000000000480 .L0 
     /tmp/cc8hdfYh.s:743    .text:0000000000000484 .L0 
     /tmp/cc8hdfYh.s:744    .text:0000000000000484 .L0 
     /tmp/cc8hdfYh.s:747    .text:0000000000000488 .L0 
     /tmp/cc8hdfYh.s:748    .text:0000000000000488 .L0 
     /tmp/cc8hdfYh.s:755    .text:00000000000004a0 .L0 
     /tmp/cc8hdfYh.s:760    .text:00000000000004ac .L0 
     /tmp/cc8hdfYh.s:761    .text:00000000000004ac .L0 
     /tmp/cc8hdfYh.s:769    .text:00000000000004c4 .L0 
     /tmp/cc8hdfYh.s:772    .text:00000000000004c8 .L0 
     /tmp/cc8hdfYh.s:776    .text:00000000000004cc .L0 
     /tmp/cc8hdfYh.s:777    .text:00000000000004cc .L0 
     /tmp/cc8hdfYh.s:779    .text:00000000000004d0 .L0 
     /tmp/cc8hdfYh.s:781    .text:00000000000004d4 .L0 
     /tmp/cc8hdfYh.s:782    .text:00000000000004d4 .L0 
     /tmp/cc8hdfYh.s:784    .text:00000000000004d8 .L0 
     /tmp/cc8hdfYh.s:786    .text:00000000000004dc .L0 
     /tmp/cc8hdfYh.s:788    .text:00000000000004e0 .L0 
     /tmp/cc8hdfYh.s:791    .text:00000000000004e8 .L0 
     /tmp/cc8hdfYh.s:793    .text:00000000000004ec .L0 
     /tmp/cc8hdfYh.s:801    .text:00000000000004f4 .L0 
     /tmp/cc8hdfYh.s:805    .text:00000000000004f8 .L0 
     /tmp/cc8hdfYh.s:807    .text:00000000000004fc .L0 
     /tmp/cc8hdfYh.s:808    .text:00000000000004fc .L0 
     /tmp/cc8hdfYh.s:811    .text:0000000000000504 .L0 
GAS LISTING /tmp/cc8hdfYh.s 			page 31


     /tmp/cc8hdfYh.s:813    .text:0000000000000508 .L0 
     /tmp/cc8hdfYh.s:815    .text:000000000000050c .L0 
     /tmp/cc8hdfYh.s:817    .text:0000000000000510 .L0 
     /tmp/cc8hdfYh.s:819    .text:0000000000000514 .L0 
     /tmp/cc8hdfYh.s:822    .text:000000000000051c .L0 
     /tmp/cc8hdfYh.s:826    .text:0000000000000528 .L0 
     /tmp/cc8hdfYh.s:828    .text:000000000000052c .L0 
     /tmp/cc8hdfYh.s:830    .text:0000000000000530 .L0 
     /tmp/cc8hdfYh.s:836    .text:0000000000000538 .L0 
     /tmp/cc8hdfYh.s:840    .text:000000000000053c .L0 
     /tmp/cc8hdfYh.s:842    .text:0000000000000540 .L0 
     /tmp/cc8hdfYh.s:843    .text:0000000000000540 .L0 
     /tmp/cc8hdfYh.s:847    .text:000000000000054c .L0 
     /tmp/cc8hdfYh.s:849    .text:0000000000000550 .L0 
     /tmp/cc8hdfYh.s:851    .text:0000000000000554 .L0 
     /tmp/cc8hdfYh.s:853    .text:0000000000000558 .L0 
     /tmp/cc8hdfYh.s:855    .text:000000000000055c .L0 
     /tmp/cc8hdfYh.s:862    .text:0000000000000564 .L0 
     /tmp/cc8hdfYh.s:863    .text:0000000000000564 .L0 
     /tmp/cc8hdfYh.s:870    .text:000000000000056c .L0 
     /tmp/cc8hdfYh.s:871    .text:000000000000056c .L0 
     /tmp/cc8hdfYh.s:876    .text:0000000000000578 .L0 
     /tmp/cc8hdfYh.s:878    .text:000000000000057c .L0 
     /tmp/cc8hdfYh.s:880    .text:0000000000000580 .L0 
     /tmp/cc8hdfYh.s:884    .text:0000000000000584 .L0 
     /tmp/cc8hdfYh.s:885    .text:0000000000000584 .L0 
     /tmp/cc8hdfYh.s:887    .text:0000000000000588 .L0 
     /tmp/cc8hdfYh.s:890    .text:000000000000058c .L0 
     /tmp/cc8hdfYh.s:894    .text:0000000000000590 .L0 
     /tmp/cc8hdfYh.s:897    .text:0000000000000594 .L0 
     /tmp/cc8hdfYh.s:903    .text:000000000000059c .L0 
     /tmp/cc8hdfYh.s:904    .text:000000000000059c .L0 
     /tmp/cc8hdfYh.s:910    .text:00000000000005b0 .L0 
     /tmp/cc8hdfYh.s:911    .text:00000000000005b0 .L0 
     /tmp/cc8hdfYh.s:917    .text:00000000000005c4 .L0 
     /tmp/cc8hdfYh.s:918    .text:00000000000005c4 .L0 
     /tmp/cc8hdfYh.s:920    .text:00000000000005c8 .L0 
     /tmp/cc8hdfYh.s:921    .text:00000000000005c8 .L0 
     /tmp/cc8hdfYh.s:923    .text:00000000000005cc .L0 
     /tmp/cc8hdfYh.s:925    .text:00000000000005d0 .L0 
     /tmp/cc8hdfYh.s:927    .text:00000000000005d4 .L0 
     /tmp/cc8hdfYh.s:929    .text:00000000000005d8 .L0 
     /tmp/cc8hdfYh.s:930    .text:00000000000005d8 .L0 
     /tmp/cc8hdfYh.s:932    .text:00000000000005dc .L0 
     /tmp/cc8hdfYh.s:933    .text:00000000000005dc .L0 
     /tmp/cc8hdfYh.s:935    .text:00000000000005e0 .L0 
     /tmp/cc8hdfYh.s:936    .text:00000000000005e0 .L0 
     /tmp/cc8hdfYh.s:938    .text:00000000000005e4 .L0 
     /tmp/cc8hdfYh.s:939    .text:00000000000005e4 .L0 
     /tmp/cc8hdfYh.s:944    .text:00000000000005ec .L0 
     /tmp/cc8hdfYh.s:948    .text:00000000000005f0 .L0 
     /tmp/cc8hdfYh.s:949    .text:00000000000005f4 .L0 
     /tmp/cc8hdfYh.s:950    .text:00000000000005f4 .L0 
     /tmp/cc8hdfYh.s:952    .text:00000000000005f8 .L0 
     /tmp/cc8hdfYh.s:953    .text:00000000000005f8 .L0 
     /tmp/cc8hdfYh.s:955    .text:00000000000005fc .L0 
     /tmp/cc8hdfYh.s:958    .text:0000000000000600 .L0 
GAS LISTING /tmp/cc8hdfYh.s 			page 32


     /tmp/cc8hdfYh.s:960    .text:0000000000000604 .L0 
     /tmp/cc8hdfYh.s:963    .text:0000000000000608 .L0 
     /tmp/cc8hdfYh.s:965    .text:000000000000060c .L0 
     /tmp/cc8hdfYh.s:967    .text:0000000000000610 .L0 
     /tmp/cc8hdfYh.s:969    .text:0000000000000614 .L0 
     /tmp/cc8hdfYh.s:971    .text:0000000000000618 .L0 
     /tmp/cc8hdfYh.s:975    .text:000000000000061c .L0 
     /tmp/cc8hdfYh.s:977    .text:000000000000061c .L0 
     /tmp/cc8hdfYh.s:980    .text:0000000000000624 .L0 
     /tmp/cc8hdfYh.s:986    .text:0000000000000624 _ZN16KObjectAllocator17allocateNewObjectEv
     /tmp/cc8hdfYh.s:989    .text:0000000000000624 .L0 
     /tmp/cc8hdfYh.s:991    .text:0000000000000624 .L0 
     /tmp/cc8hdfYh.s:992    .text:0000000000000628 .L0 
     /tmp/cc8hdfYh.s:997    .text:0000000000000638 .L0 
     /tmp/cc8hdfYh.s:998    .text:0000000000000638 .L0 
     /tmp/cc8hdfYh.s:999    .text:0000000000000638 .L0 
     /tmp/cc8hdfYh.s:1000   .text:0000000000000638 .L0 
     /tmp/cc8hdfYh.s:1002   .text:000000000000063c .L0 
     /tmp/cc8hdfYh.s:1005   .text:0000000000000640 .L0 
     /tmp/cc8hdfYh.s:1006   .text:0000000000000640 .L0 
     /tmp/cc8hdfYh.s:1011   .text:000000000000064c .L0 
     /tmp/cc8hdfYh.s:1014   .text:0000000000000650 .L0 
     /tmp/cc8hdfYh.s:1016   .text:0000000000000658 .L0 
     /tmp/cc8hdfYh.s:1017   .text:0000000000000658 .L0 
     /tmp/cc8hdfYh.s:1019   .text:000000000000065c .L0 
     /tmp/cc8hdfYh.s:1020   .text:000000000000065c .L0 
     /tmp/cc8hdfYh.s:1022   .text:0000000000000660 .L0 
     /tmp/cc8hdfYh.s:1025   .text:0000000000000664 .L0 
     /tmp/cc8hdfYh.s:1028   .text:0000000000000668 .L0 
     /tmp/cc8hdfYh.s:1032   .text:000000000000066c .L0 
     /tmp/cc8hdfYh.s:1034   .text:000000000000066c .L0 
     /tmp/cc8hdfYh.s:1035   .text:000000000000066c .L0 
     /tmp/cc8hdfYh.s:1037   .text:0000000000000670 .L0 
     /tmp/cc8hdfYh.s:1038   .text:0000000000000670 .L0 
     /tmp/cc8hdfYh.s:1044   .text:0000000000000680 .L0 
     /tmp/cc8hdfYh.s:1046   .text:0000000000000684 .L0 
     /tmp/cc8hdfYh.s:1047   .text:0000000000000684 .L0 
     /tmp/cc8hdfYh.s:1051   .text:0000000000000690 .L0 
     /tmp/cc8hdfYh.s:1053   .text:0000000000000694 .L0 
     /tmp/cc8hdfYh.s:1054   .text:0000000000000694 .L0 
     /tmp/cc8hdfYh.s:1060   .text:00000000000006a4 .L0 
     /tmp/cc8hdfYh.s:1061   .text:00000000000006a8 .L0 
     /tmp/cc8hdfYh.s:1069   .text:00000000000006a8 .L0 
     /tmp/cc8hdfYh.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/cc8hdfYh.s:69     .text:0000000000000034 .L0 
     /tmp/cc8hdfYh.s:11     .rodata.str1.8:0000000000000008 .LC1
     /tmp/cc8hdfYh.s:101    .text:0000000000000080 .L0 
     /tmp/cc8hdfYh.s:14     .rodata.str1.8:0000000000000010 .LC2
     /tmp/cc8hdfYh.s:150    .text:00000000000000e8 .L0 
     /tmp/cc8hdfYh.s:17     .rodata.str1.8:0000000000000018 .LC3
     /tmp/cc8hdfYh.s:174    .text:000000000000010c .L0 
     /tmp/cc8hdfYh.s:23     .rodata.str1.8:0000000000000028 .LC5
     /tmp/cc8hdfYh.s:206    .text:0000000000000138 .L0 
     /tmp/cc8hdfYh.s:20     .rodata.str1.8:0000000000000020 .LC4
     /tmp/cc8hdfYh.s:230    .text:0000000000000160 .L0 
     /tmp/cc8hdfYh.s:244    .text:0000000000000178 .L0 
     /tmp/cc8hdfYh.s:260    .text:0000000000000190 .L0 
GAS LISTING /tmp/cc8hdfYh.s 			page 33


     /tmp/cc8hdfYh.s:292    .text:00000000000001dc .L0 
     /tmp/cc8hdfYh.s:349    .text:0000000000000254 .L0 
     /tmp/cc8hdfYh.s:373    .text:0000000000000278 .L0 
     /tmp/cc8hdfYh.s:592    .rodata.str1.8:0000000000000030 .LC6
     /tmp/cc8hdfYh.s:689    .text:000000000000042c .L0 
     /tmp/cc8hdfYh.s:181    .text:0000000000000120 .L11
     /tmp/cc8hdfYh.s:104    .text:0000000000000090 .L6
     /tmp/cc8hdfYh.s:132    .text:00000000000000c8 .L7
     /tmp/cc8hdfYh.s:146    .text:00000000000000e8 .L4
     /tmp/cc8hdfYh.s:62     .text:0000000000000034 .L27
     /tmp/cc8hdfYh.s:73     .text:0000000000000048 .L28
     /tmp/cc8hdfYh.s:86     .text:0000000000000064 .L8
     /tmp/cc8hdfYh.s:80     .text:0000000000000058 .L29
     /tmp/cc8hdfYh.s:168    .text:000000000000010c .L3
     /tmp/cc8hdfYh.s:108    .text:0000000000000094 .L9
     /tmp/cc8hdfYh.s:194    .text:0000000000000130 .L25
     /tmp/cc8hdfYh.s:157    .text:00000000000000fc .L10
     /tmp/cc8hdfYh.s:213    .text:000000000000014c .L2
     /tmp/cc8hdfYh.s:238    .text:0000000000000178 .L12
     /tmp/cc8hdfYh.s:202    .text:0000000000000138 .L13
     /tmp/cc8hdfYh.s:223    .text:0000000000000158 .L14
     /tmp/cc8hdfYh.s:380    .text:000000000000028c .L24
     /tmp/cc8hdfYh.s:295    .text:00000000000001ec .L19
     /tmp/cc8hdfYh.s:331    .text:0000000000000234 .L20
     /tmp/cc8hdfYh.s:345    .text:0000000000000254 .L17
     /tmp/cc8hdfYh.s:253    .text:0000000000000190 .L30
     /tmp/cc8hdfYh.s:264    .text:00000000000001a4 .L31
     /tmp/cc8hdfYh.s:277    .text:00000000000001c0 .L21
     /tmp/cc8hdfYh.s:271    .text:00000000000001b4 .L32
     /tmp/cc8hdfYh.s:367    .text:0000000000000278 .L16
     /tmp/cc8hdfYh.s:299    .text:00000000000001f0 .L22
     /tmp/cc8hdfYh.s:397    .text:00000000000002a4 .L1
     /tmp/cc8hdfYh.s:356    .text:0000000000000268 .L23
     /tmp/cc8hdfYh.s:581    .text:000000000000039c .L41
     /tmp/cc8hdfYh.s:514    .text:0000000000000330 .L39
     /tmp/cc8hdfYh.s:572    .text:0000000000000394 .L35
     /tmp/cc8hdfYh.s:507    .text:000000000000032c .L36
     /tmp/cc8hdfYh.s:461    .text:00000000000002ec .L43
     /tmp/cc8hdfYh.s:538    .text:0000000000000350 .L38
     /tmp/cc8hdfYh.s:446    .text:00000000000002dc .L40
     /tmp/cc8hdfYh.s:493    .text:0000000000000320 .L33
     /tmp/cc8hdfYh.s:613    .text:00000000000003b0 .L48
     /tmp/cc8hdfYh.s:675    .text:000000000000041c .L45
     /tmp/cc8hdfYh.s:609    .text:00000000000003ac .L46
     /tmp/cc8hdfYh.s:942    .text:00000000000005ec .L62
     /tmp/cc8hdfYh.s:974    .text:000000000000061c .L63
     /tmp/cc8hdfYh.s:803    .text:00000000000004f8 .L54
     /tmp/cc8hdfYh.s:773    .text:00000000000004cc .L55
     /tmp/cc8hdfYh.s:832    .text:0000000000000538 .L64
     /tmp/cc8hdfYh.s:797    .text:00000000000004f4 .L67
     /tmp/cc8hdfYh.s:946    .text:00000000000005f0 .L53
     /tmp/cc8hdfYh.s:858    .text:0000000000000564 .L57
     /tmp/cc8hdfYh.s:837    .text:000000000000053c .L56
     /tmp/cc8hdfYh.s:892    .text:0000000000000590 .L61
     /tmp/cc8hdfYh.s:867    .text:000000000000056c .L68
     /tmp/cc8hdfYh.s:899    .text:000000000000059c .L58
     /tmp/cc8hdfYh.s:882    .text:0000000000000584 .L60
GAS LISTING /tmp/cc8hdfYh.s 			page 34


     /tmp/cc8hdfYh.s:1031   .text:000000000000066c .L72
     /tmp/cc8hdfYh.s:1012   .text:0000000000000650 .L69
     /tmp/cc8hdfYh.s:2306   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc8hdfYh.s:3621   .debug_str:000000000000075d .LASF99
     /tmp/cc8hdfYh.s:3555   .debug_str:0000000000000451 .LASF100
     /tmp/cc8hdfYh.s:3581   .debug_str:0000000000000574 .LASF101
     /tmp/cc8hdfYh.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc8hdfYh.s:1064   .text:00000000000006a8 .Letext0
     /tmp/cc8hdfYh.s:3447   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc8hdfYh.s:3547   .debug_str:0000000000000412 .LASF0
     /tmp/cc8hdfYh.s:3559   .debug_str:000000000000047d .LASF1
     /tmp/cc8hdfYh.s:3537   .debug_str:00000000000003a5 .LASF2
     /tmp/cc8hdfYh.s:3491   .debug_str:00000000000001f9 .LASF3
     /tmp/cc8hdfYh.s:3513   .debug_str:00000000000002e3 .LASF4
     /tmp/cc8hdfYh.s:3603   .debug_str:00000000000006b7 .LASF5
     /tmp/cc8hdfYh.s:3463   .debug_str:00000000000000a0 .LASF6
     /tmp/cc8hdfYh.s:3563   .debug_str:0000000000000496 .LASF7
     /tmp/cc8hdfYh.s:3545   .debug_str:00000000000003ff .LASF8
     /tmp/cc8hdfYh.s:3637   .debug_str:00000000000008c5 .LASF9
     /tmp/cc8hdfYh.s:3503   .debug_str:0000000000000253 .LASF10
     /tmp/cc8hdfYh.s:3575   .debug_str:0000000000000533 .LASF11
     /tmp/cc8hdfYh.s:3627   .debug_str:0000000000000874 .LASF12
     /tmp/cc8hdfYh.s:3465   .debug_str:00000000000000a7 .LASF13
     /tmp/cc8hdfYh.s:3455   .debug_str:0000000000000055 .LASF14
     /tmp/cc8hdfYh.s:3477   .debug_str:000000000000013f .LASF15
     /tmp/cc8hdfYh.s:3595   .debug_str:000000000000065d .LASF16
     /tmp/cc8hdfYh.s:3489   .debug_str:00000000000001e3 .LASF17
     /tmp/cc8hdfYh.s:3535   .debug_str:0000000000000395 .LASF50
     /tmp/cc8hdfYh.s:3579   .debug_str:0000000000000562 .LASF102
     /tmp/cc8hdfYh.s:3529   .debug_str:0000000000000367 .LASF18
     /tmp/cc8hdfYh.s:3659   .debug_str:00000000000009bd .LASF19
     /tmp/cc8hdfYh.s:3553   .debug_str:0000000000000448 .LASF103
     /tmp/cc8hdfYh.s:3625   .debug_str:0000000000000854 .LASF104
     /tmp/cc8hdfYh.s:3635   .debug_str:00000000000008ae .LASF36
     /tmp/cc8hdfYh.s:3479   .debug_str:000000000000014b .LASF38
     /tmp/cc8hdfYh.s:3609   .debug_str:00000000000006f4 .LASF24
     /tmp/cc8hdfYh.s:3567   .debug_str:00000000000004b9 .LASF26
     /tmp/cc8hdfYh.s:3631   .debug_str:0000000000000895 .LASF20
     /tmp/cc8hdfYh.s:3591   .debug_str:000000000000060e .LASF22
     /tmp/cc8hdfYh.s:3643   .debug_str:0000000000000904 .LASF21
     /tmp/cc8hdfYh.s:3459   .debug_str:0000000000000071 .LASF23
     /tmp/cc8hdfYh.s:3597   .debug_str:0000000000000673 .LASF25
     /tmp/cc8hdfYh.s:3589   .debug_str:00000000000005d7 .LASF27
     /tmp/cc8hdfYh.s:3473   .debug_str:000000000000011a .LASF28
     /tmp/cc8hdfYh.s:3483   .debug_str:00000000000001a0 .LASF29
     /tmp/cc8hdfYh.s:3523   .debug_str:0000000000000338 .LASF30
     /tmp/cc8hdfYh.s:3639   .debug_str:00000000000008d5 .LASF31
     /tmp/cc8hdfYh.s:3533   .debug_str:0000000000000387 .LASF32
     /tmp/cc8hdfYh.s:3481   .debug_str:000000000000017a .LASF33
     /tmp/cc8hdfYh.s:3645   .debug_str:000000000000090e .LASF34
     /tmp/cc8hdfYh.s:3511   .debug_str:00000000000002bc .LASF35
     /tmp/cc8hdfYh.s:3497   .debug_str:0000000000000229 .LASF37
     /tmp/cc8hdfYh.s:3515   .debug_str:00000000000002ea .LASF39
     /tmp/cc8hdfYh.s:3461   .debug_str:0000000000000093 .LASF40
     /tmp/cc8hdfYh.s:3647   .debug_str:000000000000091d .LASF41
     /tmp/cc8hdfYh.s:3607   .debug_str:00000000000006de .LASF42
     /tmp/cc8hdfYh.s:3613   .debug_str:0000000000000716 .LASF43
GAS LISTING /tmp/cc8hdfYh.s 			page 35


     /tmp/cc8hdfYh.s:3583   .debug_str:00000000000005a7 .LASF44
     /tmp/cc8hdfYh.s:3577   .debug_str:0000000000000542 .LASF45
     /tmp/cc8hdfYh.s:3641   .debug_str:00000000000008fa .LASF46
     /tmp/cc8hdfYh.s:3519   .debug_str:000000000000031c .LASF47
     /tmp/cc8hdfYh.s:3655   .debug_str:00000000000009a5 .LASF48
     /tmp/cc8hdfYh.s:3453   .debug_str:0000000000000046 .LASF49
     /tmp/cc8hdfYh.s:3505   .debug_str:0000000000000261 .LASF51
     /tmp/cc8hdfYh.s:3471   .debug_str:0000000000000100 .LASF52
     /tmp/cc8hdfYh.s:3469   .debug_str:00000000000000e5 .LASF53
     /tmp/cc8hdfYh.s:3475   .debug_str:0000000000000132 .LASF54
     /tmp/cc8hdfYh.s:3539   .debug_str:00000000000003b3 .LASF55
     /tmp/cc8hdfYh.s:3611   .debug_str:0000000000000706 .LASF105
     /tmp/cc8hdfYh.s:3449   .debug_str:0000000000000000 .LASF106
     /tmp/cc8hdfYh.s:3509   .debug_str:00000000000002a8 .LASF56
     /tmp/cc8hdfYh.s:3649   .debug_str:0000000000000935 .LASF57
     /tmp/cc8hdfYh.s:3485   .debug_str:00000000000001d0 .LASF58
     /tmp/cc8hdfYh.s:3543   .debug_str:00000000000003d8 .LASF59
     /tmp/cc8hdfYh.s:3585   .debug_str:00000000000005b0 .LASF60
     /tmp/cc8hdfYh.s:3623   .debug_str:0000000000000821 .LASF61
     /tmp/cc8hdfYh.s:3599   .debug_str:0000000000000692 .LASF62
     /tmp/cc8hdfYh.s:3571   .debug_str:00000000000004f4 .LASF63
     /tmp/cc8hdfYh.s:3605   .debug_str:00000000000006c9 .LASF64
     /tmp/cc8hdfYh.s:3467   .debug_str:00000000000000b7 .LASF65
     /tmp/cc8hdfYh.s:3551   .debug_str:0000000000000431 .LASF66
     /tmp/cc8hdfYh.s:3651   .debug_str:0000000000000962 .LASF67
     /tmp/cc8hdfYh.s:3601   .debug_str:00000000000006a5 .LASF68
     /tmp/cc8hdfYh.s:3451   .debug_str:000000000000001b .LASF69
     /tmp/cc8hdfYh.s:3617   .debug_str:0000000000000743 .LASF70
     /tmp/cc8hdfYh.s:3493   .debug_str:00000000000001ff .LASF71
     /tmp/cc8hdfYh.s:3525   .debug_str:0000000000000345 .LASF72
     /tmp/cc8hdfYh.s:3507   .debug_str:0000000000000272 .LASF73
     /tmp/cc8hdfYh.s:3557   .debug_str:000000000000046a .LASF74
     /tmp/cc8hdfYh.s:3593   .debug_str:0000000000000631 .LASF75
     /tmp/cc8hdfYh.s:3531   .debug_str:0000000000000370 .LASF76
     /tmp/cc8hdfYh.s:3565   .debug_str:00000000000004a9 .LASF77
     /tmp/cc8hdfYh.s:3549   .debug_str:000000000000041f .LASF78
     /tmp/cc8hdfYh.s:3517   .debug_str:0000000000000311 .LASF79
     /tmp/cc8hdfYh.s:3633   .debug_str:00000000000008a0 .LASF80
     /tmp/cc8hdfYh.s:3541   .debug_str:00000000000003cd .LASF81
     /tmp/cc8hdfYh.s:3661   .debug_str:00000000000009c2 .LASF82
     /tmp/cc8hdfYh.s:3569   .debug_str:00000000000004e3 .LASF83
     /tmp/cc8hdfYh.s:3495   .debug_str:0000000000000224 .LASF84
     /tmp/cc8hdfYh.s:709    .text:000000000000044c .LFB20
     /tmp/cc8hdfYh.s:981    .text:0000000000000624 .LFE20
     /tmp/cc8hdfYh.s:3487   .debug_str:00000000000001de .LASF89
     /tmp/cc8hdfYh.s:2932   .debug_loc:0000000000000000 .LLST19
     /tmp/cc8hdfYh.s:3615   .debug_str:000000000000072c .LASF85
     /tmp/cc8hdfYh.s:2954   .debug_loc:000000000000005f .LLST20
     /tmp/cc8hdfYh.s:3573   .debug_str:0000000000000520 .LASF86
     /tmp/cc8hdfYh.s:2965   .debug_loc:0000000000000095 .LLST21
     /tmp/cc8hdfYh.s:3663   .debug_str:00000000000009d6 .LASF87
     /tmp/cc8hdfYh.s:2992   .debug_loc:00000000000000f9 .LLST22
     /tmp/cc8hdfYh.s:3521   .debug_str:0000000000000327 .LASF88
     /tmp/cc8hdfYh.s:3011   .debug_loc:0000000000000155 .LLST23
     /tmp/cc8hdfYh.s:770    .text:00000000000004c8 .LBB33
     /tmp/cc8hdfYh.s:798    .text:00000000000004f4 .LBE33
     /tmp/cc8hdfYh.s:3030   .debug_loc:00000000000001b1 .LLST24
GAS LISTING /tmp/cc8hdfYh.s 			page 36


     /tmp/cc8hdfYh.s:799    .text:00000000000004f4 .LBB34
     /tmp/cc8hdfYh.s:833    .text:0000000000000538 .LBE34
     /tmp/cc8hdfYh.s:3037   .debug_loc:00000000000001d4 .LLST25
     /tmp/cc8hdfYh.s:809    .text:0000000000000504 .LVL80
     /tmp/cc8hdfYh.s:824    .text:0000000000000528 .LVL81
     /tmp/cc8hdfYh.s:834    .text:0000000000000538 .LBB35
     /tmp/cc8hdfYh.s:859    .text:0000000000000564 .LBE35
     /tmp/cc8hdfYh.s:3044   .debug_loc:00000000000001f7 .LLST26
     /tmp/cc8hdfYh.s:861    .text:0000000000000564 .LBB36
     /tmp/cc8hdfYh.s:901    .text:000000000000059c .LBE36
     /tmp/cc8hdfYh.s:3051   .debug_loc:000000000000021a .LLST27
     /tmp/cc8hdfYh.s:3389   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/cc8hdfYh.s:3058   .debug_loc:000000000000023d .LLST28
     /tmp/cc8hdfYh.s:749    .text:0000000000000490 .LVL70
     /tmp/cc8hdfYh.s:753    .text:00000000000004a0 .LVL71
     /tmp/cc8hdfYh.s:762    .text:00000000000004b4 .LVL73
     /tmp/cc8hdfYh.s:765    .text:00000000000004c0 .LVL74
     /tmp/cc8hdfYh.s:905    .text:00000000000005a4 .LVL89
     /tmp/cc8hdfYh.s:908    .text:00000000000005b0 .LVL90
     /tmp/cc8hdfYh.s:912    .text:00000000000005b8 .LVL91
     /tmp/cc8hdfYh.s:915    .text:00000000000005c4 .LVL92
     /tmp/cc8hdfYh.s:599    .text:00000000000003a4 .LFB19
     /tmp/cc8hdfYh.s:703    .text:000000000000044c .LFE19
     /tmp/cc8hdfYh.s:3075   .debug_loc:0000000000000288 .LLST13
     /tmp/cc8hdfYh.s:3501   .debug_str:0000000000000245 .LASF107
     /tmp/cc8hdfYh.s:3089   .debug_loc:00000000000002c1 .LLST14
     /tmp/cc8hdfYh.s:604    .text:00000000000003a4 .LBB31
     /tmp/cc8hdfYh.s:677    .text:000000000000041c .LBE31
     /tmp/cc8hdfYh.s:3103   .debug_loc:00000000000002fa .LLST15
     /tmp/cc8hdfYh.s:619    .text:00000000000003b8 .LBB32
     /tmp/cc8hdfYh.s:676    .text:000000000000041c .LBE32
     /tmp/cc8hdfYh.s:3561   .debug_str:0000000000000490 .LASF90
     /tmp/cc8hdfYh.s:3119   .debug_loc:0000000000000344 .LLST16
     /tmp/cc8hdfYh.s:3527   .debug_str:0000000000000362 .LASF91
     /tmp/cc8hdfYh.s:3156   .debug_loc:00000000000003a3 .LLST17
     /tmp/cc8hdfYh.s:3163   .debug_loc:00000000000003c6 .LLST18
     /tmp/cc8hdfYh.s:692    .text:000000000000043c .LVL66
     /tmp/cc8hdfYh.s:430    .text:00000000000002cc .LFB18
     /tmp/cc8hdfYh.s:588    .text:00000000000003a4 .LFE18
     /tmp/cc8hdfYh.s:3170   .debug_loc:00000000000003e9 .LLST8
     /tmp/cc8hdfYh.s:3195   .debug_loc:000000000000044b .LLST9
     /tmp/cc8hdfYh.s:3207   .debug_loc:0000000000000482 .LLST10
     /tmp/cc8hdfYh.s:3218   .debug_loc:00000000000004b8 .LLST11
     /tmp/cc8hdfYh.s:3239   .debug_loc:0000000000000516 .LLST12
     /tmp/cc8hdfYh.s:987    .text:0000000000000624 .LFB17
     /tmp/cc8hdfYh.s:1062   .text:00000000000006a8 .LFE17
     /tmp/cc8hdfYh.s:3259   .debug_loc:0000000000000573 .LLST29
     /tmp/cc8hdfYh.s:3619   .debug_str:000000000000074e .LASF92
     /tmp/cc8hdfYh.s:3281   .debug_loc:00000000000005d2 .LLST30
     /tmp/cc8hdfYh.s:1007   .text:0000000000000648 .LVL100
     /tmp/cc8hdfYh.s:1040   .text:000000000000067c .LVL105
     /tmp/cc8hdfYh.s:1049   .text:0000000000000690 .LVL107
     /tmp/cc8hdfYh.s:1056   .text:00000000000006a0 .LVL108
     /tmp/cc8hdfYh.s:30     .text:0000000000000000 .LFB16
     /tmp/cc8hdfYh.s:424    .text:00000000000002cc .LFE16
     /tmp/cc8hdfYh.s:3296   .debug_loc:000000000000061b .LLST0
     /tmp/cc8hdfYh.s:3657   .debug_str:00000000000009b1 .LASF93
GAS LISTING /tmp/cc8hdfYh.s 			page 37


     /tmp/cc8hdfYh.s:3587   .debug_str:00000000000005ca .LASF94
     /tmp/cc8hdfYh.s:3314   .debug_loc:0000000000000667 .LLST1
     /tmp/cc8hdfYh.s:3330   .debug_loc:00000000000006b1 .LLST2
     /tmp/cc8hdfYh.s:3337   .debug_loc:00000000000006d4 .LLST3
     /tmp/cc8hdfYh.s:71     .text:0000000000000044 .LVL3
     /tmp/cc8hdfYh.s:78     .text:0000000000000054 .LVL4
     /tmp/cc8hdfYh.s:85     .text:0000000000000064 .LVL5
     /tmp/cc8hdfYh.s:98     .text:0000000000000080 .LVL6
     /tmp/cc8hdfYh.s:103    .text:0000000000000090 .LVL7
     /tmp/cc8hdfYh.s:152    .text:00000000000000f8 .LVL9
     /tmp/cc8hdfYh.s:197    .text:0000000000000130 .LBB10
     /tmp/cc8hdfYh.s:241    .text:0000000000000178 .LBE10
     /tmp/cc8hdfYh.s:3344   .debug_loc:00000000000006f7 .LLST4
     /tmp/cc8hdfYh.s:220    .text:0000000000000154 .LBB12
     /tmp/cc8hdfYh.s:239    .text:0000000000000178 .LBE12
     /tmp/cc8hdfYh.s:3351   .debug_loc:000000000000071a .LLST5
     /tmp/cc8hdfYh.s:232    .text:0000000000000170 .LVL17
     /tmp/cc8hdfYh.s:208    .text:0000000000000148 .LVL14
     /tmp/cc8hdfYh.s:3362   .debug_loc:0000000000000750 .LLST6
     /tmp/cc8hdfYh.s:3369   .debug_loc:0000000000000773 .LLST7
     /tmp/cc8hdfYh.s:262    .text:00000000000001a0 .LVL23
     /tmp/cc8hdfYh.s:269    .text:00000000000001b0 .LVL24
     /tmp/cc8hdfYh.s:276    .text:00000000000001c0 .LVL25
     /tmp/cc8hdfYh.s:289    .text:00000000000001dc .LVL26
     /tmp/cc8hdfYh.s:294    .text:00000000000001ec .LVL27
     /tmp/cc8hdfYh.s:351    .text:0000000000000264 .LVL29
     /tmp/cc8hdfYh.s:176    .text:000000000000011c .LVL11
     /tmp/cc8hdfYh.s:246    .text:0000000000000188 .LVL20
     /tmp/cc8hdfYh.s:375    .text:0000000000000288 .LVL31
     /tmp/cc8hdfYh.s:3653   .debug_str:0000000000000992 .LASF95
     /tmp/cc8hdfYh.s:3457   .debug_str:0000000000000065 .LASF97
     /tmp/cc8hdfYh.s:3629   .debug_str:0000000000000883 .LASF96
     /tmp/cc8hdfYh.s:3499   .debug_str:0000000000000238 .LASF98
     /tmp/cc8hdfYh.s:712    .text:000000000000044c .LVL67
     /tmp/cc8hdfYh.s:956    .text:00000000000005fc .LVL95
     /tmp/cc8hdfYh.s:973    .text:000000000000061c .LVL97
     /tmp/cc8hdfYh.s:741    .text:0000000000000484 .LVL68
     /tmp/cc8hdfYh.s:961    .text:0000000000000604 .LVL96
     /tmp/cc8hdfYh.s:745    .text:0000000000000488 .LVL69
     /tmp/cc8hdfYh.s:757    .text:00000000000004a8 .LVL72
     /tmp/cc8hdfYh.s:941    .text:00000000000005ec .LVL93
     /tmp/cc8hdfYh.s:945    .text:00000000000005f0 .LVL94
     /tmp/cc8hdfYh.s:767    .text:00000000000004c4 .LVL75
     /tmp/cc8hdfYh.s:796    .text:00000000000004f4 .LVL78
     /tmp/cc8hdfYh.s:978    .text:0000000000000620 .LVL98
     /tmp/cc8hdfYh.s:774    .text:00000000000004cc .LVL76
     /tmp/cc8hdfYh.s:838    .text:000000000000053c .LVL82
     /tmp/cc8hdfYh.s:866    .text:000000000000056c .LVL85
     /tmp/cc8hdfYh.s:864    .text:0000000000000568 .LVL84
     /tmp/cc8hdfYh.s:874    .text:0000000000000578 .LVL86
     /tmp/cc8hdfYh.s:881    .text:0000000000000584 .LVL87
     /tmp/cc8hdfYh.s:891    .text:0000000000000590 .LVL88
     /tmp/cc8hdfYh.s:602    .text:00000000000003a4 .LVL54
     /tmp/cc8hdfYh.s:690    .text:0000000000000434 .LVL65
     /tmp/cc8hdfYh.s:608    .text:00000000000003ac .LVL55
     /tmp/cc8hdfYh.s:657    .text:00000000000003f4 .LVL62
     /tmp/cc8hdfYh.s:674    .text:000000000000041c .LVL64
GAS LISTING /tmp/cc8hdfYh.s 			page 38


     /tmp/cc8hdfYh.s:632    .text:00000000000003d0 .LVL57
     /tmp/cc8hdfYh.s:638    .text:00000000000003d8 .LVL58
     /tmp/cc8hdfYh.s:655    .text:00000000000003f0 .LVL61
     /tmp/cc8hdfYh.s:641    .text:00000000000003dc .LVL59
     /tmp/cc8hdfYh.s:650    .text:00000000000003e8 .LVL60
     /tmp/cc8hdfYh.s:665    .text:0000000000000404 .LVL63
     /tmp/cc8hdfYh.s:433    .text:00000000000002cc .LVL35
     /tmp/cc8hdfYh.s:487    .text:0000000000000318 .LVL43
     /tmp/cc8hdfYh.s:506    .text:000000000000032c .LVL45
     /tmp/cc8hdfYh.s:585    .text:00000000000003a0 .LVL53
     /tmp/cc8hdfYh.s:441    .text:00000000000002d8 .LVL36
     /tmp/cc8hdfYh.s:445    .text:00000000000002dc .LVL37
     /tmp/cc8hdfYh.s:458    .text:00000000000002e8 .LVL38
     /tmp/cc8hdfYh.s:492    .text:0000000000000320 .LVL44
     /tmp/cc8hdfYh.s:580    .text:000000000000039c .LVL52
     /tmp/cc8hdfYh.s:460    .text:00000000000002ec .LVL39
     /tmp/cc8hdfYh.s:479    .text:000000000000030c .LVL40
     /tmp/cc8hdfYh.s:481    .text:0000000000000310 .LVL41
     /tmp/cc8hdfYh.s:513    .text:0000000000000330 .LVL46
     /tmp/cc8hdfYh.s:532    .text:000000000000034c .LVL47
     /tmp/cc8hdfYh.s:571    .text:0000000000000394 .LVL50
     /tmp/cc8hdfYh.s:484    .text:0000000000000314 .LVL42
     /tmp/cc8hdfYh.s:537    .text:0000000000000350 .LVL48
     /tmp/cc8hdfYh.s:990    .text:0000000000000624 .LVL99
     /tmp/cc8hdfYh.s:1026   .text:0000000000000664 .LVL103
     /tmp/cc8hdfYh.s:1030   .text:000000000000066c .LVL104
     /tmp/cc8hdfYh.s:1009   .text:000000000000064c .LVL101
     /tmp/cc8hdfYh.s:1023   .text:0000000000000660 .LVL102
     /tmp/cc8hdfYh.s:34     .text:0000000000000000 .LVL0
     /tmp/cc8hdfYh.s:61     .text:0000000000000034 .LVL2
     /tmp/cc8hdfYh.s:408    .text:00000000000002b0 .LVL33
     /tmp/cc8hdfYh.s:57     .text:000000000000002c .LVL1
     /tmp/cc8hdfYh.s:250    .text:000000000000018c .LVL21
     /tmp/cc8hdfYh.s:415    .text:00000000000002bc .LVL34
     /tmp/cc8hdfYh.s:180    .text:0000000000000120 .LVL12
     /tmp/cc8hdfYh.s:156    .text:00000000000000fc .LVL10
     /tmp/cc8hdfYh.s:201    .text:0000000000000138 .LVL13
     /tmp/cc8hdfYh.s:252    .text:0000000000000190 .LVL22
     /tmp/cc8hdfYh.s:212    .text:000000000000014c .LVL15
     /tmp/cc8hdfYh.s:224    .text:0000000000000158 .LVL16
     /tmp/cc8hdfYh.s:237    .text:0000000000000178 .LVL19
     /tmp/cc8hdfYh.s:379    .text:000000000000028c .LVL32
     /tmp/cc8hdfYh.s:355    .text:0000000000000268 .LVL30
     /tmp/cc8hdfYh.s:1070   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/cc8hdfYh.s:64     .text:0000000000000034 .LBB3
     /tmp/cc8hdfYh.s:171    .text:000000000000010c .LBE3
     /tmp/cc8hdfYh.s:190    .text:0000000000000128 .LBB8
     /tmp/cc8hdfYh.s:195    .text:0000000000000130 .LBE8
     /tmp/cc8hdfYh.s:66     .text:0000000000000034 .LBB5
     /tmp/cc8hdfYh.s:147    .text:00000000000000e8 .LBE5
     /tmp/cc8hdfYh.s:164    .text:0000000000000104 .LBB6
     /tmp/cc8hdfYh.s:169    .text:000000000000010c .LBE6
     /tmp/cc8hdfYh.s:255    .text:0000000000000190 .LBB15
     /tmp/cc8hdfYh.s:370    .text:0000000000000278 .LBE15
     /tmp/cc8hdfYh.s:393    .text:000000000000029c .LBB20
     /tmp/cc8hdfYh.s:398    .text:00000000000002a4 .LBE20
     /tmp/cc8hdfYh.s:257    .text:0000000000000190 .LBB17
GAS LISTING /tmp/cc8hdfYh.s 			page 39


     /tmp/cc8hdfYh.s:346    .text:0000000000000254 .LBE17
     /tmp/cc8hdfYh.s:363    .text:0000000000000270 .LBB18
     /tmp/cc8hdfYh.s:368    .text:0000000000000278 .LBE18
     /tmp/cc8hdfYh.s:442    .text:00000000000002d8 .LBB22
     /tmp/cc8hdfYh.s:452    .text:00000000000002e4 .LBE22
     /tmp/cc8hdfYh.s:454    .text:00000000000002e4 .LBB29
     /tmp/cc8hdfYh.s:497    .text:0000000000000320 .LBE29
     /tmp/cc8hdfYh.s:509    .text:000000000000032c .LBB30
     /tmp/cc8hdfYh.s:582    .text:000000000000039c .LBE30
     /tmp/cc8hdfYh.s:455    .text:00000000000002e4 .LBB23
     /tmp/cc8hdfYh.s:496    .text:0000000000000320 .LBE23
     /tmp/cc8hdfYh.s:510    .text:000000000000032c .LBB28
     /tmp/cc8hdfYh.s:575    .text:0000000000000394 .LBE28
     /tmp/cc8hdfYh.s:462    .text:00000000000002ec .LBB24
     /tmp/cc8hdfYh.s:495    .text:0000000000000320 .LBE24
     /tmp/cc8hdfYh.s:528    .text:0000000000000348 .LBB27
     /tmp/cc8hdfYh.s:574    .text:0000000000000394 .LBE27
     /tmp/cc8hdfYh.s:463    .text:00000000000002ec .LBB25
     /tmp/cc8hdfYh.s:494    .text:0000000000000320 .LBE25
     /tmp/cc8hdfYh.s:534    .text:000000000000034c .LBB26
     /tmp/cc8hdfYh.s:573    .text:0000000000000394 .LBE26
     /tmp/cc8hdfYh.s:868    .text:000000000000056c .LBB37
     /tmp/cc8hdfYh.s:888    .text:000000000000058c .LBE37
     /tmp/cc8hdfYh.s:895    .text:0000000000000594 .LBB38
     /tmp/cc8hdfYh.s:900    .text:000000000000059c .LBE38

UNDEFINED SYMBOLS
_Z11printStringPKc
_Z12printIntegerm
_ZN15MemoryAllocator8instanceEv
_ZN15MemoryAllocator10kmem_allocEm
_ZN15MemoryAllocator9kmem_freeEPv
