GAS LISTING /tmp/ccaSKDx9.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB33:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** //
   2:src/riscv.cpp **** // Created by marko on 20.4.22..
   3:src/riscv.cpp **** //
   4:src/riscv.cpp **** 
   5:src/riscv.cpp **** #include "../h/riscv.hpp"
   6:src/riscv.cpp **** #include "../h/tcb.hpp"
   7:src/riscv.cpp **** #include "../lib/console.h"
   8:src/riscv.cpp **** #include "../h/print.hpp"
   9:src/riscv.cpp **** 
  10:src/riscv.cpp **** void Riscv::popSppSpie()
  11:src/riscv.cpp **** {
  12              		.loc 1 11 1
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  12:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  20              		.loc 1 12 5
  21              		.loc 1 12 38 is_stmt 0
  22              	#APP
  23              	# 12 "src/riscv.cpp" 1
  13              	    __asm__ volatile("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 13 5 is_stmt 1
  27              		.loc 1 13 29 is_stmt 0
  28              	# 13 "src/riscv.cpp" 1
  14              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 14 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE33:
  42              		.section	.rodata.str1.8,"aMS",@progbits,1
  43              		.align	3
  44              	.LC0:
  45 0000 48657265 		.string	"Here"
GAS LISTING /tmp/ccaSKDx9.s 			page 2


  45      00
  46 0005 000000   		.align	3
  47              	.LC1:
  48 0008 0A613020 		.string	"\na0 = "
  48      3D2000
  49 000f 00       		.align	3
  50              	.LC2:
  51 0010 0A613120 		.string	"\na1 = "
  51      3D2000
  52              		.text
  53              		.align	2
  54              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  56              	_ZN5Riscv20handleSupervisorTrapEv:
  57              	.LFB34:
  15:src/riscv.cpp **** 
  16:src/riscv.cpp **** void Riscv::handleSupervisorTrap()
  17:src/riscv.cpp **** {
  58              		.loc 1 17 1 is_stmt 1
  59              		.cfi_startproc
  60 0020 130101F9 		addi	sp,sp,-112
  61              		.cfi_def_cfa_offset 112
  62 0024 23341106 		sd	ra,104(sp)
  63 0028 23308106 		sd	s0,96(sp)
  64              		.cfi_offset 1, -8
  65              		.cfi_offset 8, -16
  66 002c 13040107 		addi	s0,sp,112
  67              		.cfi_def_cfa 8, 0
  18:src/riscv.cpp ****     uint64 scause = r_scause();
  68              		.loc 1 18 5
  69              	.LBB30:
  70              	.LBB31:
  71              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef RISCV_HPP
   2:src/../h/riscv.hpp **** #define RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** class Riscv
   7:src/../h/riscv.hpp **** {
   8:src/../h/riscv.hpp **** public:
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  11:src/../h/riscv.hpp ****     static void popSppSpie();
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp ****     // read register scause
  14:src/../h/riscv.hpp ****     static uint64 r_scause();
  15:src/../h/riscv.hpp **** 
  16:src/../h/riscv.hpp ****     // write register scause
  17:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     // read register sepc
  20:src/../h/riscv.hpp ****     static uint64 r_sepc();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     // write register sepc
  23:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     // read register stvec
GAS LISTING /tmp/ccaSKDx9.s 			page 3


  26:src/../h/riscv.hpp ****     static uint64 r_stvec();
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     // write register stvec
  29:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     // read register stval
  32:src/../h/riscv.hpp ****     static uint64 r_stval();
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     // write register stval
  35:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     enum BitMaskSip
  38:src/../h/riscv.hpp ****     {
  39:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  40:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  41:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  42:src/../h/riscv.hpp ****     };
  43:src/../h/riscv.hpp **** 
  44:src/../h/riscv.hpp ****     // mask set register sip
  45:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  46:src/../h/riscv.hpp **** 
  47:src/../h/riscv.hpp ****     // mask clear register sip
  48:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  49:src/../h/riscv.hpp **** 
  50:src/../h/riscv.hpp ****     // read register sip
  51:src/../h/riscv.hpp ****     static uint64 r_sip();
  52:src/../h/riscv.hpp **** 
  53:src/../h/riscv.hpp ****     // write register sip
  54:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  55:src/../h/riscv.hpp **** 
  56:src/../h/riscv.hpp ****     enum BitMaskSstatus
  57:src/../h/riscv.hpp ****     {
  58:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  59:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  60:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  61:src/../h/riscv.hpp ****     };
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp ****     // mask set register sstatus
  64:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp ****     // mask clear register sstatus
  67:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp ****     // read register sstatus
  70:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  71:src/../h/riscv.hpp **** 
  72:src/../h/riscv.hpp ****     // write register sstatus
  73:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp ****     // supervisor trap
  76:src/../h/riscv.hpp ****     static void supervisorTrap();
  77:src/../h/riscv.hpp **** 
  78:src/../h/riscv.hpp **** private:
  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp ****     // supervisor trap handler
  81:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  82:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccaSKDx9.s 			page 4


  83:src/../h/riscv.hpp **** };
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  86:src/../h/riscv.hpp **** {
  87:src/../h/riscv.hpp ****     uint64 volatile scause;
  72              		.loc 2 87 5
  88:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  73              		.loc 2 88 5
  74              		.loc 2 88 72 is_stmt 0
  75              	#APP
  76              	# 88 "src/../h/riscv.hpp" 1
  89              	    return scause;
  77              		csrr a5, scause
  78              	# 0 "" 2
  79              	#NO_APP
  80 0034 2334F4FC 		sd	a5,-56(s0)
  81              		.loc 2 89 5 is_stmt 1
  82              		.loc 2 89 12 is_stmt 0
  83 0038 033784FC 		ld	a4,-56(s0)
  84              	.LVL0:
  85              	.LBE31:
  86              	.LBE30:
  19:src/riscv.cpp ****     if (scause == 0x0000000000000008UL || scause == 0x0000000000000009UL)
  87              		.loc 1 19 5 is_stmt 1
  88              	.LBB32:
  89              		.loc 1 19 40 is_stmt 0
  90 003c 930687FF 		addi	a3,a4,-8
  91              		.loc 1 19 5
  92 0040 93071000 		li	a5,1
  93 0044 63FAD702 		bleu	a3,a5,.L8
  94              	.LBE32:
  20:src/riscv.cpp ****     {
  21:src/riscv.cpp ****         printString("Here");
  22:src/riscv.cpp ****         // interrupt: no; cause code: environment call from U-mode(8) or S-mode(9)
  23:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
  24:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
  25:src/riscv.cpp **** 
  26:src/riscv.cpp ****         uint64 volatile sysCallNum;
  27:src/riscv.cpp ****         __asm__ volatile("sd a0, %0" : "=m" (sysCallNum));
  28:src/riscv.cpp ****         printString("\na0 = "); printInteger(sysCallNum);
  29:src/riscv.cpp ****         uint64 volatile arg1;
  30:src/riscv.cpp ****         __asm__ volatile("sd a0, %0" : "=m" (arg1));
  31:src/riscv.cpp ****         printString("\na1 = "); printInteger(arg1);
  32:src/riscv.cpp **** 
  33:src/riscv.cpp ****         TCB::timeSliceCounter = 0;
  34:src/riscv.cpp ****         TCB::dispatch();
  35:src/riscv.cpp ****         w_sstatus(sstatus);
  36:src/riscv.cpp ****         w_sepc(sepc);
  37:src/riscv.cpp ****     }
  38:src/riscv.cpp ****     else if (scause == 0x8000000000000001UL)
  95              		.loc 1 38 10 is_stmt 1
  96              	.LBB59:
  97              	.LBB33:
  98 0048 9307F0FF 		li	a5,-1
  99 004c 9397F703 		slli	a5,a5,63
 100 0050 93871700 		addi	a5,a5,1
 101 0054 6300F70C 		beq	a4,a5,.L9
GAS LISTING /tmp/ccaSKDx9.s 			page 5


  39:src/riscv.cpp ****     {
  40:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
  41:src/riscv.cpp ****         mc_sip(SIP_SSIP);
  42:src/riscv.cpp ****         TCB::timeSliceCounter++;
  43:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
  44:src/riscv.cpp ****         {
  45:src/riscv.cpp ****             uint64 volatile sepc = r_sepc();
  46:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
  47:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
  48:src/riscv.cpp ****             TCB::dispatch();
  49:src/riscv.cpp ****             w_sstatus(sstatus);
  50:src/riscv.cpp ****             w_sepc(sepc);
  51:src/riscv.cpp ****         }
  52:src/riscv.cpp ****     }
  53:src/riscv.cpp ****     else if (scause == 0x8000000000000009UL)
 102              		.loc 1 53 10
 103 0058 9307F0FF 		li	a5,-1
 104 005c 9397F703 		slli	a5,a5,63
 105 0060 93879700 		addi	a5,a5,9
 106 0064 6304F712 		beq	a4,a5,.L10
 107              	.LVL1:
 108              	.L3:
 109              	.LBE33:
 110              	.LBE59:
  54:src/riscv.cpp ****     {
  55:src/riscv.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
  56:src/riscv.cpp ****         console_handler();
  57:src/riscv.cpp ****     }
  58:src/riscv.cpp ****     else
  59:src/riscv.cpp ****     {
  60:src/riscv.cpp ****         // unexpected trap cause
  61:src/riscv.cpp ****     }
  62:src/riscv.cpp **** }...
 111              		.loc 1 62 1 is_stmt 0
 112 0068 83308106 		ld	ra,104(sp)
 113              		.cfi_remember_state
 114              		.cfi_restore 1
 115 006c 03340106 		ld	s0,96(sp)
 116              		.cfi_restore 8
 117              		.cfi_def_cfa 2, 112
 118 0070 13010107 		addi	sp,sp,112
 119              		.cfi_def_cfa_offset 0
 120 0074 67800000 		jr	ra
 121              	.LVL2:
 122              	.L8:
 123              		.cfi_restore_state
 124              	.LBB60:
 125              	.LBB49:
  21:src/riscv.cpp ****         printString("Here");
 126              		.loc 1 21 9 is_stmt 1
  21:src/riscv.cpp ****         printString("Here");
 127              		.loc 1 21 20 is_stmt 0
 128 0078 17050000 		lla	a0,.LC0
 128      13050500 
 129 0080 97000000 		call	_Z11printStringPKc@plt
 129      E7800000 
 130              	.LVL3:
GAS LISTING /tmp/ccaSKDx9.s 			page 6


  23:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
 131              		.loc 1 23 9 is_stmt 1
 132              	.LBB50:
 133              	.LBB51:
  90:src/../h/riscv.hpp **** }
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
  93:src/../h/riscv.hpp **** {
  94:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  95:src/../h/riscv.hpp **** }
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
  98:src/../h/riscv.hpp **** {
  99:src/../h/riscv.hpp ****     uint64 volatile sepc;
 134              		.loc 2 99 5
 100:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 135              		.loc 2 100 5
 136              		.loc 2 100 64 is_stmt 0
 137              	#APP
 138              	# 100 "src/../h/riscv.hpp" 1
 101              	    return sepc;
 139              		csrr a5, sepc
 140              	# 0 "" 2
 141              	#NO_APP
 142 008c 233CF4FC 		sd	a5,-40(s0)
 143              		.loc 2 101 5 is_stmt 1
 144              		.loc 2 101 12 is_stmt 0
 145 0090 833784FD 		ld	a5,-40(s0)
 146              	.LBE51:
 147              	.LBE50:
  23:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
 148              		.loc 1 23 41
 149 0094 93874700 		addi	a5,a5,4
  23:src/riscv.cpp ****         uint64 volatile sepc = r_sepc() + 4;
 150              		.loc 1 23 43
 151 0098 233CF4F8 		sd	a5,-104(s0)
  24:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 152              		.loc 1 24 9 is_stmt 1
 153              	.LBB52:
 154              	.LBB53:
 102:src/../h/riscv.hpp **** }
 103:src/../h/riscv.hpp **** 
 104:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 105:src/../h/riscv.hpp **** {
 106:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 107:src/../h/riscv.hpp **** }
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 110:src/../h/riscv.hpp **** {
 111:src/../h/riscv.hpp ****     uint64 volatile stvec;
 112:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 113:src/../h/riscv.hpp ****     return stvec;
 114:src/../h/riscv.hpp **** }
 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 117:src/../h/riscv.hpp **** {
 118:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
GAS LISTING /tmp/ccaSKDx9.s 			page 7


 119:src/../h/riscv.hpp **** }
 120:src/../h/riscv.hpp **** 
 121:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 122:src/../h/riscv.hpp **** {
 123:src/../h/riscv.hpp ****     uint64 volatile stval;
 124:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 125:src/../h/riscv.hpp ****     return stval;
 126:src/../h/riscv.hpp **** }
 127:src/../h/riscv.hpp **** 
 128:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 129:src/../h/riscv.hpp **** {
 130:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 131:src/../h/riscv.hpp **** }
 132:src/../h/riscv.hpp **** 
 133:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 134:src/../h/riscv.hpp **** {
 135:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 136:src/../h/riscv.hpp **** }
 137:src/../h/riscv.hpp **** 
 138:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 139:src/../h/riscv.hpp **** {
 140:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 141:src/../h/riscv.hpp **** }
 142:src/../h/riscv.hpp **** 
 143:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 144:src/../h/riscv.hpp **** {
 145:src/../h/riscv.hpp ****     uint64 volatile sip;
 146:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 147:src/../h/riscv.hpp ****     return sip;
 148:src/../h/riscv.hpp **** }
 149:src/../h/riscv.hpp **** 
 150:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 151:src/../h/riscv.hpp **** {
 152:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 153:src/../h/riscv.hpp **** }
 154:src/../h/riscv.hpp **** 
 155:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 156:src/../h/riscv.hpp **** {
 157:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 158:src/../h/riscv.hpp **** }
 159:src/../h/riscv.hpp **** 
 160:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 161:src/../h/riscv.hpp **** {
 162:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 163:src/../h/riscv.hpp **** }
 164:src/../h/riscv.hpp **** 
 165:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 166:src/../h/riscv.hpp **** {
 167:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 155              		.loc 2 167 5
 168:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 156              		.loc 2 168 5
 157              		.loc 2 168 76 is_stmt 0
 158              	#APP
 159              	# 168 "src/../h/riscv.hpp" 1
 169              	    return sstatus;
 160              		csrr a5, sstatus
GAS LISTING /tmp/ccaSKDx9.s 			page 8


 161              	# 0 "" 2
 162              	#NO_APP
 163 00a0 2338F4FC 		sd	a5,-48(s0)
 164              		.loc 2 169 5 is_stmt 1
 165              		.loc 2 169 12 is_stmt 0
 166 00a4 833704FD 		ld	a5,-48(s0)
 167              	.LBE53:
 168              	.LBE52:
  24:src/riscv.cpp ****         uint64 volatile sstatus = r_sstatus();
 169              		.loc 1 24 45
 170 00a8 2330F4FA 		sd	a5,-96(s0)
  26:src/riscv.cpp ****         uint64 volatile sysCallNum;
 171              		.loc 1 26 9 is_stmt 1
  27:src/riscv.cpp ****         __asm__ volatile("sd a0, %0" : "=m" (sysCallNum));
 172              		.loc 1 27 9
  27:src/riscv.cpp ****         __asm__ volatile("sd a0, %0" : "=m" (sysCallNum));
 173              		.loc 1 27 58 is_stmt 0
 174              	#APP
 175              	# 27 "src/riscv.cpp" 1
  28:src/riscv.cpp ****         printString("\na0 = "); printInteger(sysCallNum);
 176              		sd a0, -88(s0)
 177              	# 0 "" 2
 178              		.loc 1 28 9 is_stmt 1
  28:src/riscv.cpp ****         printString("\na0 = "); printInteger(sysCallNum);
 179              		.loc 1 28 20 is_stmt 0
 180              	#NO_APP
 181 00b0 17050000 		lla	a0,.LC1
 181      13050500 
 182 00b8 97000000 		call	_Z11printStringPKc@plt
 182      E7800000 
 183              	.LVL4:
  28:src/riscv.cpp ****         printString("\na0 = "); printInteger(sysCallNum);
 184              		.loc 1 28 33 is_stmt 1
  28:src/riscv.cpp ****         printString("\na0 = "); printInteger(sysCallNum);
 185              		.loc 1 28 45 is_stmt 0
 186 00c0 033584FA 		ld	a0,-88(s0)
 187 00c4 97000000 		call	_Z12printIntegerm@plt
 187      E7800000 
 188              	.LVL5:
  29:src/riscv.cpp ****         uint64 volatile arg1;
 189              		.loc 1 29 9 is_stmt 1
  30:src/riscv.cpp ****         __asm__ volatile("sd a0, %0" : "=m" (arg1));
 190              		.loc 1 30 9
  30:src/riscv.cpp ****         __asm__ volatile("sd a0, %0" : "=m" (arg1));
 191              		.loc 1 30 52 is_stmt 0
 192              	#APP
 193              	# 30 "src/riscv.cpp" 1
  31:src/riscv.cpp ****         printString("\na1 = "); printInteger(arg1);
 194              		sd a0, -80(s0)
 195              	# 0 "" 2
 196              		.loc 1 31 9 is_stmt 1
  31:src/riscv.cpp ****         printString("\na1 = "); printInteger(arg1);
 197              		.loc 1 31 20 is_stmt 0
 198              	#NO_APP
 199 00d0 17050000 		lla	a0,.LC2
 199      13050500 
 200 00d8 97000000 		call	_Z11printStringPKc@plt
GAS LISTING /tmp/ccaSKDx9.s 			page 9


 200      E7800000 
 201              	.LVL6:
  31:src/riscv.cpp ****         printString("\na1 = "); printInteger(arg1);
 202              		.loc 1 31 33 is_stmt 1
  31:src/riscv.cpp ****         printString("\na1 = "); printInteger(arg1);
 203              		.loc 1 31 45 is_stmt 0
 204 00e0 033504FB 		ld	a0,-80(s0)
 205 00e4 97000000 		call	_Z12printIntegerm@plt
 205      E7800000 
 206              	.LVL7:
  33:src/riscv.cpp ****         TCB::timeSliceCounter = 0;
 207              		.loc 1 33 9 is_stmt 1
  33:src/riscv.cpp ****         TCB::timeSliceCounter = 0;
 208              		.loc 1 33 31 is_stmt 0
 209 00ec 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 209      83B70700 
 210 00f4 23B00700 		sd	zero,0(a5)
  34:src/riscv.cpp ****         TCB::dispatch();
 211              		.loc 1 34 9 is_stmt 1
  34:src/riscv.cpp ****         TCB::dispatch();
 212              		.loc 1 34 22 is_stmt 0
 213 00f8 97000000 		call	_ZN3TCB8dispatchEv@plt
 213      E7800000 
 214              	.LVL8:
  35:src/riscv.cpp ****         w_sstatus(sstatus);
 215              		.loc 1 35 9 is_stmt 1
  35:src/riscv.cpp ****         w_sstatus(sstatus);
 216              		.loc 1 35 18 is_stmt 0
 217 0100 833704FA 		ld	a5,-96(s0)
 218              	.LVL9:
 219              	.LBB54:
 220              	.LBB55:
 170:src/../h/riscv.hpp **** }
 171:src/../h/riscv.hpp **** 
 172:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 173:src/../h/riscv.hpp **** {
 174:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 221              		.loc 2 174 5 is_stmt 1
 222              		.loc 2 174 77 is_stmt 0
 223              	#APP
 224              	# 174 "src/../h/riscv.hpp" 1
 175              	}
 225              		csrw sstatus, a5
 226              	# 0 "" 2
 227              	.LVL10:
 228              	#NO_APP
 229              	.LBE55:
 230              	.LBE54:
  36:src/riscv.cpp ****         w_sepc(sepc);
 231              		.loc 1 36 9 is_stmt 1
  36:src/riscv.cpp ****         w_sepc(sepc);
 232              		.loc 1 36 15 is_stmt 0
 233 0108 833784F9 		ld	a5,-104(s0)
 234              	.LVL11:
 235              	.LBB56:
 236              	.LBB57:
 106:src/../h/riscv.hpp **** }
GAS LISTING /tmp/ccaSKDx9.s 			page 10


 237              		.loc 2 106 5 is_stmt 1
 106:src/../h/riscv.hpp **** }
 238              		.loc 2 106 65 is_stmt 0
 239              	#APP
 240              	# 106 "src/../h/riscv.hpp" 1
 107:src/../h/riscv.hpp **** 
 241              		csrw sepc, a5
 242              	# 0 "" 2
 243              		.loc 2 107 1
 244              	#NO_APP
 245 0110 6FF09FF5 		j	.L3
 246              	.LVL12:
 247              	.L9:
 248              	.LBE57:
 249              	.LBE56:
 250              	.LBE49:
 251              	.LBB58:
 252              	.LBB34:
  41:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 253              		.loc 1 41 9 is_stmt 1
 254              	.LBB35:
 255              	.LBB36:
 140:src/../h/riscv.hpp **** }
 256              		.loc 2 140 5
 140:src/../h/riscv.hpp **** }
 257              		.loc 2 140 64 is_stmt 0
 258 0114 93072000 		li	a5,2
 259              	#APP
 260              	# 140 "src/../h/riscv.hpp" 1
 261              		csrc sip, a5
 262              	# 0 "" 2
 263              	.LVL13:
 264              	#NO_APP
 265              	.LBE36:
 266              	.LBE35:
  42:src/riscv.cpp ****         TCB::timeSliceCounter++;
 267              		.loc 1 42 9 is_stmt 1
  42:src/riscv.cpp ****         TCB::timeSliceCounter++;
 268              		.loc 1 42 30 is_stmt 0
 269 011c 17070000 		la	a4,_ZN3TCB16timeSliceCounterE
 269      03370700 
 270              	.LVL14:
 271 0124 83370700 		ld	a5,0(a4)
 272 0128 93871700 		addi	a5,a5,1
 273 012c 2330F700 		sd	a5,0(a4)
  43:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 274              		.loc 1 43 9 is_stmt 1
 275              	.LBB37:
  43:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 276              		.loc 1 43 64 is_stmt 0
 277 0130 17070000 		la	a4,_ZN3TCB7runningE
 277      03370700 
 278 0138 03370700 		ld	a4,0(a4)
 279              	.LVL15:
 280              	.LBB38:
 281              	.LBB39:
 282              		.file 3 "src/../h/tcb.hpp"
GAS LISTING /tmp/ccaSKDx9.s 			page 11


   1:src/../h/tcb.hpp **** #ifndef TCB_HPP
   2:src/../h/tcb.hpp **** #define TCB_HPP
   3:src/../h/tcb.hpp **** 
   4:src/../h/tcb.hpp **** #include "../lib/hw.h"
   5:src/../h/tcb.hpp **** #include "scheduler.hpp"
   6:src/../h/tcb.hpp **** 
   7:src/../h/tcb.hpp **** // Thread Control Block
   8:src/../h/tcb.hpp **** class TCB
   9:src/../h/tcb.hpp **** {
  10:src/../h/tcb.hpp **** public:
  11:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
  12:src/../h/tcb.hpp **** 
  13:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
  14:src/../h/tcb.hpp **** 
  15:src/../h/tcb.hpp ****     void setFinished(bool value) { finished = value; }
  16:src/../h/tcb.hpp **** 
  17:src/../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
 283              		.loc 3 17 35 is_stmt 1
 284              		.loc 3 17 42 is_stmt 0
 285 013c 03370702 		ld	a4,32(a4)
 286              	.LVL16:
 287              	.LBE39:
 288              	.LBE38:
  43:src/riscv.cpp ****         if (TCB::timeSliceCounter >= TCB::running->getTimeSlice())
 289              		.loc 1 43 9
 290 0140 E3E4E7F2 		bltu	a5,a4,.L3
 291              	.LBB40:
  45:src/riscv.cpp ****             uint64 volatile sepc = r_sepc();
 292              		.loc 1 45 13 is_stmt 1
 293              	.LBB41:
 294              	.LBB42:
  99:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 295              		.loc 2 99 5
 100:src/../h/riscv.hpp ****     return sepc;
 296              		.loc 2 100 5
 100:src/../h/riscv.hpp ****     return sepc;
 297              		.loc 2 100 64 is_stmt 0
 298              	#APP
 299              	# 100 "src/../h/riscv.hpp" 1
 300              		csrr a5, sepc
 301              	# 0 "" 2
 302              	#NO_APP
 303 0148 2334F4FE 		sd	a5,-24(s0)
 101:src/../h/riscv.hpp **** }
 304              		.loc 2 101 5 is_stmt 1
 101:src/../h/riscv.hpp **** }
 305              		.loc 2 101 12 is_stmt 0
 306 014c 833784FE 		ld	a5,-24(s0)
 307              	.LBE42:
 308              	.LBE41:
  45:src/riscv.cpp ****             uint64 volatile sepc = r_sepc();
 309              		.loc 1 45 43
 310 0150 233CF4FA 		sd	a5,-72(s0)
  46:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 311              		.loc 1 46 13 is_stmt 1
 312              	.LBB43:
 313              	.LBB44:
GAS LISTING /tmp/ccaSKDx9.s 			page 12


 167:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 314              		.loc 2 167 5
 168:src/../h/riscv.hpp ****     return sstatus;
 315              		.loc 2 168 5
 168:src/../h/riscv.hpp ****     return sstatus;
 316              		.loc 2 168 76 is_stmt 0
 317              	#APP
 318              	# 168 "src/../h/riscv.hpp" 1
 319              		csrr a5, sstatus
 320              	# 0 "" 2
 321              	#NO_APP
 322 0158 2330F4FE 		sd	a5,-32(s0)
 169:src/../h/riscv.hpp **** }
 323              		.loc 2 169 5 is_stmt 1
 169:src/../h/riscv.hpp **** }
 324              		.loc 2 169 12 is_stmt 0
 325 015c 833704FE 		ld	a5,-32(s0)
 326              	.LBE44:
 327              	.LBE43:
  46:src/riscv.cpp ****             uint64 volatile sstatus = r_sstatus();
 328              		.loc 1 46 49
 329 0160 2330F4FC 		sd	a5,-64(s0)
  47:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 330              		.loc 1 47 13 is_stmt 1
  47:src/riscv.cpp ****             TCB::timeSliceCounter = 0;
 331              		.loc 1 47 35 is_stmt 0
 332 0164 97070000 		la	a5,_ZN3TCB16timeSliceCounterE
 332      83B70700 
 333 016c 23B00700 		sd	zero,0(a5)
  48:src/riscv.cpp ****             TCB::dispatch();
 334              		.loc 1 48 13 is_stmt 1
  48:src/riscv.cpp ****             TCB::dispatch();
 335              		.loc 1 48 26 is_stmt 0
 336 0170 97000000 		call	_ZN3TCB8dispatchEv@plt
 336      E7800000 
 337              	.LVL17:
  49:src/riscv.cpp ****             w_sstatus(sstatus);
 338              		.loc 1 49 13 is_stmt 1
  49:src/riscv.cpp ****             w_sstatus(sstatus);
 339              		.loc 1 49 22 is_stmt 0
 340 0178 833704FC 		ld	a5,-64(s0)
 341              	.LVL18:
 342              	.LBB45:
 343              	.LBB46:
 174:src/../h/riscv.hpp **** }
 344              		.loc 2 174 5 is_stmt 1
 174:src/../h/riscv.hpp **** }
 345              		.loc 2 174 77 is_stmt 0
 346              	#APP
 347              	# 174 "src/../h/riscv.hpp" 1
 348              		csrw sstatus, a5
 349              	# 0 "" 2
 350              	.LVL19:
 351              	#NO_APP
 352              	.LBE46:
 353              	.LBE45:
  50:src/riscv.cpp ****             w_sepc(sepc);
GAS LISTING /tmp/ccaSKDx9.s 			page 13


 354              		.loc 1 50 13 is_stmt 1
  50:src/riscv.cpp ****             w_sepc(sepc);
 355              		.loc 1 50 19 is_stmt 0
 356 0180 833784FB 		ld	a5,-72(s0)
 357              	.LVL20:
 358              	.LBB47:
 359              	.LBB48:
 106:src/../h/riscv.hpp **** }
 360              		.loc 2 106 5 is_stmt 1
 106:src/../h/riscv.hpp **** }
 361              		.loc 2 106 65 is_stmt 0
 362              	#APP
 363              	# 106 "src/../h/riscv.hpp" 1
 107:src/../h/riscv.hpp **** 
 364              		csrw sepc, a5
 365              	# 0 "" 2
 366              		.loc 2 107 1
 367              	#NO_APP
 368 0188 6FF01FEE 		j	.L3
 369              	.LVL21:
 370              	.L10:
 371              	.LBE48:
 372              	.LBE47:
 373              	.LBE40:
 374              	.LBE37:
 375              	.LBE34:
  56:src/riscv.cpp ****         console_handler();
 376              		.loc 1 56 9 is_stmt 1
  56:src/riscv.cpp ****         console_handler();
 377              		.loc 1 56 24 is_stmt 0
 378 018c 97000000 		call	console_handler@plt
 378      E7800000 
 379              	.LVL22:
 380              	.LBE58:
 381              	.LBE60:
 382              		.loc 1 62 1
 383 0194 6FF05FED 		j	.L3
 384              		.cfi_endproc
 385              	.LFE34:
 387              	.Letext0:
 388              		.file 4 "src/../h/../lib/hw.h"
 389              		.file 5 "src/../h/print.hpp"
 390              		.file 6 "src/../lib/console.h"
GAS LISTING /tmp/ccaSKDx9.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccaSKDx9.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccaSKDx9.s:13     .text:0000000000000000 .L0 
     /tmp/ccaSKDx9.s:14     .text:0000000000000000 .L0 
     /tmp/ccaSKDx9.s:15     .text:0000000000000004 .L0 
     /tmp/ccaSKDx9.s:17     .text:0000000000000008 .L0 
     /tmp/ccaSKDx9.s:19     .text:000000000000000c .L0 
     /tmp/ccaSKDx9.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:12     .text:000000000000000c .L0 
     /tmp/ccaSKDx9.s:27     .text:0000000000000010 .L0 
       src/riscv.cpp:13     .text:0000000000000010 .L0 
     /tmp/ccaSKDx9.s:33     .text:0000000000000014 .L0 
     /tmp/ccaSKDx9.s:34     .text:0000000000000018 .L0 
     /tmp/ccaSKDx9.s:35     .text:0000000000000018 .L0 
     /tmp/ccaSKDx9.s:37     .text:000000000000001c .L0 
     /tmp/ccaSKDx9.s:39     .text:0000000000000020 .L0 
     /tmp/ccaSKDx9.s:56     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccaSKDx9.s:59     .text:0000000000000020 .L0 
     /tmp/ccaSKDx9.s:60     .text:0000000000000020 .L0 
     /tmp/ccaSKDx9.s:61     .text:0000000000000024 .L0 
     /tmp/ccaSKDx9.s:64     .text:000000000000002c .L0 
     /tmp/ccaSKDx9.s:65     .text:000000000000002c .L0 
     /tmp/ccaSKDx9.s:67     .text:0000000000000030 .L0 
     /tmp/ccaSKDx9.s:72     .text:0000000000000030 .L0 
     /tmp/ccaSKDx9.s:73     .text:0000000000000030 .L0 
     /tmp/ccaSKDx9.s:74     .text:0000000000000030 .L0 
  src/../h/riscv.hpp:88     .text:0000000000000030 .L0 
     /tmp/ccaSKDx9.s:82     .text:0000000000000038 .L0 
     /tmp/ccaSKDx9.s:83     .text:0000000000000038 .L0 
     /tmp/ccaSKDx9.s:89     .text:000000000000003c .L0 
     /tmp/ccaSKDx9.s:90     .text:000000000000003c .L0 
     /tmp/ccaSKDx9.s:92     .text:0000000000000040 .L0 
     /tmp/ccaSKDx9.s:98     .text:0000000000000048 .L0 
     /tmp/ccaSKDx9.s:103    .text:0000000000000058 .L0 
     /tmp/ccaSKDx9.s:112    .text:0000000000000068 .L0 
     /tmp/ccaSKDx9.s:113    .text:000000000000006c .L0 
     /tmp/ccaSKDx9.s:114    .text:000000000000006c .L0 
     /tmp/ccaSKDx9.s:116    .text:0000000000000070 .L0 
     /tmp/ccaSKDx9.s:117    .text:0000000000000070 .L0 
     /tmp/ccaSKDx9.s:119    .text:0000000000000074 .L0 
     /tmp/ccaSKDx9.s:123    .text:0000000000000078 .L0 
     /tmp/ccaSKDx9.s:127    .text:0000000000000078 .L0 
     /tmp/ccaSKDx9.s:128    .text:0000000000000078 .L0 
     /tmp/ccaSKDx9.s:134    .text:0000000000000088 .L0 
     /tmp/ccaSKDx9.s:135    .text:0000000000000088 .L0 
     /tmp/ccaSKDx9.s:136    .text:0000000000000088 .L0 
  src/../h/riscv.hpp:100    .text:0000000000000088 .L0 
     /tmp/ccaSKDx9.s:144    .text:0000000000000090 .L0 
     /tmp/ccaSKDx9.s:145    .text:0000000000000090 .L0 
     /tmp/ccaSKDx9.s:149    .text:0000000000000094 .L0 
     /tmp/ccaSKDx9.s:151    .text:0000000000000098 .L0 
     /tmp/ccaSKDx9.s:155    .text:000000000000009c .L0 
     /tmp/ccaSKDx9.s:156    .text:000000000000009c .L0 
     /tmp/ccaSKDx9.s:157    .text:000000000000009c .L0 
  src/../h/riscv.hpp:168    .text:000000000000009c .L0 
     /tmp/ccaSKDx9.s:165    .text:00000000000000a4 .L0 
GAS LISTING /tmp/ccaSKDx9.s 			page 15


     /tmp/ccaSKDx9.s:166    .text:00000000000000a4 .L0 
     /tmp/ccaSKDx9.s:170    .text:00000000000000a8 .L0 
     /tmp/ccaSKDx9.s:172    .text:00000000000000ac .L0 
     /tmp/ccaSKDx9.s:173    .text:00000000000000ac .L0 
       src/riscv.cpp:27     .text:00000000000000ac .L0 
     /tmp/ccaSKDx9.s:179    .text:00000000000000b0 .L0 
     /tmp/ccaSKDx9.s:181    .text:00000000000000b0 .L0 
     /tmp/ccaSKDx9.s:185    .text:00000000000000c0 .L0 
     /tmp/ccaSKDx9.s:186    .text:00000000000000c0 .L0 
     /tmp/ccaSKDx9.s:190    .text:00000000000000cc .L0 
     /tmp/ccaSKDx9.s:191    .text:00000000000000cc .L0 
       src/riscv.cpp:30     .text:00000000000000cc .L0 
     /tmp/ccaSKDx9.s:197    .text:00000000000000d0 .L0 
     /tmp/ccaSKDx9.s:199    .text:00000000000000d0 .L0 
     /tmp/ccaSKDx9.s:203    .text:00000000000000e0 .L0 
     /tmp/ccaSKDx9.s:204    .text:00000000000000e0 .L0 
     /tmp/ccaSKDx9.s:208    .text:00000000000000ec .L0 
     /tmp/ccaSKDx9.s:209    .text:00000000000000ec .L0 
     /tmp/ccaSKDx9.s:212    .text:00000000000000f8 .L0 
     /tmp/ccaSKDx9.s:213    .text:00000000000000f8 .L0 
     /tmp/ccaSKDx9.s:216    .text:0000000000000100 .L0 
     /tmp/ccaSKDx9.s:217    .text:0000000000000100 .L0 
     /tmp/ccaSKDx9.s:222    .text:0000000000000104 .L0 
  src/../h/riscv.hpp:174    .text:0000000000000104 .L0 
     /tmp/ccaSKDx9.s:232    .text:0000000000000108 .L0 
     /tmp/ccaSKDx9.s:233    .text:0000000000000108 .L0 
     /tmp/ccaSKDx9.s:238    .text:000000000000010c .L0 
  src/../h/riscv.hpp:106    .text:000000000000010c .L0 
     /tmp/ccaSKDx9.s:245    .text:0000000000000110 .L0 
     /tmp/ccaSKDx9.s:256    .text:0000000000000114 .L0 
     /tmp/ccaSKDx9.s:257    .text:0000000000000114 .L0 
     /tmp/ccaSKDx9.s:258    .text:0000000000000114 .L0 
     /tmp/ccaSKDx9.s:268    .text:000000000000011c .L0 
     /tmp/ccaSKDx9.s:269    .text:000000000000011c .L0 
     /tmp/ccaSKDx9.s:276    .text:0000000000000130 .L0 
     /tmp/ccaSKDx9.s:277    .text:0000000000000130 .L0 
     /tmp/ccaSKDx9.s:284    .text:000000000000013c .L0 
     /tmp/ccaSKDx9.s:285    .text:000000000000013c .L0 
     /tmp/ccaSKDx9.s:290    .text:0000000000000140 .L0 
     /tmp/ccaSKDx9.s:295    .text:0000000000000144 .L0 
     /tmp/ccaSKDx9.s:296    .text:0000000000000144 .L0 
     /tmp/ccaSKDx9.s:297    .text:0000000000000144 .L0 
  src/../h/riscv.hpp:100    .text:0000000000000144 .L0 
     /tmp/ccaSKDx9.s:305    .text:000000000000014c .L0 
     /tmp/ccaSKDx9.s:306    .text:000000000000014c .L0 
     /tmp/ccaSKDx9.s:310    .text:0000000000000150 .L0 
     /tmp/ccaSKDx9.s:314    .text:0000000000000154 .L0 
     /tmp/ccaSKDx9.s:315    .text:0000000000000154 .L0 
     /tmp/ccaSKDx9.s:316    .text:0000000000000154 .L0 
  src/../h/riscv.hpp:168    .text:0000000000000154 .L0 
     /tmp/ccaSKDx9.s:324    .text:000000000000015c .L0 
     /tmp/ccaSKDx9.s:325    .text:000000000000015c .L0 
     /tmp/ccaSKDx9.s:329    .text:0000000000000160 .L0 
     /tmp/ccaSKDx9.s:331    .text:0000000000000164 .L0 
     /tmp/ccaSKDx9.s:332    .text:0000000000000164 .L0 
     /tmp/ccaSKDx9.s:335    .text:0000000000000170 .L0 
     /tmp/ccaSKDx9.s:336    .text:0000000000000170 .L0 
GAS LISTING /tmp/ccaSKDx9.s 			page 16


     /tmp/ccaSKDx9.s:339    .text:0000000000000178 .L0 
     /tmp/ccaSKDx9.s:340    .text:0000000000000178 .L0 
     /tmp/ccaSKDx9.s:345    .text:000000000000017c .L0 
  src/../h/riscv.hpp:174    .text:000000000000017c .L0 
     /tmp/ccaSKDx9.s:355    .text:0000000000000180 .L0 
     /tmp/ccaSKDx9.s:356    .text:0000000000000180 .L0 
     /tmp/ccaSKDx9.s:361    .text:0000000000000184 .L0 
  src/../h/riscv.hpp:106    .text:0000000000000184 .L0 
     /tmp/ccaSKDx9.s:368    .text:0000000000000188 .L0 
     /tmp/ccaSKDx9.s:377    .text:000000000000018c .L0 
     /tmp/ccaSKDx9.s:378    .text:000000000000018c .L0 
     /tmp/ccaSKDx9.s:383    .text:0000000000000194 .L0 
     /tmp/ccaSKDx9.s:384    .text:0000000000000198 .L0 
     /tmp/ccaSKDx9.s:391    .text:0000000000000198 .L0 
     /tmp/ccaSKDx9.s:44     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccaSKDx9.s:128    .text:0000000000000078 .L0 
     /tmp/ccaSKDx9.s:47     .rodata.str1.8:0000000000000008 .LC1
     /tmp/ccaSKDx9.s:181    .text:00000000000000b0 .L0 
     /tmp/ccaSKDx9.s:50     .rodata.str1.8:0000000000000010 .LC2
     /tmp/ccaSKDx9.s:199    .text:00000000000000d0 .L0 
     /tmp/ccaSKDx9.s:209    .text:00000000000000ec .L0 
     /tmp/ccaSKDx9.s:269    .text:000000000000011c .L0 
     /tmp/ccaSKDx9.s:277    .text:0000000000000130 .L0 
     /tmp/ccaSKDx9.s:332    .text:0000000000000164 .L0 
     /tmp/ccaSKDx9.s:122    .text:0000000000000078 .L8
     /tmp/ccaSKDx9.s:247    .text:0000000000000114 .L9
     /tmp/ccaSKDx9.s:370    .text:000000000000018c .L10
     /tmp/ccaSKDx9.s:108    .text:0000000000000068 .L3
     /tmp/ccaSKDx9.s:1348   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccaSKDx9.s:2452   .debug_str:0000000000000503 .LASF94
     /tmp/ccaSKDx9.s:2408   .debug_str:00000000000003a6 .LASF95
     /tmp/ccaSKDx9.s:2414   .debug_str:00000000000003ce .LASF96
     /tmp/ccaSKDx9.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccaSKDx9.s:387    .text:0000000000000198 .Letext0
     /tmp/ccaSKDx9.s:2270   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccaSKDx9.s:2386   .debug_str:0000000000000334 .LASF0
     /tmp/ccaSKDx9.s:2404   .debug_str:0000000000000380 .LASF1
     /tmp/ccaSKDx9.s:2374   .debug_str:00000000000002e0 .LASF2
     /tmp/ccaSKDx9.s:2352   .debug_str:000000000000024b .LASF4
     /tmp/ccaSKDx9.s:2432   .debug_str:000000000000046c .LASF3
     /tmp/ccaSKDx9.s:2292   .debug_str:000000000000006a .LASF5
     /tmp/ccaSKDx9.s:2406   .debug_str:0000000000000393 .LASF6
     /tmp/ccaSKDx9.s:2384   .debug_str:0000000000000321 .LASF7
     /tmp/ccaSKDx9.s:2458   .debug_str:00000000000005e8 .LASF8
     /tmp/ccaSKDx9.s:2340   .debug_str:00000000000001d0 .LASF9
     /tmp/ccaSKDx9.s:2412   .debug_str:00000000000003bf .LASF10
     /tmp/ccaSKDx9.s:2454   .debug_str:00000000000005c7 .LASF11
     /tmp/ccaSKDx9.s:2294   .debug_str:0000000000000071 .LASF12
     /tmp/ccaSKDx9.s:2274   .debug_str:0000000000000008 .LASF13
     /tmp/ccaSKDx9.s:2302   .debug_str:00000000000000bb .LASF14
     /tmp/ccaSKDx9.s:2426   .debug_str:0000000000000438 .LASF15
     /tmp/ccaSKDx9.s:2308   .debug_str:00000000000000df .LASF16
     /tmp/ccaSKDx9.s:2400   .debug_str:000000000000036f .LASF56
     /tmp/ccaSKDx9.s:2364   .debug_str:0000000000000293 .LASF97
     /tmp/ccaSKDx9.s:2442   .debug_str:00000000000004b6 .LASF17
     /tmp/ccaSKDx9.s:2398   .debug_str:0000000000000366 .LASF18
     /tmp/ccaSKDx9.s:2358   .debug_str:0000000000000260 .LASF19
GAS LISTING /tmp/ccaSKDx9.s 			page 17


     /tmp/ccaSKDx9.s:2424   .debug_str:000000000000042d .LASF52
     /tmp/ccaSKDx9.s:2472   .debug_str:0000000000000657 .LASF54
     /tmp/ccaSKDx9.s:2276   .debug_str:0000000000000018 .LASF20
     /tmp/ccaSKDx9.s:2322   .debug_str:0000000000000152 .LASF22
     /tmp/ccaSKDx9.s:2318   .debug_str:0000000000000141 .LASF24
     /tmp/ccaSKDx9.s:2316   .debug_str:000000000000012c .LASF26
     /tmp/ccaSKDx9.s:2436   .debug_str:000000000000048f .LASF21
     /tmp/ccaSKDx9.s:2416   .debug_str:0000000000000401 .LASF23
     /tmp/ccaSKDx9.s:2450   .debug_str:00000000000004fc .LASF25
     /tmp/ccaSKDx9.s:2446   .debug_str:00000000000004d7 .LASF27
     /tmp/ccaSKDx9.s:2332   .debug_str:00000000000001a6 .LASF28
     /tmp/ccaSKDx9.s:2310   .debug_str:00000000000000f5 .LASF29
     /tmp/ccaSKDx9.s:2272   .debug_str:0000000000000000 .LASF30
     /tmp/ccaSKDx9.s:2344   .debug_str:00000000000001f4 .LASF31
     /tmp/ccaSKDx9.s:2290   .debug_str:0000000000000062 .LASF32
     /tmp/ccaSKDx9.s:2296   .debug_str:0000000000000081 .LASF33
     /tmp/ccaSKDx9.s:2476   .debug_str:000000000000067a .LASF34
     /tmp/ccaSKDx9.s:2324   .debug_str:0000000000000167 .LASF35
     /tmp/ccaSKDx9.s:2388   .debug_str:0000000000000341 .LASF36
     /tmp/ccaSKDx9.s:2468   .debug_str:000000000000063f .LASF37
     /tmp/ccaSKDx9.s:2286   .debug_str:0000000000000042 .LASF38
     /tmp/ccaSKDx9.s:2330   .debug_str:0000000000000193 .LASF39
     /tmp/ccaSKDx9.s:2336   .debug_str:00000000000001b3 .LASF40
     /tmp/ccaSKDx9.s:2448   .debug_str:00000000000004ea .LASF41
     /tmp/ccaSKDx9.s:2284   .debug_str:000000000000003c .LASF42
     /tmp/ccaSKDx9.s:2482   .debug_str:000000000000069e .LASF43
     /tmp/ccaSKDx9.s:2474   .debug_str:000000000000066f .LASF44
     /tmp/ccaSKDx9.s:2430   .debug_str:0000000000000454 .LASF45
     /tmp/ccaSKDx9.s:2402   .debug_str:0000000000000375 .LASF46
     /tmp/ccaSKDx9.s:2444   .debug_str:00000000000004bf .LASF47
     /tmp/ccaSKDx9.s:2300   .debug_str:00000000000000b1 .LASF48
     /tmp/ccaSKDx9.s:2348   .debug_str:000000000000020d .LASF49
     /tmp/ccaSKDx9.s:2378   .debug_str:00000000000002fa .LASF50
     /tmp/ccaSKDx9.s:2342   .debug_str:00000000000001de .LASF51
     /tmp/ccaSKDx9.s:2438   .debug_str:0000000000000496 .LASF53
     /tmp/ccaSKDx9.s:2298   .debug_str:0000000000000095 .LASF55
     /tmp/ccaSKDx9.s:2460   .debug_str:00000000000005f8 .LASF74
     /tmp/ccaSKDx9.s:2362   .debug_str:0000000000000271 .LASF76
     /tmp/ccaSKDx9.s:2282   .debug_str:0000000000000034 .LASF98
     /tmp/ccaSKDx9.s:2346   .debug_str:0000000000000208 .LASF57
     /tmp/ccaSKDx9.s:2418   .debug_str:0000000000000414 .LASF59
     /tmp/ccaSKDx9.s:2410   .debug_str:00000000000003b4 .LASF61
     /tmp/ccaSKDx9.s:2338   .debug_str:00000000000001b9 .LASF63
     /tmp/ccaSKDx9.s:2376   .debug_str:00000000000002ee .LASF58
     /tmp/ccaSKDx9.s:2478   .debug_str:0000000000000682 .LASF60
     /tmp/ccaSKDx9.s:2370   .debug_str:00000000000002c5 .LASF62
     /tmp/ccaSKDx9.s:2288   .debug_str:0000000000000049 .LASF64
     /tmp/ccaSKDx9.s:2306   .debug_str:00000000000000d2 .LASF65
     /tmp/ccaSKDx9.s:2368   .debug_str:00000000000002a9 .LASF66
     /tmp/ccaSKDx9.s:2422   .debug_str:0000000000000428 .LASF99
     /tmp/ccaSKDx9.s:2428   .debug_str:000000000000044e .LASF67
     /tmp/ccaSKDx9.s:2380   .debug_str:0000000000000304 .LASF68
     /tmp/ccaSKDx9.s:2320   .debug_str:000000000000014a .LASF100
     /tmp/ccaSKDx9.s:2440   .debug_str:00000000000004a5 .LASF101
     /tmp/ccaSKDx9.s:2356   .debug_str:000000000000025b .LASF69
     /tmp/ccaSKDx9.s:2392   .debug_str:0000000000000351 .LASF70
     /tmp/ccaSKDx9.s:2360   .debug_str:0000000000000269 .LASF71
GAS LISTING /tmp/ccaSKDx9.s 			page 18


     /tmp/ccaSKDx9.s:2396   .debug_str:000000000000035c .LASF72
     /tmp/ccaSKDx9.s:2354   .debug_str:0000000000000252 .LASF73
     /tmp/ccaSKDx9.s:2372   .debug_str:00000000000002d2 .LASF75
     /tmp/ccaSKDx9.s:2464   .debug_str:000000000000061b .LASF77
     /tmp/ccaSKDx9.s:2462   .debug_str:000000000000060d .LASF102
     /tmp/ccaSKDx9.s:2350   .debug_str:0000000000000223 .LASF103
     /tmp/ccaSKDx9.s:2390   .debug_str:0000000000000348 .LASF78
     /tmp/ccaSKDx9.s:2326   .debug_str:000000000000017b .LASF79
     /tmp/ccaSKDx9.s:2434   .debug_str:000000000000047e .LASF104
     /tmp/ccaSKDx9.s:2366   .debug_str:000000000000029e .LASF80
     /tmp/ccaSKDx9.s:2466   .debug_str:0000000000000634 .LASF81
     /tmp/ccaSKDx9.s:2328   .debug_str:000000000000018e .LASF82
     /tmp/ccaSKDx9.s:57     .text:0000000000000020 .LFB34
     /tmp/ccaSKDx9.s:385    .text:0000000000000198 .LFE34
     /tmp/ccaSKDx9.s:2278   .debug_str:0000000000000021 .LASF83
     /tmp/ccaSKDx9.s:2189   .debug_loc:0000000000000000 .LLST0
     /tmp/ccaSKDx9.s:125    .text:0000000000000078 .LBB49
     /tmp/ccaSKDx9.s:250    .text:0000000000000114 .LBE49
     /tmp/ccaSKDx9.s:2394   .debug_str:0000000000000357 .LASF84
     /tmp/ccaSKDx9.s:2420   .debug_str:0000000000000420 .LASF85
     /tmp/ccaSKDx9.s:2304   .debug_str:00000000000000c7 .LASF86
     /tmp/ccaSKDx9.s:2334   .debug_str:00000000000001ae .LASF87
     /tmp/ccaSKDx9.s:132    .text:0000000000000088 .LBB50
     /tmp/ccaSKDx9.s:147    .text:0000000000000094 .LBE50
     /tmp/ccaSKDx9.s:153    .text:000000000000009c .LBB52
     /tmp/ccaSKDx9.s:168    .text:00000000000000a8 .LBE52
     /tmp/ccaSKDx9.s:219    .text:0000000000000104 .LBB54
     /tmp/ccaSKDx9.s:230    .text:0000000000000108 .LBE54
     /tmp/ccaSKDx9.s:2214   .debug_loc:0000000000000071 .LLST5
     /tmp/ccaSKDx9.s:235    .text:000000000000010c .LBB56
     /tmp/ccaSKDx9.s:249    .text:0000000000000114 .LBE56
     /tmp/ccaSKDx9.s:2221   .debug_loc:0000000000000094 .LLST6
     /tmp/ccaSKDx9.s:130    .text:0000000000000088 .LVL3
     /tmp/ccaSKDx9.s:183    .text:00000000000000c0 .LVL4
     /tmp/ccaSKDx9.s:188    .text:00000000000000cc .LVL5
     /tmp/ccaSKDx9.s:201    .text:00000000000000e0 .LVL6
     /tmp/ccaSKDx9.s:206    .text:00000000000000ec .LVL7
     /tmp/ccaSKDx9.s:214    .text:0000000000000100 .LVL8
     /tmp/ccaSKDx9.s:291    .text:0000000000000144 .LBB40
     /tmp/ccaSKDx9.s:373    .text:000000000000018c .LBE40
     /tmp/ccaSKDx9.s:293    .text:0000000000000144 .LBB41
     /tmp/ccaSKDx9.s:308    .text:0000000000000150 .LBE41
     /tmp/ccaSKDx9.s:312    .text:0000000000000154 .LBB43
     /tmp/ccaSKDx9.s:327    .text:0000000000000160 .LBE43
     /tmp/ccaSKDx9.s:342    .text:000000000000017c .LBB45
     /tmp/ccaSKDx9.s:353    .text:0000000000000180 .LBE45
     /tmp/ccaSKDx9.s:2228   .debug_loc:00000000000000b7 .LLST3
     /tmp/ccaSKDx9.s:358    .text:0000000000000184 .LBB47
     /tmp/ccaSKDx9.s:372    .text:000000000000018c .LBE47
     /tmp/ccaSKDx9.s:2235   .debug_loc:00000000000000da .LLST4
     /tmp/ccaSKDx9.s:337    .text:0000000000000178 .LVL17
     /tmp/ccaSKDx9.s:69     .text:0000000000000030 .LBB30
     /tmp/ccaSKDx9.s:86     .text:000000000000003c .LBE30
     /tmp/ccaSKDx9.s:254    .text:0000000000000114 .LBB35
     /tmp/ccaSKDx9.s:266    .text:000000000000011c .LBE35
     /tmp/ccaSKDx9.s:2242   .debug_loc:00000000000000fd .LLST1
     /tmp/ccaSKDx9.s:280    .text:000000000000013c .LBB38
GAS LISTING /tmp/ccaSKDx9.s 			page 19


     /tmp/ccaSKDx9.s:288    .text:0000000000000140 .LBE38
     /tmp/ccaSKDx9.s:2250   .debug_loc:0000000000000121 .LLST2
     /tmp/ccaSKDx9.s:379    .text:0000000000000194 .LVL22
     /tmp/ccaSKDx9.s:10     .text:0000000000000000 .LFB33
     /tmp/ccaSKDx9.s:40     .text:0000000000000020 .LFE33
     /tmp/ccaSKDx9.s:2470   .debug_str:0000000000000652 .LASF105
     /tmp/ccaSKDx9.s:2480   .debug_str:0000000000000699 .LASF88
     /tmp/ccaSKDx9.s:2312   .debug_str:0000000000000109 .LASF89
     /tmp/ccaSKDx9.s:2280   .debug_str:0000000000000028 .LASF91
     /tmp/ccaSKDx9.s:2456   .debug_str:00000000000005d6 .LASF90
     /tmp/ccaSKDx9.s:2382   .debug_str:0000000000000314 .LASF92
     /tmp/ccaSKDx9.s:2314   .debug_str:000000000000011c .LASF93
     /tmp/ccaSKDx9.s:84     .text:000000000000003c .LVL0
     /tmp/ccaSKDx9.s:107    .text:0000000000000068 .LVL1
     /tmp/ccaSKDx9.s:121    .text:0000000000000078 .LVL2
     /tmp/ccaSKDx9.s:246    .text:0000000000000114 .LVL12
     /tmp/ccaSKDx9.s:270    .text:0000000000000124 .LVL14
     /tmp/ccaSKDx9.s:369    .text:000000000000018c .LVL21
     /tmp/ccaSKDx9.s:218    .text:0000000000000104 .LVL9
     /tmp/ccaSKDx9.s:227    .text:0000000000000108 .LVL10
     /tmp/ccaSKDx9.s:234    .text:000000000000010c .LVL11
     /tmp/ccaSKDx9.s:341    .text:000000000000017c .LVL18
     /tmp/ccaSKDx9.s:350    .text:0000000000000180 .LVL19
     /tmp/ccaSKDx9.s:357    .text:0000000000000184 .LVL20
     /tmp/ccaSKDx9.s:263    .text:000000000000011c .LVL13
     /tmp/ccaSKDx9.s:279    .text:000000000000013c .LVL15
     /tmp/ccaSKDx9.s:286    .text:0000000000000140 .LVL16
     /tmp/ccaSKDx9.s:392    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Z11printStringPKc
_Z12printIntegerm
_ZN3TCB16timeSliceCounterE
_ZN3TCB8dispatchEv
_ZN3TCB7runningE
console_handler
