GAS LISTING /tmp/ccpKbp9m.s 			page 1


   1              		.file	"oldMain.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 54687265 		.string	"ThreadA created\n"
   9      61644120 
   9      63726561 
   9      7465640A 
   9      00
  10 0011 00000000 		.align	3
  10      000000
  11              	.LC1:
  12 0018 54687265 		.string	"ThreadB created\n"
  12      61644220 
  12      63726561 
  12      7465640A 
  12      00
  13 0029 00000000 		.align	3
  13      000000
  14              	.LC2:
  15 0030 54687265 		.string	"ThreadC created\n"
  15      61644320 
  15      63726561 
  15      7465640A 
  15      00
  16 0041 00000000 		.align	3
  16      000000
  17              	.LC3:
  18 0048 54687265 		.string	"ThreadD created\n"
  18      61644420 
  18      63726561 
  18      7465640A 
  18      00
  19 0059 00000000 		.align	3
  19      000000
  20              	.LC4:
  21 0060 46696E69 		.string	"Finished\n"
  21      73686564 
  21      0A00
  22              		.text
  23              		.align	2
  24              		.globl	_Z5main2v
  26              	_Z5main2v:
  27              	.LFB33:
  28              		.file 1 "src/oldMain.cpp"
   1:src/oldMain.cpp **** #include "../h/tcb.hpp"
   2:src/oldMain.cpp **** #include "../h/workers.hpp"
   3:src/oldMain.cpp **** #include "../h/print.hpp"
   4:src/oldMain.cpp **** #include "../h/riscv.hpp"
   5:src/oldMain.cpp **** 
   6:src/oldMain.cpp **** int main2()
   7:src/oldMain.cpp **** {
  29              		.loc 1 7 1
GAS LISTING /tmp/ccpKbp9m.s 			page 2


  30              		.cfi_startproc
  31 0000 130101FB 		addi	sp,sp,-80
  32              		.cfi_def_cfa_offset 80
  33 0004 23341104 		sd	ra,72(sp)
  34 0008 23308104 		sd	s0,64(sp)
  35 000c 233C9102 		sd	s1,56(sp)
  36 0010 23382103 		sd	s2,48(sp)
  37              		.cfi_offset 1, -8
  38              		.cfi_offset 8, -16
  39              		.cfi_offset 9, -24
  40              		.cfi_offset 18, -32
  41 0014 13040105 		addi	s0,sp,80
  42              		.cfi_def_cfa 8, 0
   8:src/oldMain.cpp ****     TCB *threads[5];
  43              		.loc 1 8 5
   9:src/oldMain.cpp **** 
  10:src/oldMain.cpp ****     threads[0] = TCB::createThread(nullptr);
  44              		.loc 1 10 5
  45              		.loc 1 10 35 is_stmt 0
  46 0018 13050000 		li	a0,0
  47 001c 97000000 		call	_ZN3TCB12createThreadEPFvvE@plt
  47      E7800000 
  48              	.LVL0:
  49              		.loc 1 10 16
  50 0024 233CA4FA 		sd	a0,-72(s0)
  11:src/oldMain.cpp ****     TCB::running = threads[0];
  51              		.loc 1 11 5 is_stmt 1
  52              		.loc 1 11 18 is_stmt 0
  53 0028 97070000 		la	a5,_ZN3TCB7runningE
  53      83B70700 
  54 0030 23B0A700 		sd	a0,0(a5)
  12:src/oldMain.cpp **** 
  13:src/oldMain.cpp ****     threads[1] = TCB::createThread(workerBodyA);
  55              		.loc 1 13 5 is_stmt 1
  56              		.loc 1 13 35 is_stmt 0
  57 0034 17050000 		la	a0,_Z11workerBodyAv
  57      03350500 
  58 003c 97000000 		call	_ZN3TCB12createThreadEPFvvE@plt
  58      E7800000 
  59              	.LVL1:
  60              		.loc 1 13 16
  61 0044 2330A4FC 		sd	a0,-64(s0)
  14:src/oldMain.cpp ****     printString("ThreadA created\n");
  62              		.loc 1 14 5 is_stmt 1
  63              		.loc 1 14 16 is_stmt 0
  64 0048 17050000 		lla	a0,.LC0
  64      13050500 
  65 0050 97000000 		call	_Z11printStringPKc@plt
  65      E7800000 
  66              	.LVL2:
  15:src/oldMain.cpp ****     threads[2] = TCB::createThread(workerBodyB);
  67              		.loc 1 15 5 is_stmt 1
  68              		.loc 1 15 35 is_stmt 0
  69 0058 17050000 		la	a0,_Z11workerBodyBv
  69      03350500 
  70 0060 97000000 		call	_ZN3TCB12createThreadEPFvvE@plt
  70      E7800000 
GAS LISTING /tmp/ccpKbp9m.s 			page 3


  71              	.LVL3:
  72              		.loc 1 15 16
  73 0068 2334A4FC 		sd	a0,-56(s0)
  16:src/oldMain.cpp ****     printString("ThreadB created\n");
  74              		.loc 1 16 5 is_stmt 1
  75              		.loc 1 16 16 is_stmt 0
  76 006c 17050000 		lla	a0,.LC1
  76      13050500 
  77 0074 97000000 		call	_Z11printStringPKc@plt
  77      E7800000 
  78              	.LVL4:
  17:src/oldMain.cpp ****     threads[3] = TCB::createThread(workerBodyC);
  79              		.loc 1 17 5 is_stmt 1
  80              		.loc 1 17 35 is_stmt 0
  81 007c 17050000 		la	a0,_Z11workerBodyCv
  81      03350500 
  82 0084 97000000 		call	_ZN3TCB12createThreadEPFvvE@plt
  82      E7800000 
  83              	.LVL5:
  84              		.loc 1 17 16
  85 008c 2338A4FC 		sd	a0,-48(s0)
  18:src/oldMain.cpp ****     printString("ThreadC created\n");
  86              		.loc 1 18 5 is_stmt 1
  87              		.loc 1 18 16 is_stmt 0
  88 0090 17050000 		lla	a0,.LC2
  88      13050500 
  89 0098 97000000 		call	_Z11printStringPKc@plt
  89      E7800000 
  90              	.LVL6:
  19:src/oldMain.cpp ****     threads[4] = TCB::createThread(workerBodyD);
  91              		.loc 1 19 5 is_stmt 1
  92              		.loc 1 19 35 is_stmt 0
  93 00a0 17050000 		la	a0,_Z11workerBodyDv
  93      03350500 
  94 00a8 97000000 		call	_ZN3TCB12createThreadEPFvvE@plt
  94      E7800000 
  95              	.LVL7:
  96              		.loc 1 19 16
  97 00b0 233CA4FC 		sd	a0,-40(s0)
  20:src/oldMain.cpp ****     printString("ThreadD created\n");
  98              		.loc 1 20 5 is_stmt 1
  99              		.loc 1 20 16 is_stmt 0
 100 00b4 17050000 		lla	a0,.LC3
 100      13050500 
 101 00bc 97000000 		call	_Z11printStringPKc@plt
 101      E7800000 
 102              	.LVL8:
  21:src/oldMain.cpp **** 
  22:src/oldMain.cpp ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap);
 103              		.loc 1 22 5 is_stmt 1
 104              		.loc 1 22 19 is_stmt 0
 105 00c4 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 105      83B70700 
 106              	.LVL9:
 107              	.LBB18:
 108              	.LBB19:
 109              		.file 2 "src/../h/riscv.hpp"
GAS LISTING /tmp/ccpKbp9m.s 			page 4


   1:src/../h/riscv.hpp **** #ifndef RISCV_HPP
   2:src/../h/riscv.hpp **** #define RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** class Riscv
   7:src/../h/riscv.hpp **** {
   8:src/../h/riscv.hpp **** public:
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  11:src/../h/riscv.hpp ****     static void popSppSpie();
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp ****     // read register scause
  14:src/../h/riscv.hpp ****     static uint64 r_scause();
  15:src/../h/riscv.hpp **** 
  16:src/../h/riscv.hpp ****     // write register scause
  17:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     // read register sepc
  20:src/../h/riscv.hpp ****     static uint64 r_sepc();
  21:src/../h/riscv.hpp **** 
  22:src/../h/riscv.hpp ****     // write register sepc
  23:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     // read register stvec
  26:src/../h/riscv.hpp ****     static uint64 r_stvec();
  27:src/../h/riscv.hpp **** 
  28:src/../h/riscv.hpp ****     // write register stvec
  29:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     // read register stval
  32:src/../h/riscv.hpp ****     static uint64 r_stval();
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     // write register stval
  35:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     enum BitMaskSip
  38:src/../h/riscv.hpp ****     {
  39:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  40:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  41:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  42:src/../h/riscv.hpp ****     };
  43:src/../h/riscv.hpp **** 
  44:src/../h/riscv.hpp ****     // mask set register sip
  45:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  46:src/../h/riscv.hpp **** 
  47:src/../h/riscv.hpp ****     // mask clear register sip
  48:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  49:src/../h/riscv.hpp **** 
  50:src/../h/riscv.hpp ****     // read register sip
  51:src/../h/riscv.hpp ****     static uint64 r_sip();
  52:src/../h/riscv.hpp **** 
  53:src/../h/riscv.hpp ****     // write register sip
  54:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  55:src/../h/riscv.hpp **** 
  56:src/../h/riscv.hpp ****     enum BitMaskSstatus
  57:src/../h/riscv.hpp ****     {
GAS LISTING /tmp/ccpKbp9m.s 			page 5


  58:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  59:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  60:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  61:src/../h/riscv.hpp ****     };
  62:src/../h/riscv.hpp **** 
  63:src/../h/riscv.hpp ****     // mask set register sstatus
  64:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp ****     // mask clear register sstatus
  67:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  68:src/../h/riscv.hpp **** 
  69:src/../h/riscv.hpp ****     // read register sstatus
  70:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  71:src/../h/riscv.hpp **** 
  72:src/../h/riscv.hpp ****     // write register sstatus
  73:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  74:src/../h/riscv.hpp **** 
  75:src/../h/riscv.hpp ****     // supervisor trap
  76:src/../h/riscv.hpp ****     static void supervisorTrap();
  77:src/../h/riscv.hpp **** 
  78:src/../h/riscv.hpp **** private:
  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp ****     // supervisor trap handler
  81:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp **** };
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
  86:src/../h/riscv.hpp **** {
  87:src/../h/riscv.hpp ****     uint64 volatile scause;
  88:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  89:src/../h/riscv.hpp ****     return scause;
  90:src/../h/riscv.hpp **** }
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
  93:src/../h/riscv.hpp **** {
  94:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
  95:src/../h/riscv.hpp **** }
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
  98:src/../h/riscv.hpp **** {
  99:src/../h/riscv.hpp ****     uint64 volatile sepc;
 100:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 101:src/../h/riscv.hpp ****     return sepc;
 102:src/../h/riscv.hpp **** }
 103:src/../h/riscv.hpp **** 
 104:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 105:src/../h/riscv.hpp **** {
 106:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 107:src/../h/riscv.hpp **** }
 108:src/../h/riscv.hpp **** 
 109:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 110:src/../h/riscv.hpp **** {
 111:src/../h/riscv.hpp ****     uint64 volatile stvec;
 112:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 113:src/../h/riscv.hpp ****     return stvec;
 114:src/../h/riscv.hpp **** }
GAS LISTING /tmp/ccpKbp9m.s 			page 6


 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 117:src/../h/riscv.hpp **** {
 118:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 110              		.loc 2 118 5 is_stmt 1
 111              		.loc 2 118 69 is_stmt 0
 112              	#APP
 113              	# 118 "src/../h/riscv.hpp" 1
 119              	}
 114              		csrw stvec, a5
 115              	# 0 "" 2
 116              	.LVL10:
 117              	#NO_APP
 118              	.LBE19:
 119              	.LBE18:
  23:src/oldMain.cpp ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
 120              		.loc 1 23 5 is_stmt 1
 121              	.LBB20:
 122              	.LBB21:
 120:src/../h/riscv.hpp **** 
 121:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 122:src/../h/riscv.hpp **** {
 123:src/../h/riscv.hpp ****     uint64 volatile stval;
 124:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 125:src/../h/riscv.hpp ****     return stval;
 126:src/../h/riscv.hpp **** }
 127:src/../h/riscv.hpp **** 
 128:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 129:src/../h/riscv.hpp **** {
 130:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 131:src/../h/riscv.hpp **** }
 132:src/../h/riscv.hpp **** 
 133:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 134:src/../h/riscv.hpp **** {
 135:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 136:src/../h/riscv.hpp **** }
 137:src/../h/riscv.hpp **** 
 138:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 139:src/../h/riscv.hpp **** {
 140:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 141:src/../h/riscv.hpp **** }
 142:src/../h/riscv.hpp **** 
 143:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 144:src/../h/riscv.hpp **** {
 145:src/../h/riscv.hpp ****     uint64 volatile sip;
 146:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 147:src/../h/riscv.hpp ****     return sip;
 148:src/../h/riscv.hpp **** }
 149:src/../h/riscv.hpp **** 
 150:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 151:src/../h/riscv.hpp **** {
 152:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 153:src/../h/riscv.hpp **** }
 154:src/../h/riscv.hpp **** 
 155:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 156:src/../h/riscv.hpp **** {
 157:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
GAS LISTING /tmp/ccpKbp9m.s 			page 7


 123              		.loc 2 157 5
 124              		.loc 2 157 68 is_stmt 0
 125 00d0 93072000 		li	a5,2
 126              	#APP
 127              	# 157 "src/../h/riscv.hpp" 1
 158              	}
 128              		csrs sstatus, a5
 129              	# 0 "" 2
 130              		.loc 2 158 1
 131              	#NO_APP
 132 00d8 6F00C000 		j	.L4
 133              	.LVL11:
 134              	.L2:
 135              	.LBE21:
 136              	.LBE20:
  24:src/oldMain.cpp **** 
  25:src/oldMain.cpp ****     while (!(threads[1]->isFinished() &&
  26:src/oldMain.cpp ****              threads[2]->isFinished() &&
  27:src/oldMain.cpp ****              threads[3]->isFinished() &&
  28:src/oldMain.cpp ****              threads[4]->isFinished()))
  29:src/oldMain.cpp ****     {
  30:src/oldMain.cpp ****         TCB::yield();
 137              		.loc 1 30 9 is_stmt 1 discriminator 3
 138              		.loc 1 30 19 is_stmt 0 discriminator 3
 139 00dc 97000000 		call	_ZN3TCB5yieldEv@plt
 139      E7800000 
 140              	.LVL12:
 141              	.L4:
  25:src/oldMain.cpp ****              threads[2]->isFinished() &&
 142              		.loc 1 25 5 is_stmt 1
  25:src/oldMain.cpp ****              threads[2]->isFinished() &&
 143              		.loc 1 25 12
  25:src/oldMain.cpp ****              threads[2]->isFinished() &&
 144              		.loc 1 25 23 is_stmt 0
 145 00e4 833704FC 		ld	a5,-64(s0)
 146              	.LVL13:
 147              	.LBB22:
 148              	.LBB23:
 149              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** #ifndef TCB_HPP
   2:src/../h/tcb.hpp **** #define TCB_HPP
   3:src/../h/tcb.hpp **** 
   4:src/../h/tcb.hpp **** #include "../lib/hw.h"
   5:src/../h/tcb.hpp **** #include "scheduler.hpp"
   6:src/../h/tcb.hpp **** 
   7:src/../h/tcb.hpp **** // Thread Control Block
   8:src/../h/tcb.hpp **** class TCB
   9:src/../h/tcb.hpp **** {
  10:src/../h/tcb.hpp **** public:
  11:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
  12:src/../h/tcb.hpp **** 
  13:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
 150              		.loc 3 13 31 is_stmt 1
 151              		.loc 3 13 38 is_stmt 0
 152 00e8 83C78702 		lbu	a5,40(a5)
 153              	.LVL14:
 154              	.LBE23:
GAS LISTING /tmp/ccpKbp9m.s 			page 8


 155              	.LBE22:
  25:src/oldMain.cpp ****              threads[2]->isFinished() &&
 156              		.loc 1 25 12
 157 00ec E38807FE 		beqz	a5,.L2
  26:src/oldMain.cpp ****              threads[3]->isFinished() &&
 158              		.loc 1 26 23 discriminator 2
 159 00f0 833784FC 		ld	a5,-56(s0)
 160              	.LVL15:
 161              	.LBB24:
 162              	.LBB25:
 163              		.loc 3 13 31 is_stmt 1 discriminator 2
 164              		.loc 3 13 38 is_stmt 0 discriminator 2
 165 00f4 83C78702 		lbu	a5,40(a5)
 166              	.LVL16:
 167              	.LBE25:
 168              	.LBE24:
  25:src/oldMain.cpp ****              threads[2]->isFinished() &&
 169              		.loc 1 25 39 discriminator 2
 170 00f8 E38207FE 		beqz	a5,.L2
  27:src/oldMain.cpp ****              threads[4]->isFinished()))
 171              		.loc 1 27 23
 172 00fc 833704FD 		ld	a5,-48(s0)
 173              	.LVL17:
 174              	.LBB26:
 175              	.LBB27:
 176              		.loc 3 13 31 is_stmt 1
 177              		.loc 3 13 38 is_stmt 0
 178 0100 83C78702 		lbu	a5,40(a5)
 179              	.LVL18:
 180              	.LBE27:
 181              	.LBE26:
  26:src/oldMain.cpp ****              threads[3]->isFinished() &&
 182              		.loc 1 26 39
 183 0104 E38C07FC 		beqz	a5,.L2
  28:src/oldMain.cpp ****     {
 184              		.loc 1 28 23 discriminator 4
 185 0108 833784FD 		ld	a5,-40(s0)
 186              	.LVL19:
 187              	.LBB28:
 188              	.LBB29:
 189              		.loc 3 13 31 is_stmt 1 discriminator 4
 190              		.loc 3 13 38 is_stmt 0 discriminator 4
 191 010c 83C78702 		lbu	a5,40(a5)
 192              	.LVL20:
 193              	.LBE29:
 194              	.LBE28:
  25:src/oldMain.cpp ****              threads[2]->isFinished() &&
 195              		.loc 1 25 12 discriminator 4
 196 0110 E38607FC 		beqz	a5,.L2
 197 0114 930484FB 		addi	s1,s0,-72
 198 0118 6F004001 		j	.L3
 199              	.LVL21:
 200              	.L7:
 201              	.LBB30:
  31:src/oldMain.cpp ****     }
  32:src/oldMain.cpp **** 
  33:src/oldMain.cpp ****     for (auto &thread: threads)
GAS LISTING /tmp/ccpKbp9m.s 			page 9


  34:src/oldMain.cpp ****     {
  35:src/oldMain.cpp ****         delete thread;
 202              		.loc 1 35 16
 203 011c 13050900 		mv	a0,s2
 204 0120 97000000 		call	_ZdlPv@plt
 204      E7800000 
 205              	.LVL22:
 206              	.L6:
  33:src/oldMain.cpp ****     {
 207              		.loc 1 33 5 is_stmt 1 discriminator 3
 208 0128 93848400 		addi	s1,s1,8
 209              	.LVL23:
 210              	.L3:
  33:src/oldMain.cpp ****     {
 211              		.loc 1 33 24 discriminator 1
 212 012c 930704FE 		addi	a5,s0,-32
 213 0130 6380F402 		beq	s1,a5,.L5
 214              	.LVL24:
 215              		.loc 1 35 9 discriminator 2
 216              		.loc 1 35 16 is_stmt 0 discriminator 2
 217 0134 03B90400 		ld	s2,0(s1)
 218              		.loc 1 35 22 discriminator 2
 219 0138 E30809FE 		beqz	s2,.L6
 220              	.LVL25:
 221              	.LBB31:
 222              	.LBB32:
  11:src/../h/tcb.hpp **** 
 223              		.loc 3 11 14 is_stmt 1
  11:src/../h/tcb.hpp **** 
 224              		.loc 3 11 23 is_stmt 0
 225 013c 03358900 		ld	a0,8(s2)
  11:src/../h/tcb.hpp **** 
 226              		.loc 3 11 28
 227 0140 E30E05FC 		beqz	a0,.L7
  11:src/../h/tcb.hpp **** 
 228              		.loc 3 11 23
 229 0144 97000000 		call	_ZdaPv@plt
 229      E7800000 
 230              	.LVL26:
 231 014c 6FF01FFD 		j	.L7
 232              	.LVL27:
 233              	.L5:
 234              	.LBE32:
 235              	.LBE31:
 236              	.LBE30:
  36:src/oldMain.cpp ****     }
  37:src/oldMain.cpp ****     printString("Finished\n");
 237              		.loc 1 37 5 is_stmt 1
 238              		.loc 1 37 16 is_stmt 0
 239 0150 17050000 		lla	a0,.LC4
 239      13050500 
 240 0158 97000000 		call	_Z11printStringPKc@plt
 240      E7800000 
 241              	.LVL28:
  38:src/oldMain.cpp **** 
  39:src/oldMain.cpp ****     return 0;
 242              		.loc 1 39 5 is_stmt 1
GAS LISTING /tmp/ccpKbp9m.s 			page 10


  40:src/oldMain.cpp **** }
 243              		.loc 1 40 1 is_stmt 0
 244 0160 13050000 		li	a0,0
 245 0164 83308104 		ld	ra,72(sp)
 246              		.cfi_restore 1
 247 0168 03340104 		ld	s0,64(sp)
 248              		.cfi_restore 8
 249              		.cfi_def_cfa 2, 80
 250 016c 83348103 		ld	s1,56(sp)
 251              		.cfi_restore 9
 252              	.LVL29:
 253 0170 03390103 		ld	s2,48(sp)
 254              		.cfi_restore 18
 255 0174 13010105 		addi	sp,sp,80
 256              		.cfi_def_cfa_offset 0
 257 0178 67800000 		jr	ra
 258              		.cfi_endproc
 259              	.LFE33:
 261              	.Letext0:
 262              		.file 4 "src/../h/../lib/hw.h"
 263              		.file 5 "src/../h/print.hpp"
GAS LISTING /tmp/ccpKbp9m.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 oldMain.cpp
     /tmp/ccpKbp9m.s:26     .text:0000000000000000 _Z5main2v
     /tmp/ccpKbp9m.s:30     .text:0000000000000000 .L0 
     /tmp/ccpKbp9m.s:31     .text:0000000000000000 .L0 
     /tmp/ccpKbp9m.s:32     .text:0000000000000004 .L0 
     /tmp/ccpKbp9m.s:37     .text:0000000000000014 .L0 
     /tmp/ccpKbp9m.s:38     .text:0000000000000014 .L0 
     /tmp/ccpKbp9m.s:39     .text:0000000000000014 .L0 
     /tmp/ccpKbp9m.s:40     .text:0000000000000014 .L0 
     /tmp/ccpKbp9m.s:42     .text:0000000000000018 .L0 
     /tmp/ccpKbp9m.s:44     .text:0000000000000018 .L0 
     /tmp/ccpKbp9m.s:45     .text:0000000000000018 .L0 
     /tmp/ccpKbp9m.s:46     .text:0000000000000018 .L0 
     /tmp/ccpKbp9m.s:50     .text:0000000000000024 .L0 
     /tmp/ccpKbp9m.s:52     .text:0000000000000028 .L0 
     /tmp/ccpKbp9m.s:53     .text:0000000000000028 .L0 
     /tmp/ccpKbp9m.s:56     .text:0000000000000034 .L0 
     /tmp/ccpKbp9m.s:57     .text:0000000000000034 .L0 
     /tmp/ccpKbp9m.s:61     .text:0000000000000044 .L0 
     /tmp/ccpKbp9m.s:63     .text:0000000000000048 .L0 
     /tmp/ccpKbp9m.s:64     .text:0000000000000048 .L0 
     /tmp/ccpKbp9m.s:68     .text:0000000000000058 .L0 
     /tmp/ccpKbp9m.s:69     .text:0000000000000058 .L0 
     /tmp/ccpKbp9m.s:73     .text:0000000000000068 .L0 
     /tmp/ccpKbp9m.s:75     .text:000000000000006c .L0 
     /tmp/ccpKbp9m.s:76     .text:000000000000006c .L0 
     /tmp/ccpKbp9m.s:80     .text:000000000000007c .L0 
     /tmp/ccpKbp9m.s:81     .text:000000000000007c .L0 
     /tmp/ccpKbp9m.s:85     .text:000000000000008c .L0 
     /tmp/ccpKbp9m.s:87     .text:0000000000000090 .L0 
     /tmp/ccpKbp9m.s:88     .text:0000000000000090 .L0 
     /tmp/ccpKbp9m.s:92     .text:00000000000000a0 .L0 
     /tmp/ccpKbp9m.s:93     .text:00000000000000a0 .L0 
     /tmp/ccpKbp9m.s:97     .text:00000000000000b0 .L0 
     /tmp/ccpKbp9m.s:99     .text:00000000000000b4 .L0 
     /tmp/ccpKbp9m.s:100    .text:00000000000000b4 .L0 
     /tmp/ccpKbp9m.s:104    .text:00000000000000c4 .L0 
     /tmp/ccpKbp9m.s:105    .text:00000000000000c4 .L0 
     /tmp/ccpKbp9m.s:111    .text:00000000000000cc .L0 
  src/../h/riscv.hpp:118    .text:00000000000000cc .L0 
     /tmp/ccpKbp9m.s:123    .text:00000000000000d0 .L0 
     /tmp/ccpKbp9m.s:124    .text:00000000000000d0 .L0 
     /tmp/ccpKbp9m.s:125    .text:00000000000000d0 .L0 
     /tmp/ccpKbp9m.s:132    .text:00000000000000d8 .L0 
     /tmp/ccpKbp9m.s:138    .text:00000000000000dc .L0 
     /tmp/ccpKbp9m.s:139    .text:00000000000000dc .L0 
     /tmp/ccpKbp9m.s:143    .text:00000000000000e4 .L0 
     /tmp/ccpKbp9m.s:144    .text:00000000000000e4 .L0 
     /tmp/ccpKbp9m.s:145    .text:00000000000000e4 .L0 
     /tmp/ccpKbp9m.s:151    .text:00000000000000e8 .L0 
     /tmp/ccpKbp9m.s:152    .text:00000000000000e8 .L0 
     /tmp/ccpKbp9m.s:157    .text:00000000000000ec .L0 
     /tmp/ccpKbp9m.s:159    .text:00000000000000f0 .L0 
     /tmp/ccpKbp9m.s:164    .text:00000000000000f4 .L0 
     /tmp/ccpKbp9m.s:165    .text:00000000000000f4 .L0 
     /tmp/ccpKbp9m.s:170    .text:00000000000000f8 .L0 
GAS LISTING /tmp/ccpKbp9m.s 			page 12


     /tmp/ccpKbp9m.s:172    .text:00000000000000fc .L0 
     /tmp/ccpKbp9m.s:177    .text:0000000000000100 .L0 
     /tmp/ccpKbp9m.s:178    .text:0000000000000100 .L0 
     /tmp/ccpKbp9m.s:183    .text:0000000000000104 .L0 
     /tmp/ccpKbp9m.s:185    .text:0000000000000108 .L0 
     /tmp/ccpKbp9m.s:190    .text:000000000000010c .L0 
     /tmp/ccpKbp9m.s:191    .text:000000000000010c .L0 
     /tmp/ccpKbp9m.s:196    .text:0000000000000110 .L0 
     /tmp/ccpKbp9m.s:203    .text:000000000000011c .L0 
     /tmp/ccpKbp9m.s:208    .text:0000000000000128 .L0 
     /tmp/ccpKbp9m.s:212    .text:000000000000012c .L0 
     /tmp/ccpKbp9m.s:216    .text:0000000000000134 .L0 
     /tmp/ccpKbp9m.s:217    .text:0000000000000134 .L0 
     /tmp/ccpKbp9m.s:219    .text:0000000000000138 .L0 
     /tmp/ccpKbp9m.s:224    .text:000000000000013c .L0 
     /tmp/ccpKbp9m.s:225    .text:000000000000013c .L0 
     /tmp/ccpKbp9m.s:227    .text:0000000000000140 .L0 
     /tmp/ccpKbp9m.s:229    .text:0000000000000144 .L0 
     /tmp/ccpKbp9m.s:238    .text:0000000000000150 .L0 
     /tmp/ccpKbp9m.s:239    .text:0000000000000150 .L0 
     /tmp/ccpKbp9m.s:243    .text:0000000000000160 .L0 
     /tmp/ccpKbp9m.s:244    .text:0000000000000160 .L0 
     /tmp/ccpKbp9m.s:246    .text:0000000000000168 .L0 
     /tmp/ccpKbp9m.s:248    .text:000000000000016c .L0 
     /tmp/ccpKbp9m.s:249    .text:000000000000016c .L0 
     /tmp/ccpKbp9m.s:251    .text:0000000000000170 .L0 
     /tmp/ccpKbp9m.s:254    .text:0000000000000174 .L0 
     /tmp/ccpKbp9m.s:256    .text:0000000000000178 .L0 
     /tmp/ccpKbp9m.s:258    .text:000000000000017c .L0 
     /tmp/ccpKbp9m.s:264    .text:000000000000017c .L0 
     /tmp/ccpKbp9m.s:53     .text:0000000000000028 .L0 
     /tmp/ccpKbp9m.s:57     .text:0000000000000034 .L0 
     /tmp/ccpKbp9m.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccpKbp9m.s:64     .text:0000000000000048 .L0 
     /tmp/ccpKbp9m.s:69     .text:0000000000000058 .L0 
     /tmp/ccpKbp9m.s:11     .rodata.str1.8:0000000000000018 .LC1
     /tmp/ccpKbp9m.s:76     .text:000000000000006c .L0 
     /tmp/ccpKbp9m.s:81     .text:000000000000007c .L0 
     /tmp/ccpKbp9m.s:14     .rodata.str1.8:0000000000000030 .LC2
     /tmp/ccpKbp9m.s:88     .text:0000000000000090 .L0 
     /tmp/ccpKbp9m.s:93     .text:00000000000000a0 .L0 
     /tmp/ccpKbp9m.s:17     .rodata.str1.8:0000000000000048 .LC3
     /tmp/ccpKbp9m.s:100    .text:00000000000000b4 .L0 
     /tmp/ccpKbp9m.s:105    .text:00000000000000c4 .L0 
     /tmp/ccpKbp9m.s:20     .rodata.str1.8:0000000000000060 .LC4
     /tmp/ccpKbp9m.s:239    .text:0000000000000150 .L0 
     /tmp/ccpKbp9m.s:141    .text:00000000000000e4 .L4
     /tmp/ccpKbp9m.s:134    .text:00000000000000dc .L2
     /tmp/ccpKbp9m.s:210    .text:000000000000012c .L3
     /tmp/ccpKbp9m.s:233    .text:0000000000000150 .L5
     /tmp/ccpKbp9m.s:206    .text:0000000000000128 .L6
     /tmp/ccpKbp9m.s:200    .text:000000000000011c .L7
     /tmp/ccpKbp9m.s:1139   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccpKbp9m.s:2299   .debug_str:0000000000000582 .LASF95
     /tmp/ccpKbp9m.s:2233   .debug_str:000000000000038f .LASF96
     /tmp/ccpKbp9m.s:2257   .debug_str:0000000000000424 .LASF97
     /tmp/ccpKbp9m.s:5      .text:0000000000000000 .Ltext0
GAS LISTING /tmp/ccpKbp9m.s 			page 13


     /tmp/ccpKbp9m.s:261    .text:000000000000017c .Letext0
     /tmp/ccpKbp9m.s:2101   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccpKbp9m.s:2227   .debug_str:0000000000000372 .LASF0
     /tmp/ccpKbp9m.s:2241   .debug_str:00000000000003b5 .LASF1
     /tmp/ccpKbp9m.s:2215   .debug_str:000000000000031f .LASF2
     /tmp/ccpKbp9m.s:2189   .debug_str:0000000000000284 .LASF4
     /tmp/ccpKbp9m.s:2275   .debug_str:00000000000004c1 .LASF3
     /tmp/ccpKbp9m.s:2121   .debug_str:0000000000000065 .LASF5
     /tmp/ccpKbp9m.s:2243   .debug_str:00000000000003c8 .LASF6
     /tmp/ccpKbp9m.s:2225   .debug_str:000000000000035f .LASF7
     /tmp/ccpKbp9m.s:2303   .debug_str:0000000000000655 .LASF8
     /tmp/ccpKbp9m.s:2177   .debug_str:00000000000001fd .LASF9
     /tmp/ccpKbp9m.s:2253   .debug_str:0000000000000409 .LASF10
     /tmp/ccpKbp9m.s:2301   .debug_str:0000000000000646 .LASF11
     /tmp/ccpKbp9m.s:2125   .debug_str:0000000000000078 .LASF12
     /tmp/ccpKbp9m.s:2105   .debug_str:0000000000000008 .LASF13
     /tmp/ccpKbp9m.s:2135   .debug_str:00000000000000c8 .LASF14
     /tmp/ccpKbp9m.s:2267   .debug_str:0000000000000486 .LASF15
     /tmp/ccpKbp9m.s:2143   .debug_str:0000000000000105 .LASF16
     /tmp/ccpKbp9m.s:2111   .debug_str:000000000000002d .LASF98
     /tmp/ccpKbp9m.s:2153   .debug_str:0000000000000173 .LASF17
     /tmp/ccpKbp9m.s:2261   .debug_str:000000000000046a .LASF19
     /tmp/ccpKbp9m.s:2245   .debug_str:00000000000003db .LASF21
     /tmp/ccpKbp9m.s:2175   .debug_str:00000000000001e6 .LASF23
     /tmp/ccpKbp9m.s:2217   .debug_str:000000000000032d .LASF18
     /tmp/ccpKbp9m.s:2185   .debug_str:0000000000000245 .LASF20
     /tmp/ccpKbp9m.s:2209   .debug_str:00000000000002fd .LASF22
     /tmp/ccpKbp9m.s:2119   .debug_str:000000000000004c .LASF24
     /tmp/ccpKbp9m.s:2201   .debug_str:00000000000002bf .LASF25
     /tmp/ccpKbp9m.s:2207   .debug_str:00000000000002e1 .LASF26
     /tmp/ccpKbp9m.s:2263   .debug_str:0000000000000476 .LASF99
     /tmp/ccpKbp9m.s:2269   .debug_str:000000000000049c .LASF43
     /tmp/ccpKbp9m.s:2223   .debug_str:000000000000034f .LASF45
     /tmp/ccpKbp9m.s:2157   .debug_str:0000000000000181 .LASF100
     /tmp/ccpKbp9m.s:2285   .debug_str:000000000000050e .LASF101
     /tmp/ccpKbp9m.s:2195   .debug_str:00000000000002a7 .LASF27
     /tmp/ccpKbp9m.s:2235   .debug_str:000000000000039f .LASF28
     /tmp/ccpKbp9m.s:2199   .debug_str:00000000000002b7 .LASF29
     /tmp/ccpKbp9m.s:2237   .debug_str:00000000000003a5 .LASF30
     /tmp/ccpKbp9m.s:2193   .debug_str:000000000000029e .LASF31
     /tmp/ccpKbp9m.s:2211   .debug_str:000000000000030a .LASF32
     /tmp/ccpKbp9m.s:2181   .debug_str:0000000000000221 .LASF34
     /tmp/ccpKbp9m.s:2307   .debug_str:000000000000067a .LASF102
     /tmp/ccpKbp9m.s:2187   .debug_str:000000000000025c .LASF103
     /tmp/ccpKbp9m.s:2231   .debug_str:0000000000000386 .LASF33
     /tmp/ccpKbp9m.s:2163   .debug_str:00000000000001a5 .LASF35
     /tmp/ccpKbp9m.s:2277   .debug_str:00000000000004d3 .LASF104
     /tmp/ccpKbp9m.s:2205   .debug_str:00000000000002d6 .LASF36
     /tmp/ccpKbp9m.s:2183   .debug_str:000000000000023a .LASF37
     /tmp/ccpKbp9m.s:2165   .debug_str:00000000000001b8 .LASF38
     /tmp/ccpKbp9m.s:2239   .debug_str:00000000000003af .LASF39
     /tmp/ccpKbp9m.s:2147   .debug_str:000000000000012f .LASF105
     /tmp/ccpKbp9m.s:2141   .debug_str:00000000000000f9 .LASF40
     /tmp/ccpKbp9m.s:2311   .debug_str:0000000000000694 .LASF41
     /tmp/ccpKbp9m.s:2123   .debug_str:000000000000006c .LASF42
     /tmp/ccpKbp9m.s:2265   .debug_str:000000000000047b .LASF44
     /tmp/ccpKbp9m.s:2317   .debug_str:00000000000006b9 .LASF46
GAS LISTING /tmp/ccpKbp9m.s 			page 14


     /tmp/ccpKbp9m.s:2107   .debug_str:0000000000000018 .LASF48
     /tmp/ccpKbp9m.s:2287   .debug_str:000000000000051f .LASF50
     /tmp/ccpKbp9m.s:2155   .debug_str:0000000000000178 .LASF47
     /tmp/ccpKbp9m.s:2139   .debug_str:00000000000000e4 .LASF53
     /tmp/ccpKbp9m.s:2279   .debug_str:00000000000004e4 .LASF49
     /tmp/ccpKbp9m.s:2259   .debug_str:0000000000000457 .LASF51
     /tmp/ccpKbp9m.s:2297   .debug_str:000000000000057b .LASF52
     /tmp/ccpKbp9m.s:2293   .debug_str:0000000000000556 .LASF54
     /tmp/ccpKbp9m.s:2169   .debug_str:00000000000001d0 .LASF55
     /tmp/ccpKbp9m.s:2145   .debug_str:000000000000011b .LASF56
     /tmp/ccpKbp9m.s:2103   .debug_str:0000000000000000 .LASF57
     /tmp/ccpKbp9m.s:2281   .debug_str:00000000000004eb .LASF58
     /tmp/ccpKbp9m.s:2159   .debug_str:0000000000000189 .LASF59
     /tmp/ccpKbp9m.s:2129   .debug_str:000000000000008e .LASF60
     /tmp/ccpKbp9m.s:2321   .debug_str:00000000000006dc .LASF61
     /tmp/ccpKbp9m.s:2161   .debug_str:0000000000000191 .LASF62
     /tmp/ccpKbp9m.s:2229   .debug_str:000000000000037f .LASF63
     /tmp/ccpKbp9m.s:2313   .debug_str:00000000000006a1 .LASF64
     /tmp/ccpKbp9m.s:2117   .debug_str:0000000000000045 .LASF65
     /tmp/ccpKbp9m.s:2167   .debug_str:00000000000001bd .LASF66
     /tmp/ccpKbp9m.s:2173   .debug_str:00000000000001e0 .LASF67
     /tmp/ccpKbp9m.s:2295   .debug_str:0000000000000569 .LASF68
     /tmp/ccpKbp9m.s:2115   .debug_str:000000000000003f .LASF69
     /tmp/ccpKbp9m.s:2325   .debug_str:00000000000006e9 .LASF70
     /tmp/ccpKbp9m.s:2319   .debug_str:00000000000006d1 .LASF71
     /tmp/ccpKbp9m.s:2271   .debug_str:00000000000004a2 .LASF72
     /tmp/ccpKbp9m.s:2197   .debug_str:00000000000002ac .LASF73
     /tmp/ccpKbp9m.s:2289   .debug_str:0000000000000534 .LASF74
     /tmp/ccpKbp9m.s:2133   .debug_str:00000000000000be .LASF75
     /tmp/ccpKbp9m.s:2251   .debug_str:00000000000003f3 .LASF76
     /tmp/ccpKbp9m.s:2221   .debug_str:0000000000000345 .LASF77
     /tmp/ccpKbp9m.s:2179   .debug_str:000000000000020b .LASF78
     /tmp/ccpKbp9m.s:2283   .debug_str:00000000000004ff .LASF79
     /tmp/ccpKbp9m.s:2131   .debug_str:00000000000000a2 .LASF80
     /tmp/ccpKbp9m.s:2305   .debug_str:0000000000000665 .LASF81
     /tmp/ccpKbp9m.s:2149   .debug_str:000000000000013e .LASF82
     /tmp/ccpKbp9m.s:2127   .debug_str:0000000000000088 .LASF106
     /tmp/ccpKbp9m.s:2291   .debug_str:000000000000054c .LASF107
     /tmp/ccpKbp9m.s:27     .text:0000000000000000 .LFB33
     /tmp/ccpKbp9m.s:259    .text:000000000000017c .LFE33
     /tmp/ccpKbp9m.s:2171   .debug_str:00000000000001d8 .LASF83
     /tmp/ccpKbp9m.s:201    .text:000000000000011c .LBB30
     /tmp/ccpKbp9m.s:236    .text:0000000000000150 .LBE30
     /tmp/ccpKbp9m.s:2247   .debug_str:00000000000003e6 .LASF84
     /tmp/ccpKbp9m.s:2027   .debug_loc:0000000000000000 .LLST5
     /tmp/ccpKbp9m.s:2309   .debug_str:0000000000000688 .LASF85
     /tmp/ccpKbp9m.s:2255   .debug_str:0000000000000418 .LASF108
     /tmp/ccpKbp9m.s:2038   .debug_loc:0000000000000036 .LLST6
     /tmp/ccpKbp9m.s:2203   .debug_str:00000000000002cc .LASF86
     /tmp/ccpKbp9m.s:221    .text:000000000000013c .LBB31
     /tmp/ccpKbp9m.s:235    .text:0000000000000150 .LBE31
     /tmp/ccpKbp9m.s:2045   .debug_loc:0000000000000059 .LLST7
     /tmp/ccpKbp9m.s:230    .text:000000000000014c .LVL26
     /tmp/ccpKbp9m.s:205    .text:0000000000000128 .LVL22
     /tmp/ccpKbp9m.s:107    .text:00000000000000cc .LBB18
     /tmp/ccpKbp9m.s:119    .text:00000000000000d0 .LBE18
     /tmp/ccpKbp9m.s:121    .text:00000000000000d0 .LBB20
GAS LISTING /tmp/ccpKbp9m.s 			page 15


     /tmp/ccpKbp9m.s:136    .text:00000000000000dc .LBE20
     /tmp/ccpKbp9m.s:2052   .debug_loc:000000000000007c .LLST0
     /tmp/ccpKbp9m.s:147    .text:00000000000000e8 .LBB22
     /tmp/ccpKbp9m.s:155    .text:00000000000000ec .LBE22
     /tmp/ccpKbp9m.s:2060   .debug_loc:00000000000000a0 .LLST1
     /tmp/ccpKbp9m.s:161    .text:00000000000000f4 .LBB24
     /tmp/ccpKbp9m.s:168    .text:00000000000000f8 .LBE24
     /tmp/ccpKbp9m.s:2067   .debug_loc:00000000000000c3 .LLST2
     /tmp/ccpKbp9m.s:174    .text:0000000000000100 .LBB26
     /tmp/ccpKbp9m.s:181    .text:0000000000000104 .LBE26
     /tmp/ccpKbp9m.s:2074   .debug_loc:00000000000000e6 .LLST3
     /tmp/ccpKbp9m.s:187    .text:000000000000010c .LBB28
     /tmp/ccpKbp9m.s:194    .text:0000000000000110 .LBE28
     /tmp/ccpKbp9m.s:2081   .debug_loc:0000000000000109 .LLST4
     /tmp/ccpKbp9m.s:48     .text:0000000000000024 .LVL0
     /tmp/ccpKbp9m.s:59     .text:0000000000000044 .LVL1
     /tmp/ccpKbp9m.s:66     .text:0000000000000058 .LVL2
     /tmp/ccpKbp9m.s:71     .text:0000000000000068 .LVL3
     /tmp/ccpKbp9m.s:78     .text:000000000000007c .LVL4
     /tmp/ccpKbp9m.s:83     .text:000000000000008c .LVL5
     /tmp/ccpKbp9m.s:90     .text:00000000000000a0 .LVL6
     /tmp/ccpKbp9m.s:95     .text:00000000000000b0 .LVL7
     /tmp/ccpKbp9m.s:102    .text:00000000000000c4 .LVL8
     /tmp/ccpKbp9m.s:140    .text:00000000000000e4 .LVL12
     /tmp/ccpKbp9m.s:241    .text:0000000000000160 .LVL28
     /tmp/ccpKbp9m.s:2323   .debug_str:00000000000006e4 .LASF87
     /tmp/ccpKbp9m.s:2249   .debug_str:00000000000003ed .LASF88
     /tmp/ccpKbp9m.s:2315   .debug_str:00000000000006b4 .LASF89
     /tmp/ccpKbp9m.s:2113   .debug_str:0000000000000035 .LASF90
     /tmp/ccpKbp9m.s:2219   .debug_str:0000000000000339 .LASF109
     /tmp/ccpKbp9m.s:2273   .debug_str:00000000000004ba .LASF91
     /tmp/ccpKbp9m.s:2191   .debug_str:000000000000028b .LASF93
     /tmp/ccpKbp9m.s:2213   .debug_str:0000000000000318 .LASF92
     /tmp/ccpKbp9m.s:2137   .debug_str:00000000000000d4 .LASF94
     /tmp/ccpKbp9m.s:2151   .debug_str:0000000000000160 .LASF110
     /tmp/ccpKbp9m.s:2109   .debug_str:0000000000000021 .LASF111
     /tmp/ccpKbp9m.s:199    .text:000000000000011c .LVL21
     /tmp/ccpKbp9m.s:209    .text:000000000000012c .LVL23
     /tmp/ccpKbp9m.s:214    .text:0000000000000134 .LVL24
     /tmp/ccpKbp9m.s:232    .text:0000000000000150 .LVL27
     /tmp/ccpKbp9m.s:252    .text:0000000000000170 .LVL29
     /tmp/ccpKbp9m.s:220    .text:000000000000013c .LVL25
     /tmp/ccpKbp9m.s:116    .text:00000000000000d0 .LVL10
     /tmp/ccpKbp9m.s:133    .text:00000000000000dc .LVL11
     /tmp/ccpKbp9m.s:146    .text:00000000000000e8 .LVL13
     /tmp/ccpKbp9m.s:153    .text:00000000000000ec .LVL14
     /tmp/ccpKbp9m.s:160    .text:00000000000000f4 .LVL15
     /tmp/ccpKbp9m.s:166    .text:00000000000000f8 .LVL16
     /tmp/ccpKbp9m.s:173    .text:0000000000000100 .LVL17
     /tmp/ccpKbp9m.s:179    .text:0000000000000104 .LVL18
     /tmp/ccpKbp9m.s:186    .text:000000000000010c .LVL19
     /tmp/ccpKbp9m.s:192    .text:0000000000000110 .LVL20
     /tmp/ccpKbp9m.s:265    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN3TCB12createThreadEPFvvE
_ZN3TCB7runningE
GAS LISTING /tmp/ccpKbp9m.s 			page 16


_Z11workerBodyAv
_Z11printStringPKc
_Z11workerBodyBv
_Z11workerBodyCv
_Z11workerBodyDv
_ZN5Riscv14supervisorTrapEv
_ZN3TCB5yieldEv
_ZdlPv
_ZdaPv
